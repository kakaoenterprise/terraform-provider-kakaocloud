// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
package docs

var DataSourceDescriptions = map[string]string{
	"BeyondLoadBalancer":        "page_title: \"kakaocloud_beyond_load_balancer Resource - kakaocloud\" subcategory: \"\"\n\ndescription: |-\n\n# kakaocloud_beyond_load_balancer (Resource)\n\nRepresents a beyond load balancer resource.\n\n<!-- schema generated by tfplugindocs --> ## Schema\n\n### Required\n\n- `attached_load_balancers` (Attributes Set) Request List of load balancers belonging to the HA group (see [below for nested schema](#nestedatt--attached_load_balancers))\n- `load_balancers` (Attributes List) List of load balancers included in the high availability group (see [below for nested schema](#nestedatt--load_balancers))\n- `name` (String) High availability group name\n- `scheme` (String) Access type\n- `type_id` (String) High availability group type ID\n- `vpc_id` (String) Unique ID of the VPC\n\n### Optional\n\n- `description` (String) Description of the high availability group\n- `timeouts` (Attributes) (see [below for nested schema](#nestedatt--timeouts))\n\n### Read-Only\n\n- `availability_zones` (List of String) List of availability zones configured for the high availability group\n- `created_at` (String) Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC\n- `dns_name` (String) Associated DNS name (e.g., public address of the load balancer)\n- `id` (String) High availability group ID\n- `operating_status` (String) Operating status\n- `project_id` (String) Project ID\n- `provider_name` (String) Service provider information\n- `provisioning_status` (String) Provisioning status\n- `type` (String) [Load balancer type](https://docs.kakaocloud.com/en/service/bns/lb/lb-overview#사용-목적에-따른-로드-밸런서-유형-제공)\n- `updated_at` (String) Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC\n- `vpc_cidr_block` (String) IPv4 CIDR block of the VPC\n- `vpc_name` (String) Associated VPC name\n\n<a id=\"nestedatt--attached_load_balancers\"></a> ### Nested Schema for `attached_load_balancers`\n\nRequired:\n\n- `availability_zone` (String) Availability zone\n- `id` (String) Load balancer ID\n\n<a id=\"nestedatt--load_balancers\"></a> ### Nested Schema for `load_balancers`\n\nRead-Only:\n\n- `availability_zone` (String) List of availability zones configured for the high availability group\n- `created_at` (String) Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC\n- `description` (String) Description of the load balancer\n- `id` (String) Load balancer ID\n- `name` (String) Load balancer name\n- `operating_status` (String) Operating status\n- `provisioning_status` (String) Provisioning status\n- `subnet_cidr_block` (String) IPv4 CIDR block of the subnet\n- `subnet_id` (String) Associated subnet ID\n- `subnet_name` (String) Associated subnet name\n- `type` (String) Load balancer type\n- `type_id` (String) Load balancer type identifier\n- `updated_at` (String) Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC\n\n<a id=\"nestedatt--timeouts\"></a> ### Nested Schema for `timeouts`\n\nOptional:\n\n- `create` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n- `delete` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.\n- `read` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n- `update` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).",
	"BeyondLoadBalancers":       "The `kakaocloud_beyond_load_balancers` data source retrieves a list of Beyond Load Balancer HA Groups in KakaoCloud.\nIt supports filtering by attributes such as `name` and returns information including availability zones, VPC configuration, operating status, and the list of load balancers associated with each HA Group.\n\nUse this data source when you want to reference multiple Beyond Load Balancer HA Groups in your Terraform configuration without hardcoding their attributes.\n\n## Available filters\n\n| Filter             | Type                          | Description |\n|------------------------|-------------------------------|-------------|\n| id                     | string                       | Load balancer ID |\n| name                   | string                       | Load balancer name |\n| type                   | string                       | Load balancer type <br>Possible values: `ALB`, `NLB`, `NLB_L4_DSR` |\n| private_vip            | string                       | Internal VIP address |\n| public_vip             | string                       | External VIP address |\n| provisioning_status    | string          | Provisioning status <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| operating_status       | string  | Operating status <br>- `ONLINE`: Online <br>- `DRAINING`: Draining connections <br>- `OFFLINE`: Offline <br>- `DEGRADED`: Degraded <br>- `ERROR`: Error <br>- `NO_MONITOR`: No monitoring |\n| subnet_id              | string                       | Subnet ID |\n| subnet_cidr_block      | string                       | IPv4 CIDR block of the subnet |\n| vpc_id                 | string                       | Unique ID of the VPC |\n| vpc_name               | string                       | VPC name |\n| availability_zone      | string            | Availability zone <br>Possible values: `kr-central-2-a`, `kr-central-2-b`, `kr-central-2-c` |\n| beyond_load_balancer_name | string                    | Associated high availability group name |\n| created_at             | string                       | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at             | string                       | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"Identity":                  "The `kakaocloud_identity` data source provides information about the authentication context used in KakaoCloud.\nIt can be referenced to retrieve project, user, and token details for other resources that require identity information.\n\nThis is especially useful when you need to:\n\n- Dynamically reference the current `project_id` without hardcoding it.\n- Access the authenticated `user_id` or `user_name` for auditing and tagging.\n- Check token issue and expiration times for debugging authentication-related issues.\n\nBy using this data source, you can avoid duplicating authentication details across multiple Terraform configurations and ensure consistency.",
	"Image":                     "The `kakaocloud_image` data source retrieves information about a specific image in KakaoCloud.\nIt returns attributes such as image name, description, operating system details, disk and RAM requirements, visibility, and current status.\n\nUse this data source when you need to:\n\n- Reference an existing image by its ID in your Terraform configuration.\n- Dynamically obtain image attributes (e.g., OS type, minimum disk/RAM requirements) without hardcoding them.\n- Validate that an image is available and shared correctly across projects before creating dependent resources.",
	"ImageMembers":              "The `kakaocloud_image_members` data source allows you to retrieve the list of projects that have been granted access to a specific image in KakaoCloud.\n\nThis data source is useful when you need to:\n\n- Check whether an image is shared with other projects.\n- Retrieve member details such as `id`, `is_shared`, `status`, and timestamps for auditing.\n- Validate that image sharing settings are properly configured in your Terraform environment.\n\nBy using this data source, you can dynamically reference image sharing information without hardcoding project IDs or member states.\n\n<!-- ## Available filters 없음  Limit offSet은 제외 -->",
	"Images":                    "The `kakaocloud_images` data source retrieves a list of images available in KakaoCloud.\nIt supports filtering by attributes such as `name` and returns detailed information for each image, including operating system details, disk and RAM requirements, ownership, visibility, and status.\n\nUse this data source when you need to:\n\n- Query available images dynamically instead of hardcoding image IDs.\n- Filter images by attributes (e.g., name, OS type) to select the appropriate image for your resources.\n- Validate image properties such as minimum disk/RAM requirements before provisioning compute instances.\n\n## Available filters\n\n| Filter            | Type                | Description |\n|-----------------------|---------------------|-------------|\n| id                    | string             | Unique ID of the image |\n| name                  | string             | Image name |\n| instance_type         | ImageInstanceType  | Compatible instance type for the image <br>Possible values: <br>- `vm`: Virtual Machine type <br>- `bm`: Bare Metal Server type |\n| image_type            | ImageVisibilityType | Image visibility type <br>Possible values: <br>- `basic`: Default images provided by Kakao Cloud (Linux and Windows) <br>- `my`: Custom images created by the project user |\n| size                  | integer            | Image size (in bytes) |\n| min_disk              | integer            | Minimum disk size required to use the image (in GB) |\n| disk_format           | integer            | Disk format of the image |\n| status                | string             | Status of the image |\n| os_type               | string             | Operating system type |\n| visibility            | string             | Image visibility |\n| image_member_status   | string             | Member status of a shared image |\n| created_at            | string             | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at            | string             | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"Instance":                  "The `kakaocloud_instance` data source retrieves detailed information about a specific compute instance in KakaoCloud by its ID.\nIt returns attributes such as instance name, flavor, image, network interfaces, attached volumes, availability zone, security groups, and current status.\n\nUse this data source when you need to:\n\n- Reference an existing instance in your Terraform configuration without hardcoding its attributes.\n- Dynamically obtain instance details (e.g., attached volumes, IP addresses, or flavor information) for use in other resources.\n- Validate the state and configuration of an instance before applying changes.",
	"InstanceFlavor":            "The `kakaocloud_instance_flavor` data source retrieves detailed information about a specific instance flavor in KakaoCloud.\nIt returns attributes such as CPU, memory, disk type, availability zones, hyper-threading support, and other hardware specifications.\n\nUse this data source when you need to:\n\n- Reference a specific flavor by its ID in your Terraform configuration.\n- Dynamically obtain hardware details (e.g., vCPUs, memory, disk type) without hardcoding them.\n- Validate that a flavor meets the requirements for your workloads before creating instances.",
	"InstanceFlavors":           "The `kakaocloud_instance_flavors` data source retrieves a list of available instance flavors in KakaoCloud.\nIt supports filtering by attributes such as `name` and returns detailed specifications for each flavor, including CPU, memory, disk type, availability zones, and hardware information.\n\nUse this data source when you need to:\n\n- Query available flavors dynamically instead of hardcoding flavor IDs.\n- Filter instance flavors to select the right type for your workload (e.g., family, size, architecture).\n- Validate hardware requirements such as vCPUs, memory, or disk type before creating compute instances.\n\n## Available filters\n\n| Filter                  | Type         | Description |\n|-----------------------------|--------------|-------------|\n| id                          | string       | Instance type (Flavor) ID to query |\n| name                        | string       | Name of the instance type |\n| is_burstable                | boolean      | Whether the instance type is burstable |\n| vcpus                       | integer      | Number of virtual CPUs |\n| architecture                | string       | Architecture of the instance type (CPU structure) |\n| memory_mb                   | integer      | Memory size (in MB) |\n| instance_type               | string | Instance type <br>Possible values: <br>- `vm`: Virtual Machine type <br>- `bm`: Bare Metal Server type <br>- `gpu`: GPU type |\n| instance_family             | string       | [Instance family](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-instance-overview#instance-family) <br>- Example: `r2a`, `c2a` |\n| instance_size               | string       | Instance size |\n| manufacturer                | string       | Manufacturer information |\n| maximum_network_interfaces  | integer      | Maximum number of network interfaces |\n| processor                   | string       | Processor name |\n| created_at                  | string       | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at                  | string       | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"Instances":                 "The `kakaocloud_instances` data source retrieves a list of compute instances in KakaoCloud.\nIt supports filtering by attributes such as `name` and returns detailed information about each instance, including flavor, image, network interfaces, attached volumes, availability zone, security groups, and current status.\n\nUse this data source when you need to:\n\n- Query multiple existing instances dynamically instead of hardcoding instance IDs.\n- Filter instances by attributes (e.g., name, flavor, or availability zone) to use in other resources.\n- Validate instance configurations or states before applying changes in your Terraform environment.\n\n## Available filters\n\n| Filter         | Type            | Description |\n|-------------------|-----------------|-------------|\n| id                | string          | ID of the instance to query |\n| name              | string          | Name of the instance <br>- Used when searching for instances containing a specific name |\n| vm_state          | string          | State code of the instance  |\n| flavor_name       | string          | Name of the instance flavor (type) |\n| image_name        | string          | Name of the image used when creating the instance |\n| private_ip        | string          | Private IP address assigned to the instance (IPv4 format) |\n| public_ip         | string          | Public IP address associated with the instance |\n| availability_zone | string | Availability zone of the instance <br>Possible values: <br>- `kr-central-2-a`: Availability zone `kr-central-2-a` <br>- `kr-central-2-b`: Availability zone `kr-central-2-b` <br>- `kr-central-2-c`: Availability zone `kr-central-2-c` |\n| instance_type     | string    | Type of the instance <br>Possible values: <br>- `vm`: Virtual Machine type <br>- `bm`: Bare Metal Server type <br>- `gpu`: GPU type |\n| status            | string          | Detailed status information of the instance <br>- Internally defined status values |\n| user_id           | string          | ID of the user who created the instance |\n| hostname          | string          | Hostname of the instance (e.g., internal DNS name) |\n| os_type           | string          | Operating system type |\n| is_hadoop         | boolean         | Whether the instance was created for a Hadoop environment |\n| is_k8se           | boolean         | Whether the instance was created for a Kubernetes Engine environment |",
	"Keypair":                   "The `kakaocloud_keypair` data source retrieves information about a specific key pair in KakaoCloud using its name.\nIt returns attributes such as the key pair ID, fingerprint, type, public key, creation time, and the user who owns the key pair.\n\nUse this data source when you need to:\n\n- Reference an existing key pair in your Terraform configuration without hardcoding its properties.\n- Dynamically obtain the fingerprint or public key of a key pair for use in other resources.\n- Validate that a key pair exists before attaching it to compute instances.",
	"Keypairs":                  "The `kakaocloud_keypairs` data source retrieves a list of key pairs in KakaoCloud.\nIt supports filtering by attributes such as `name` and returns details including key pair ID, name, fingerprint, type, public key, creation time, and owner information.\n\nUse this data source when you need to:\n\n- Query all existing key pairs dynamically without hardcoding their names or IDs.\n- Filter key pairs to select the correct one for attaching to compute instances.\n- Validate key pair properties (e.g., fingerprint, type) before using them in other Terraform resources.\n\n## Available filters\n\n| Filter    | Type     | Description |\n|--------------|----------|-------------|\n| id           | string   | Unique ID of the key pair |\n| name         | string   | Name of the key pair |\n| type         | string   | Type of the key pair <br>Examples: `ssh`, `x509` |\n| fingerprint  | string   | Fingerprint of the public key |\n| created_at   | string   | Time when the resource was created <br>- ISO_8601 format <br>- UTC |",
	"KubernetesEngineCluster":   "The `kakaocloud_kubernetes_engine_cluster` data source retrieves information about a specific Kubernetes Engine cluster in KakaoCloud by its name.\nIt returns attributes such as the cluster network configuration, control plane endpoint, VPC settings, Kubernetes version, upgrade availability, and current status.\n\nUse this data source when you need to:\n\n- Reference an existing Kubernetes cluster in your Terraform configuration without hardcoding its attributes.\n- Dynamically obtain cluster details (e.g., pod/service CIDRs, control plane host/port, version information) for use in other resources.\n- Validate the status and configuration of a cluster before applying changes to workloads or related infrastructure.",
	"KubernetesEngineClusters":  "The `kakaocloud_kubernetes_engine_clusters` data source retrieves a list of Kubernetes Engine clusters in KakaoCloud.\nIt returns details for each cluster, including network configuration, control plane endpoint, VPC settings, Kubernetes version, upgrade availability, and current status.\n\nUse this data source when you need to:\n\n- Query multiple existing clusters dynamically instead of hardcoding cluster names or IDs.\n- Validate cluster configurations (e.g., pod/service CIDRs, version details, upgrade availability) across projects.\n- Reference existing clusters in other Terraform resources without duplicating their attributes.\n\n<!-- ## Available filters 없음 -->",
	"LoadBalancer":              "The `kakaocloud_load_balancer` data source retrieves detailed information about a specific Load Balancer in KakaoCloud.\nIt provides attributes such as availability zone, subnet configuration, VPC details, provisioning/operating status, associated listeners, and target group counts.\n\nUse this data source when you need to:\n\n- Reference an existing load balancer without hardcoding its attributes.\n- Dynamically fetch listener or target group IDs for use in other Terraform resources.\n- Validate load balancer status (e.g., operating or provisioning) before attaching new resources.",
	"LoadBalancerFlavors":       "The `kakaocloud_load_balancer_flavors` data source retrieves a list of available load balancer flavors in KakaoCloud.\nIt returns details for each flavor, including its ID, name, description, and whether the flavor is enabled.\n\nUse this data source when you need to:\n\n- Query available load balancer flavors dynamically instead of hardcoding IDs.\n- Select the appropriate flavor for provisioning a new load balancer.\n- Validate that a specific flavor is available and enabled before referencing it in your Terraform configuration.\n\n<!-- ## Available filters 없음 -->",
	"LoadBalancerHealthMonitor": "page_title: \"kakaocloud_load_balancer_health_monitor Data Source - kakaocloud\" subcategory: \"\"\n\ndescription: |-\n\n# kakaocloud_load_balancer_health_monitor (Data Source)\n\nGet information about a KakaoCloud Load Balancer Health Monitor.\n\n<!-- schema generated by tfplugindocs --> ## Schema\n\n### Required\n\n- `id` (String) Health monitor ID\n\n### Optional\n\n- `timeouts` (Attributes) (see [below for nested schema](#nestedatt--timeouts))\n\n### Read-Only\n\n- `created_at` (String) Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC\n- `delay` (Number) Health check interval (seconds)\n- `expected_codes` (String) Range of response codes considered healthy (type=HTTP/HTTPS)\n- `http_method` (String) HTTP request method (when type=HTTP/HTTPS)\n- `http_version` (String) HTTP version\n- `max_retries` (Number) Consecutive successes required to be considered healthy\n- `max_retries_down` (Number) Consecutive failures required to be considered down\n- `name` (String) Health monitor name\n- `operating_status` (String) Operating status\n- `project_id` (String) Project ID the resource belongs to\n- `provisioning_status` (String) Provisioning status\n- `target_group_id` (String) Target group ID to associate with the health monitor\n- `target_groups` (Attributes List) List of associated target groups (see [below for nested schema](#nestedatt--target_groups))\n- `timeout` (Number) Response timeout (seconds)\n- `type` (String) Health monitor type\n- `updated_at` (String) Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC\n- `url_path` (String) URL path configured for health check (type=HTTP/HTTPS)\n\n<a id=\"nestedatt--timeouts\"></a> ### Nested Schema for `timeouts`\n\nOptional:\n\n- `read` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n\n<a id=\"nestedatt--target_groups\"></a> ### Nested Schema for `target_groups`\n\nRead-Only:\n\n- `id` (String) Target group ID",
	"LoadBalancerL7Policy":      "The `kakaocloud_load_balancer_l7_policy` data source retrieves information about a specific Layer 7 (L7) policy in KakaoCloud.\nIt returns details such as the policy action, listener ID, redirect configuration, position, status, and associated rules.\n\nUse this data source when you need to:\n\n- Reference an existing L7 policy by its ID in your Terraform configuration.\n- Dynamically obtain policy attributes (e.g., action, redirect settings, or rules) without hardcoding them.\n- Validate that an L7 policy is correctly configured before attaching it to a listener or target group.",
	"LoadBalancerL7PolicyRule":  "The `kakaocloud_load_balancer_l7_policy_rule` data source retrieves details about a specific rule within a KakaoCloud Load Balancer L7 Policy.\nIt returns attributes such as the rule type, comparison method, key/value conditions, inversion flag, and current provisioning/operating status.\n\nUse this data source when you need to:\n\n- Reference an existing L7 policy rule in your Terraform configuration by its ID.\n- Dynamically obtain rule attributes (e.g., type, key/value, compare type) without hardcoding them.\n- Validate that an L7 policy rule is correctly configured before applying or updating listener policies.",
	"LoadBalancerL7PolicyRules": "The `kakaocloud_load_balancer_l7_policy_rules` data source retrieves a list of Layer 7 (L7) policy rules associated with a specific KakaoCloud Load Balancer L7 Policy.\nIt returns attributes such as rule type, comparison method, key/value conditions, inversion flag, and provisioning/operating status.\n\nUse this data source when you need to:\n\n- Query all rules for an L7 policy dynamically instead of hardcoding them.\n- Filter rules by attributes such as type, compare type, or value to configure routing behavior.\n- Validate that an L7 policy has the expected set of rules before applying changes to your Terraform configuration.\n\n<!-- ## Available filters 없음 -->",
	"LoadBalancerListener":      "The `kakaocloud_load_balancer_listener` data source retrieves detailed information about a specific listener associated with a KakaoCloud Load Balancer.\nIt returns attributes such as protocol, port, connection limits, TLS configuration, operating and provisioning status, associated L7 policies, and SSL certificates.\n\nUse this data source when you need to:\n\n- Reference an existing listener in your Terraform configuration by its ID.\n- Dynamically obtain listener attributes (e.g., protocol, port, TLS settings) without hardcoding them.\n- Validate that a listener is correctly configured before attaching target groups or defining L7 policies.",
	"LoadBalancerListeners":     "The `kakaocloud_load_balancer_listeners` data source retrieves a list of listeners associated with KakaoCloud Load Balancers.\nIt supports filtering by attributes such as `name` and returns details including protocol, port, connection limits, TLS configuration, associated L7 policies, and SSL certificates.\n\nUse this data source when you need to:\n\n- Query multiple listeners dynamically instead of hardcoding listener IDs.\n- Filter listeners by attributes (e.g., name, protocol, or port) for use in other Terraform resources.\n- Validate that listeners are configured correctly before attaching them to load balancers or applying policies.\n\n## Available filters\n\n| Filter            | Type                        | Description |\n|-----------------------|-----------------------------|-------------|\n| id                    | string                     | Unique ID of the listener |\n| load_balancer_id      | string                     | ID of the associated load balancer |\n| protocol              | string                  | Protocol used by the listener <br>Possible values: <br>- `HTTP`: HTTP <br>- `TCP`: TCP <br>- `UDP`: UDP <br>- `TERMINATED_HTTPS`: SSL-terminated HTTPS |\n| protocol_port         | string                     | Port number on which the listener receives traffic |\n| provisioning_status   | string       | Provisioning status <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| operating_status      | string | Operating status <br>- `ONLINE`: Online <br>- `DRAINING`: Draining connections <br>- `OFFLINE`: Offline <br>- `DEGRADED`: Degraded <br>- `ERROR`: Error <br>- `NO_MONITOR`: No monitoring |\n| secret_name           | string                     | Name of the TLS certificate |\n| secret_id             | string                     | ID of the TLS certificate |\n| tls_certificate_id    | string                     | ID of the TLS certificate attached to the listener |\n| created_at            | string                     | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at            | string                     | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"LoadBalancerSecrets":       "The `kakaocloud_load_balancer_secrets` data source retrieves a list of SSL/TLS secrets available for use with KakaoCloud Load Balancers.\nIt supports filtering by attributes such as name, and provides details including creation time, expiration date, secret type, and status.\n\nUse this data source when you need to:\n\n- Dynamically fetch secret IDs or references for use in listener configuration.\n- Validate whether a secret (e.g., TLS certificate) is active before attaching it to a load balancer.\n- Manage multiple secrets without hardcoding their attributes in your Terraform configuration.\n\n## Available filters\n\n| Filter   | Type   | Description |\n|-------------|--------|-------------|\n| name        | string | Name of the certificate |\n| created_at  | string | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at  | string | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |\n| expiration  | string | Expiration date of the certificate <br>- ISO_8601 format <br>- UTC |",
	"LoadBalancers":             "The `kakaocloud_load_balancers` data source retrieves a list of existing Load Balancers in KakaoCloud.\nIt supports filtering by attributes such as name or project, and provides details including availability zone, VPC configuration, provisioning and operating status, listener information, and VIP addresses.\n\nUse this data source when you need to:\n\n- Reference multiple existing load balancers without hardcoding their attributes.\n- Dynamically filter load balancers by name, project, or other metadata.\n- Access information such as listener count, subnet, or operating status for monitoring and configuration.\n\n## Available filters\n\n| Filter                | Type                        | Description |\n|---------------------------|-----------------------------|-------------|\n| id                        | string                     | ID of the load balancer |\n| name                      | string                     | Name of the load balancer |\n| type                      | string                     | Type of the load balancer <br>Possible values: `ALB`, `NLB`, `NLB_L4_DSR` |\n| private_vip               | string                     | Internal VIP address |\n| public_vip                | string                     | External VIP address |\n| provisioning_status       | string        | Provisioning status <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| operating_status          | string.  | Operating status <br>- `ONLINE`: Online <br>- `DRAINING`: Draining connections <br>- `OFFLINE`: Offline <br>- `DEGRADED`: Degraded <br>- `ERROR`: Error <br>- `NO_MONITOR`: No monitoring |\n| subnet_id                 | string                     | Subnet ID |\n| subnet_cidr_block         | string                     | IPv4 CIDR block of the subnet |\n| vpc_id                    | string                     | Unique ID of the VPC |\n| vpc_name                  | string                     | Name of the VPC |\n| availability_zone         | string           | Availability zone <br>Possible values: `kr-central-2-a`, `kr-central-2-b`, `kr-central-2-c` |\n| beyond_load_balancer_name | string                     | Name of the associated high availability group |\n| created_at                | string                     | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at                | string                     | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"NetworkInterface":          "The `kakaocloud_network_interface` data source retrieves detailed information about a specific Network Interface in KakaoCloud.\nIt provides attributes such as private and public IP addresses, MAC address, associated security groups, allowed address pairs, and VPC/subnet information.\n\nUse this data source when you need to:\n\n- Reference an existing network interface in your Terraform configuration.\n- Access networking details such as IPs, security groups, or VPC/subnet mappings without hardcoding values.\n- Ensure dependent resources (e.g., instances, load balancers) are correctly attached to the intended network interface.",
	"NetworkInterfaces":         "The `kakaocloud_network_interfaces` data source retrieves a list of Network Interfaces in KakaoCloud.\nYou can optionally filter results by attributes such as name, and the output includes details like private and public IP addresses, MAC address, associated security groups, allowed address pairs, and VPC/subnet information.\n\nUse this data source when you need to:\n\n- Look up multiple existing network interfaces in your project.\n- Retrieve networking details for dependency resolution in Terraform configurations.\n- Filter specific interfaces by attributes (e.g., name, project) instead of hardcoding IDs.\n\n## Available filters\n\n| Filter          | Type                   | Description |\n|--------------------|------------------------|-------------|\n| id                 | string                 | ID of the network interface |\n| name               | string                 | Name of the network interface |\n| status             | string                 | Status of the network interface <br>Possible values: <br>- `available`: Available <br>- `in_use`: In use |\n| private_ip         | string                 | Private IP address (IPv4 format) |\n| public_ip          | string                 | Public IP address |\n| device_id          | string                 | ID of the connected device (e.g., instance ID) |\n| device_owner       | string                 | Type of the resource that owns the interface (e.g., instance, router) |\n| subnet_id          | string                 | ID of the associated subnet |\n| mac_address        | string                 | MAC address of the network interface |\n| security_group_id  | string                 | Unique ID of the associated security group |\n| security_group_name| string                 | Name of the associated security group |\n| created_at         | string                 | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at         | string                 | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"PublicIp":                  "The `kakaocloud_public_ip` data source retrieves information about a specific Public IP in KakaoCloud.\nIt provides details such as the IP address itself, associated private IP, project, status, and related resource information (e.g., device, subnet, and VPC).\n\nUse this data source when you need to:\n\n- Reference an existing Public IP in your Terraform configuration.\n- Retrieve detailed networking information linked to the Public IP without hardcoding attributes.",
	"PublicIps":                 "The `kakaocloud_public_ips` data source retrieves a list of Public IPs in KakaoCloud.\nIt supports filtering by attributes such as name, and provides details including the IP address, associated private IP, project, status, and related resource information (e.g., device, subnet, and VPC).\n\nUse this data source when you need to:\n\n- Reference multiple existing Public IPs in your Terraform configuration.\n- Query networking information of Public IPs dynamically without hardcoding their attributes.\n\n## Available filters\n\n| Filter             | Type           | Description |\n|------------------------|----------------|-------------|\n| id                     | string        | Unique ID of the public IP |\n| status                 | string         | Status of the public IP <br>Possible values: <br>- `available`: Available <br>- `in_use`: In use <br>- `attaching`: Attaching |\n| public_ip              | string        | Public IP address |\n| related_resource_id    | string        | ID of the resource associated with the public IP (e.g., network interface ID) |\n| related_resource_name  | string        | Name of the resource associated with the public IP (e.g., network interface name) |\n| created_at             | string        | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at             | string        | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"RouteTable":                "The `kakaocloud_route_table` data source retrieves detailed information about a specific Route Table in KakaoCloud.\nIt provides attributes such as the associated VPC, route entries, subnet associations, provisioning status, and whether the Route Table is the main table in the VPC.\n\nUse this data source when you need to:\n\n- Reference an existing Route Table in your Terraform configuration.\n- Query routing details dynamically instead of hardcoding route information.",
	"RouteTables":               "The `kakaocloud_route_tables` data source retrieves a list of Route Tables in KakaoCloud.\nIt supports filtering by attributes such as name or ID, and provides details about associated VPCs, subnets, route entries, provisioning status, and whether each Route Table is the main table in its VPC.\n\nUse this data source when you need to:\n\n- Query and reference multiple Route Tables dynamically in your Terraform configuration.\n- Retrieve routing information for multiple VPCs or subnets without hardcoding.\n\n## Available filters\n\n| Filter               | Type              | Description |\n|--------------------------|-------------------|-------------|\n| id                       | string            | ID of the routing table |\n| name                     | string            | Name of the associated VPC |\n| provisioning_status      | string           | Provisioning status of the routing table <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| vpc_id                   | string            | ID of the associated VPC |\n| vpc_name                 | string            | Name of the associated VPC |\n| vpc_provisioning_status  | string     | Provisioning status of the VPC <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| subnet_name              | string            | Name of the associated subnet |\n| subnet_id                | string            | ID of the associated subnet |\n| association_count        | string            | Number of associated subnets |\n| destination              | string            | Routing destination |\n| created_at               | string            | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at               | string            | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"SecurityGroup":             "The `kakaocloud_security_group` data source retrieves detailed information about a specific Security Group in KakaoCloud.\nIt provides attributes such as name, description, stateful property, associated project, and security group rules (ingress and egress).\n\nUse this data source when you need to:\n\n- Reference an existing Security Group by its ID in your Terraform configuration.\n- Access details of rules, including protocols, port ranges, and remote IPs or groups.",
	"SecurityGroups":            "The `kakaocloud_security_groups` data source retrieves a list of Security Groups in KakaoCloud.\nIt supports filtering by attributes such as name, and provides details including group description, stateful property, associated project, and security group rules (ingress and egress).\n\nUse this data source when you need to:\n\n- Reference multiple Security Groups in your Terraform configuration.\n- Filter and inspect Security Group rules, including protocols, port ranges, and remote IPs or groups.\n\n## Available filters\n\n| Filter   | Type   | Description |\n|-------------|--------|-------------|\n| id          | string | ID of the security group |\n| name        | string | Name of the security group |\n| created_at  | string | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at  | string | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"Subnet":                    "The `kakaocloud_subnet` data source retrieves information about a specific Subnet in KakaoCloud.\nIt provides details such as availability zone, CIDR block, associated VPC and route table, project ownership, and the provisioning/operating status of the subnet.\n\nUse this data source when you need to reference an existing Subnet in your Terraform configuration without manually specifying all of its attributes.",
	"SubnetShare":               "The `kakaocloud_subnet_share` data source retrieves the list of projects that have been granted access to a specific Subnet in KakaoCloud.\nIt provides details such as the project IDs of consumers that are allowed to use the shared Subnet.\n\nUse this data source when you need to reference which projects have access to a shared Subnet in your Terraform configuration.",
	"Subnets":                   "The `kakaocloud_subnets` data source retrieves a list of Subnets in KakaoCloud.\nIt supports filtering by attributes such as name, and provides details including CIDR blocks, availability zones, project information, and associated route tables.\n\nUse this data source when you need to reference multiple existing Subnets in your Terraform configuration.\n\n## Available filters\n\n| Filter          | Type                 | Description |\n|--------------------|----------------------|-------------|\n| id                 | string               | ID of the subnet to query |\n| name               | string               | Name of the subnet to query |\n| availability_zone  | AvailabilityZone     | Availability zone of the subnet <br>Possible values: <br>- `kr-central-2-a`: Availability zone `kr-central-2-a` <br>- `kr-central-2-b`: Availability zone `kr-central-2-b` <br>- `kr-central-2-c`: Availability zone `kr-central-2-c` |\n| provisioning_status| ProvisioningStatus   | Provisioning status of the subnet <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| operating_status   | SubnetOperatingStatus | Operating status of the subnet <br>- `ONLINE`: Online <br>- `OFFLINE`: Offline <br>- `IN_MAINTENANCE`: In maintenance <br>- `ERROR`: Error |\n| cidr_block         | string               | IPv4 CIDR block of the subnet (e.g., `10.0.1.0/24`) |\n| vpc_id             | string               | ID of the associated VPC |\n| vpc_name           | string               | Name of the associated VPC |\n| route_table_id     | string               | ID of the associated route table |\n| route_table_name   | string               | Name of the associated route table |\n| is_shared          | boolean              | Whether the subnet is shared |\n| created_at         | string               | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at         | string               | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"Volume":                    "The `kakaocloud_volume` data source retrieves information about a specific Volume in KakaoCloud.\nIt provides details such as size, type, availability zone, attachment status, encryption settings, and associated instance information.\n\nUse this data source when you need to reference an existing Volume in your Terraform configuration without hardcoding all of its attributes.",
	"VolumeSnapshot":            "The `kakaocloud_volume_snapshot` data source retrieves information about a specific Volume Snapshot in KakaoCloud.\nIt provides details such as snapshot size, type, status, project information, and the source volume.\n\nUse this data source when you need to reference an existing Volume Snapshot in your Terraform configuration.",
	"VolumeSnapshots":           "The `kakaocloud_volume_snapshots` data source retrieves a list of Volume Snapshots in KakaoCloud.\nIt supports filtering by attributes such as name and provides details including snapshot size, status, project information, and the source volume.\n\nUse this data source when you need to reference multiple existing Volume Snapshots in your Terraform configuration.\n\n## Available filters\n\n| Filter             | Type    | Description |\n|------------------------|---------|-------------|\n| id                     | string  | ID of the snapshot |\n| name                   | string  | Name of the snapshot |\n| status                 | string  | Current status of the snapshot |\n| volume_id              | string  | Unique ID of the source volume |\n| is_incremental         | boolean | Whether the snapshot is incremental <br>- `true`: Contains only changes since the previous snapshot <br>- `false`: Full snapshot including all data |\n| is_dependent_snapshot  | boolean | Whether the snapshot depends on another snapshot <br>- `true`: Cannot be restored independently without the parent snapshot <br>- `false`: Can be restored independently |\n| schedule_id            | string  | ID of the schedule used to create the snapshot |\n| parent_id              | string  | ID of the parent snapshot <br>- Used to track parent snapshots in incremental chains |\n| created_at             | string  | Time when the snapshot was created <br>- ISO_8601 format <br>- UTC |\n| updated_at             | string  | Time when the snapshot was last updated <br>- ISO_8601 format <br>- UTC |",
	"VolumeType":                "The `kakaocloud_volume_type` data source retrieves a list of available Volume Types in KakaoCloud.\nIt provides details such as ID, name, and description for each Volume Type.\n\nUse this data source when you need to reference existing Volume Types in your Terraform configuration.",
	"Volumes":                   "The `kakaocloud_volumes` data source retrieves a list of Volumes in KakaoCloud.\nYou can optionally filter the results by attributes such as name, project, or status.\n\n## Available filters\n\n| Filter          | Type             | Description |\n|--------------------|------------------|-------------|\n| id                 | string           | ID of the volume to query |\n| name               | string           | Name of the volume to query |\n| status             | string           | Status of the volume  |\n| instance_id        | string           | Unique ID of the instance associated with the volume |\n| mount_point        | string           | Mount path of the volume on the instance (e.g., `/dev/vdb`) |\n| type               | string           | Storage type of the volume |\n| size               | integer          | Size of the volume in GB |\n| availability_zone  | string | Availability zone where the volume was created <br>Possible values: <br>- `kr-central-2-a`: Availability zone `kr-central-2-a` <br>- `kr-central-2-b`: Availability zone `kr-central-2-b` <br>- `kr-central-2-c`: Availability zone `kr-central-2-c` |\n| instance_name      | string           | Name of the associated instance |\n| volume_type        | string           | Name of the volume type |\n| attach_status      | string           | Attachment status of the volume <br>Examples: `attached`, `detached` |\n| is_bootable        | boolean          | Whether the volume is bootable |\n| is_encrypted       | boolean          | Whether the volume is encrypted |\n| is_root            | boolean          | Whether the volume is a root disk |\n| created_at         | string           | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at         | string           | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
	"Vpc":                       "The `kakaocloud_vpc` data source retrieves details of a specific VPC in KakaoCloud.\nIt provides information such as the CIDR block, DNS settings, default route table, and associated internet gateway (IGW).",
	"Vpcs":                      "The `kakaocloud_vpcs` data source retrieves a list of VPCs in KakaoCloud.\nIt provides details for each VPC, including CIDR block, DNS support, default route table, and internet gateway (IGW).\n\n## Available filters\n\n| Filter           | Type              | Description |\n|---------------------|-------------------|-------------|\n| id                  | string            | ID of the VPC to query  |\n| name                | string            | Name of the VPC to query |\n| cidr_block          | string            | IPv4 CIDR block of the VPC (e.g., `10.0.0.0/16`) |\n| provisioning_status | string    | Provisioning status of the VPC <br>- `ACTIVE`: Active <br>- `DELETED`: Deleted <br>- `ERROR`: Error <br>- `PENDING_CREATE`: Pending creation <br>- `PENDING_UPDATE`: Pending update <br>- `PENDING_DELETE`: Pending deletion |\n| is_default          | boolean           | Whether the VPC is a default VPC |\n| created_at          | string            | Time when the resource was created <br>- ISO_8601 format <br>- UTC |\n| updated_at          | string            | Time when the resource was last updated <br>- ISO_8601 format <br>- UTC |",
}

func GetDataSourceDescription(schema string) string {
	if desc, exists := DataSourceDescriptions[schema]; exists {
		return desc
	}
	return ""
}
