// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
package docs

var Descriptions = map[string]map[string]map[string]string{
	"bcs": {
		"AllowedAddressPairModel-Input": {
			"ip_address": "Packet transmission-allowed IP address to add to the network interface",
		},
		"AllowedAddressPairModel-Output": {
			"ip_address":  "IP address",
			"mac_address": "MAC address mapped to the IP address",
		},
		"Body_attach_volume": {
			"volume": "",
		},
		"Body_create_instance": {
			"instance": "",
		},
		"Body_create_keypair": {
			"keypair": "",
		},
		"Body_rebuild_instance": {
			"rebuild": "",
		},
		"Body_resize_instance": {
			"flavor": "",
		},
		"Body_update_instance": {
			"instance": "",
		},
		"Body_update_instance_volume": {
			"volume": "",
		},
		"Body_update_network_interface_allowed_addresses": {
			"allowed_address_pairs": "",
		},
		"CreateInstanceModel": {
			"availability_zone":          "Availability zone where the instance will be created <br/> - If not specified, it is automatically created in the availability zone that matches the specified `subnets[].id`<br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"count":                      "Number of instances to create",
			"description":                "Description of the instance",
			"flavor_id":                  "Instance type ID <br/> - Refer to [List instance types](https://docs.kakaocloud.com/openapi/bcs/list-instance-types) API",
			"image_id":                   "Unique ID of the image",
			"is_bonding":                 "Whether to enable network interface bonding <br/> - Required only when creating Bare Metal (`bm`) instances",
			"is_disable_hyper_threading": "Whether to disable hyper-threading",
			"key_name":                   "SSH key name to register with the instance",
			"name":                       "Name of the instance to create <br/> - Duplicate instance names are allowed within the same project",
			"security_groups":            "Security groups to apply to the instance",
			"subnets":                    "List of subnets to connect",
			"user_data":                  "User data script executed during instance initialization (runs only on the first boot)<br/> - Enter up to 16KB of user data script and `cloud-init` commands<br/> - Input must be a Base64-encoded string<br/> - Script is copied under `/var/lib/cloud/instances` and executed<br/>\n- To check execution logs, run:<br/>\nㄴ Ubuntu: `sudo cat /var/log/syslog` or `sudo journalctl -u cloud-final.service`<br/>\nㄴ CentOS: `sudo cat /var/log/messages` or `sudo journalctl -u cloud-final.service`<br/>\n<br/>\n⚠️ Entering incorrect or incomplete scripts may cause boot failure.",
			"volumes":                    "Volumes to attach to the instance",
		},
		"CreateInstanceSecurityGroupModel": {
			"name": "Name of the security group",
		},
		"CreateInstanceSubnetModel": {
			"id":                   "ID of the subnet to attach to the instance",
			"network_interface_id": "ID of the network interface to use <br/> - Cannot be used together with `private_ip`",
			"private_ip":           "Manually assign a private IP if needed <br/> - Use when a static IP configuration is required instead of auto-assignment <br/> - Cannot be used together with `network_interface_id`",
		},
		"CreateInstanceVolumeModel": {
			"encryption_secret_id":     "Encryption key ID <br/> - Field name `encryption_secret_uuid` has been changed to `encryption_secret_id`<br/> - Requests with `encryption_secret_uuid` are still processed but will be deprecated in the future<br/> - If both `encryption_secret_id` and `encryption_secret_uuid` are provided, only `encryption_secret_id` will be used",
			"is_delete_on_termination": "Whether to automatically delete the volume when the instance is terminated <br/> - First volume: default `true`<br/> - Additional volumes: default `false`",
			"size":                     "Volume size (GB) <br/> - Allowed range: 1 ~ 16384<br/> - For `source_type = image`, must be greater than or equal to the image's `min_disk`; for Windows images, supports up to 2048GB",
			"source_type":              "Volume source type <br/> - `image`: created from an image<br/> - `blank`: created as a blank volume (default for additional volumes)<br/> - `volume`: created from an existing volume",
			"type_id":                  "Volume type ID of the block storage to attach (currently only `gp2` general-purpose SSD supported)<br/> - Required only for `image` or `blank` source types<br/> - Refer to `volume_types.id` from [List volume types](https://docs.kakaocloud.com/openapi/bcs/list-volume-types)",
			"uuid":                     "Input value depends on `source_type`<br/>- `volume`: existing volume ID<br/>- `image`: image ID (default is `instance.image_id` in the request body)<br/>- `null`: not used<br/>- `blank`: omit",
		},
		"CreateKeypairModel": {
			"name":       "Name of the key pair to create <br/> - Duplicate key pair names are not allowed within the same project",
			"public_key": "Public key registered with the instance for secure access",
		},
		"CreateVolumeModel": {
			"is_delete_on_termination": "Whether to automatically delete the volume when the instance is terminated",
		},
		"EditInstanceModel": {
			"description": "Description of the instance <br/> - If not provided or `null`, the existing value is retained",
			"name":        "New name of the instance",
		},
		"EditVolumeModel": {
			"description":              "Description of the volume <br/> - If not provided or `null`, the existing value is retained",
			"is_delete_on_termination": "Whether to automatically delete the volume when the instance is terminated",
			"name":                     "New name of the attached volume",
		},
		"ErrorResponseModel": {
			"error": "Error information",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"FixedIpModel": {
			"ip_address": "Allocated private IP address",
			"subnet_id":  "ID of the subnet the IP belongs to",
		},
		"FlavorListModel": {
			"flavors":    "",
			"pagination": "",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"IdsModel": {
			"ids": "Security group IDs attached to the network interface",
		},
		"InstanceActionModel": {
			"action":     "Name of the performed action",
			"message":    "Result or status message of the action",
			"request_id": "Action request ID",
			"start_time": "Time when the action started",
			"updated_at": "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":    "User ID who performed the action",
		},
		"InstanceAttachedVolumeModelResponse": {
			"volume": "Volume information",
		},
		"InstanceConsoleLogModel": {
			"console-logs": "Console log of the instance",
		},
		"InstanceListModel": {
			"instances":  "",
			"pagination": "",
		},
		"InstanceModelResponse": {
			"instance": "",
		},
		"InstanceNetworkInterfaceListModel": {
			"network_interfaces": "",
			"pagination":         "",
		},
		"InstancePasswordModel": {
			"password": "Administrator password set on the instance <br/> - Windows: used for RDP (Remote Desktop Protocol) login <br/> - Provided encrypted with the SSH public key; must be decrypted with the user's SSH private key for RDP access",
		},
		"KeypairListModel": {
			"keypairs":   "",
			"pagination": "",
		},
		"PaginationModel": {
			"limit":  "Maximum number of items per page",
			"offset": "Starting position for retrieval",
			"total":  "Total number of items",
		},
		"RebuildInstanceModel": {
			"addresses":         "List of network addresses assigned to the instance",
			"attached_volumes":  "Information about volumes attached to the instance",
			"availability_zone": "Availability zone where the instance is located",
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the instance",
			"flavor":            "Virtual hardware profile information of the instance",
			"hostname":          "Host name of the instance",
			"id":                "Instance ID",
			"key_name":          "Key pair name to reset",
			"metadata":          "Key-value pairs of metadata set on the instance",
			"name":              "Name of the instance",
			"power_state":       "Numeric representation of the instance power state",
			"project_id":        "Project ID to which the instance belongs",
			"security_groups":   "List of security groups applied to the instance",
			"task_state":        "Current task state of the instance",
			"terminated_at":     "Time when the instance was terminated",
			"updated_at":        "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":           "ID of the user who created the instance",
			"vm_state":          "VM state of the instance",
		},
		"RequestRebuildInstanceModel": {
			"image_id": "Unique ID of the image",
			"key_name": "Key pair name applied to the instance, or a new key pair name for rebuilding",
		},
		"ResizeInstanceModel": {
			"id": "ID of the instance type to change to (e.g., `m2a.xlarge`) <br/> - Refer to [List instance types](https://docs.kakaocloud.com/openapi/bcs/list-instance-types) API <br/> - Refer to [Instance specifications](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type)",
		},
		"ResponseCreateInstanceModel": {
			"instance": "",
		},
		"ResponseFlavorModel": {
			"flavor": "",
		},
		"ResponseInstanceActionModel": {
			"actions": "Actions performed on the instance",
		},
		"ResponseInstanceModel": {
			"instance": "",
		},
		"ResponseRebuildInstanceModel": {
			"instance": "",
		},
		"ResponseSecurityGroup": {
			"security_group": "",
		},
		"SecurityGroupModel": {
			"id":   "Security group ID",
			"name": "Security group name",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"bcs_instance__v1__api__associate_new_public_ip__model__PublicIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IPv4 address mapped to the public IP",
			"project_id":  "Project ID to which the public IP belongs",
			"public_ip":   "Allocated public IPv4 address",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__associate_new_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bcs_instance__v1__api__associate_public_ip__model__PublicIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IPv4 address mapped to the public IP",
			"project_id":  "Project ID to which the public IP belongs",
			"public_ip":   "Externally accessible public IP address",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__associate_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bcs_instance__v1__api__attach_network_interface__model__InstanceNetworkInterfaceModel": {
			"id":          "Network interface ID",
			"mac_address": "MAC address of the network interface",
			"private_ips": "List of private IPs attached to the network interface",
			"status":      "Status of the network interface",
		},
		"bcs_instance__v1__api__attach_network_interface__model__ResponseInstanceNetworkInterfaceModel": {
			"network_interface": "",
		},
		"bcs_instance__v1__api__attach_volume__model__InstanceAttachedVolumeModel": {
			"id":                       "Unique ID of the volume",
			"instance_id":              "Unique ID of the instance",
			"is_delete_on_termination": "Whether the volume is automatically deleted when the instance is terminated",
			"mount_point":              "Mount path of the volume on the instance",
		},
		"bcs_instance__v1__api__create_instance__model__InstanceModel": {
			"admin_pass":      "Initial administrator password of the created instance <br/> - Used as the default account password when accessing the instance",
			"disk_config":     "Disk configuration method",
			"id":              "ID of the created instance",
			"security_groups": "List of security groups applied to the instance",
		},
		"bcs_instance__v1__api__create_keypair__model__KeypairModel": {
			"fingerprint": "Unique fingerprint of the public key <br/> - Used for verification by SSH clients",
			"name":        "User-specified key pair name",
			"private_key": "Private key of the created key pair <br/> - Saved in the user’s local environment and used for SSH authentication",
			"public_key":  "Public key of the created key pair <br/> - Registered to the instance and used for SSH authentication",
			"type":        "SSH key format",
			"user_id":     "ID of the user who created the key pair",
		},
		"bcs_instance__v1__api__create_keypair__model__ResponseKeypairModel": {
			"keypair": "",
		},
		"bcs_instance__v1__api__get_instance__model__InstanceAddressModel": {
			"network_interface_id": "Connected network interface ID",
			"private_ip":           "Private IP address (IPv4 format)",
			"public_ip":            "Public IP address",
		},
		"bcs_instance__v1__api__get_instance__model__InstanceAttachedVolumeModel": {
			"created_at":               "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"id":                       "ID of the attached volume",
			"is_delete_on_termination": "Whether the volume is automatically deleted when the instance is terminated",
			"is_root":                  "Whether the volume is the root disk",
			"mount_point":              "Mount path of the volume on the instance",
			"name":                     "Volume name",
			"size":                     "Volume size (in GB)",
			"status":                   "Volume status",
			"type":                     "Volume type",
		},
		"bcs_instance__v1__api__get_instance__model__InstanceFlavorModel": {
			"disk_type":                    "Disk type",
			"group":                        "Instance type group",
			"hw_count":                     "Number of hardware components included in this instance type <br/> - Example: number of GPUs",
			"hw_type":                      "Hardware type <br/> - Example: GPU",
			"id":                           "Instance type ID",
			"instance_family":              "Instance family",
			"is_burstable":                 "Whether it is a [burstable instance](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type/general-purpose/burstable-main)",
			"is_hyper_threading_supported": "Whether hyper-threading is supported",
			"manufacturer":                 "Manufacturer information",
			"maximum_network_interfaces":   "Maximum number of network interfaces",
			"memory_mb":                    "Memory size (MB, default: 0)",
			"name":                         "Instance type name",
			"os_distro":                    "Operating system distribution",
			"real_vcpus":                   "Number of actually allocated vCPUs",
			"root_gb":                      "Root disk size (GB, default: 0)",
			"vcpus":                        "Number of vCPUs",
		},
		"bcs_instance__v1__api__get_instance__model__InstanceImageModel": {
			"created_at":      "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":     "Description of the image",
			"disk_format":     "Disk format of the image",
			"id":              "Unique ID of the image",
			"image_type":      "Image type",
			"instance_type":   "Type of instance",
			"is_windows":      "Whether the image is a Windows operating system",
			"member_status":   "Status of the shared image",
			"min_disk":        "Minimum disk size required to use the image (GB)",
			"min_memory":      "Minimum memory size required to use the image (MB)",
			"name":            "Image name",
			"os_admin":        "Default administrator account name of the image",
			"os_architecture": "Operating system architecture",
			"os_distro":       "Operating system distribution",
			"os_type":         "Operating system type",
			"owner":           "Owner of the image (project ID that owns the image)",
			"size":            "Image size (in bytes)",
			"status":          "Image status",
			"updated_at":      "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__get_instance__model__InstanceModel": {
			"addresses":             "Network addresses associated with the instance",
			"attached_volume_count": "Number of block storage volumes attached to the instance",
			"attached_volumes":      "List of attached volumes",
			"availability_zone":     "Name of the availability zone where the instance was created",
			"created_at":            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":           "Description of the instance",
			"flavor":                "Instance type",
			"hostname":              "Host name of the instance",
			"id":                    "Instance ID",
			"image":                 "Image information of the instance",
			"instance_type":         "Instance type",
			"is_hadoop":             "Whether the instance was created for a Hadoop environment",
			"is_hyper_threading":    "Whether hyper-threading is enabled",
			"is_k8se":               "Whether the instance was created for a Kubernetes Engine environment",
			"key_name":              "Key pair name applied to the instance",
			"metadata":              "User-defined metadata",
			"name":                  "Instance name",
			"power_state":           "Power state code",
			"project_id":            "Project ID the instance belongs to",
			"security_group_count":  "Number of security groups attached to the instance",
			"security_groups":       "List of security groups attached to the instance",
			"status":                "Instance status <br/> - Refer to [Instance state and billing](https://docs.kakaocloud.com/en/service/bcs/vm/vm-main#instance-state-and-billing)",
			"task_state":            "Current task state",
			"updated_at":            "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":               "ID of the user who created the instance",
			"vm_state":              "Internal VM state value",
		},
		"bcs_instance__v1__api__get_instance__model__InstanceSecurityGroupModel": {
			"id":   "Security group ID",
			"name": "Security group name",
		},
		"bcs_instance__v1__api__get_instance_type__model__FlavorModel": {
			"architecture":                         "CPU architecture",
			"availability_zone":                    "List of available availability zones",
			"available":                            "Number of available bare metal nodes per availability zone",
			"created_at":                           "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":                          "Description of the instance type",
			"disk_type":                            "Disk type",
			"group":                                "Group to which the instance type belongs",
			"hw_count":                             "Number of hardware components included in this instance type <br/> - Example: number of GPUs",
			"hw_name":                              "Hardware name <br/> - Example: a100",
			"hw_type":                              "Hardware type <br/> - Example: GPU",
			"id":                                   "Instance type ID",
			"instance_family":                      "[Instance family](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-instance-overview#instance-family)",
			"instance_size":                        "Instance size",
			"instance_type":                        "Instance type <br/> - Refer to [Instance specifications](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type)",
			"is_burstable":                         "Whether it is a [burstable instance](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type/general-purpose/burstable-main)",
			"is_hyper_threading_disable_supported": "Whether disabling hyper-threading is supported",
			"is_hyper_threading_disabled":          "Whether hyper-threading is disabled",
			"is_hyper_threading_supported":         "Whether hyper-threading is supported",
			"manufacturer":                         "CPU manufacturer",
			"maximum_network_interfaces":           "Maximum number of network interfaces",
			"memory_mb":                            "Memory size (MB)",
			"name":                                 "Instance name",
			"os_distro":                            "Operating system distribution",
			"processor":                            "Processor information",
			"root_gb":                              "Root disk size (GB, default: 0)",
			"updated_at":                           "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"vcpus":                                "Detailed vCPU information",
		},
		"bcs_instance__v1__api__get_keypair__model__KeypairModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"fingerprint": "Unique fingerprint of the public key <br/> - Used for verification in SSH clients",
			"id":          "Unique ID of the key pair",
			"name":        "Key pair name",
			"public_key":  "Public key",
			"type":        "Key type",
			"user_id":     "User ID of the key pair owner",
		},
		"bcs_instance__v1__api__get_keypair__model__ResponseKeypairModel": {
			"keypair": "",
		},
		"bcs_instance__v1__api__list_instance_network_interfaces__model__InstanceNetworkInterfaceModel": {
			"allowed_address_pairs":                 "List of allowed address pairs (packet transmission-allowed IPs)",
			"created_at":                            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the resource to which the network interface is attached",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Whether network interface security is enabled",
			"mac_address":                           "MAC address of the network interface",
			"name":                                  "Network interface name",
			"private_ip":                            "Private IP address (IPv4 format) of the attached network interface",
			"project_id":                            "Project ID",
			"project_name":                          "Project name",
			"public_ip":                             "Public IP address",
			"secondary_ips":                         "List of secondary IP addresses",
			"security_groups":                       "List of security groups",
			"status":                                "Status of the network interface",
			"subnet_id":                             "ID of the connected subnet",
			"updated_at":                            "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__list_instance_types__model__FlavorModel": {
			"architecture":                         "CPU architecture of the instance type",
			"availability_zone":                    "Availability zone",
			"available":                            "Available quantity",
			"created_at":                           "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":                          "Description of the instance type",
			"disk_type":                            "Disk type",
			"group":                                "Internal identifier for classifying the instance type <br/> - Examples: `cpu_optimized`, `memory_optimized`",
			"hw_count":                             "Number of hardware components included in this instance type <br/> - Example: number of GPUs",
			"hw_name":                              "Hardware name <br/> - Example: a100",
			"hw_type":                              "Hardware type <br/> - Example: GPU",
			"id":                                   "Instance type ID",
			"instance_family":                      "Instance family name",
			"instance_size":                        "Instance size",
			"instance_type":                        "Kind of instance type",
			"is_burstable":                         "Whether the instance is a [burstable instance](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type/general-purpose/burstable-main)",
			"is_hyper_threading_disable_supported": "Whether disabling hyper-threading is supported",
			"is_hyper_threading_disabled":          "Whether hyper-threading is disabled",
			"is_hyper_threading_supported":         "Whether hyper-threading is supported",
			"manufacturer":                         "Manufacturer of the instance type",
			"maximum_network_interfaces":           "Maximum number of network interfaces",
			"memory_mb":                            "Memory size (in MB)",
			"name":                                 "Name of the instance type",
			"os_distro":                            "Operating system distribution",
			"processor":                            "Processor name",
			"root_gb":                              "Root disk size (GB, default: 0)",
			"updated_at":                           "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"vcpus":                                "Number of vCPUs",
		},
		"bcs_instance__v1__api__list_instances__model__InstanceAddressModel": {
			"network_interface_id": "Network interface ID",
			"private_ip":           "Private IP address (IPv4 format) assigned to the instance",
			"public_ip":            "Public IP address attached to the instance",
		},
		"bcs_instance__v1__api__list_instances__model__InstanceAttachedVolumeModel": {
			"created_at":               "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"id":                       "ID of the volume attached to the instance",
			"is_delete_on_termination": "Whether the attached volume is automatically deleted when the instance is deleted",
			"is_root":                  "Whether the volume is a root disk",
			"mount_point":              "Mount path of the volume in the instance",
			"name":                     "Name of the volume",
			"size":                     "Size of the volume (in GB)",
			"status":                   "Current status of the volume",
			"type":                     "Storage type of the volume",
		},
		"bcs_instance__v1__api__list_instances__model__InstanceFlavorModel": {
			"disk_type":                    "Disk type",
			"group":                        "Instance group (classified by performance and pricing) <br/> - Example: `cpu_optimized`, `memory_optimized`, `gpu`",
			"hw_count":                     "Number of hardware components included in this instance type <br/> - Example: number of GPUs",
			"hw_type":                      "Hardware type <br/> - Example: GPU",
			"id":                           "Instance type ID",
			"instance_family":              "Instance family",
			"is_burstable":                 "Whether the instance is a [burstable instance](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type/general-purpose/burstable-main)",
			"is_hyper_threading_supported": "Whether hyper-threading is supported",
			"manufacturer":                 "Hardware manufacturer",
			"maximum_network_interfaces":   "Maximum number of network interfaces that can be attached",
			"memory_mb":                    "Memory size (in MB)",
			"name":                         "Instance type name",
			"os_distro":                    "Operating system distribution",
			"real_vcpus":                   "Number of actual available virtual CPUs",
			"root_gb":                      "Root disk size (in GB)",
			"vcpus":                        "Number of virtual CPUs",
		},
		"bcs_instance__v1__api__list_instances__model__InstanceImageModel": {
			"created_at":      "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":     "Description of the image",
			"disk_format":     "Disk format of the image (e.g., qcow2, raw)",
			"id":              "Unique ID of the image",
			"image_type":      "Image type",
			"instance_type":   "Instance type",
			"is_windows":      "Whether the image is based on Windows OS",
			"member_status":   "Acceptance status of the image in the project it is shared with",
			"min_disk":        "Minimum required disk size (in GB)",
			"min_memory":      "Minimum required memory size (in MB)",
			"name":            "Image name",
			"os_admin":        "Default administrator account name of the OS (e.g., root, Administrator)",
			"os_architecture": "OS architecture (e.g., x86_64, arm64)",
			"os_distro":       "OS distribution",
			"os_type":         "OS type",
			"owner":           "Owner of the image (project ID that owns the image)",
			"size":            "Image size (in bytes)",
			"status":          "Image status (e.g., active, queued, deleted)",
			"updated_at":      "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__list_instances__model__InstanceModel": {
			"addresses":             "List of network addresses assigned to the instance",
			"attached_volume_count": "Number of attached volumes",
			"attached_volumes":      "Information of attached volumes",
			"availability_zone":     "Availability zone where the instance resides",
			"created_at":            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":           "Description of the instance",
			"flavor":                "Instance type",
			"hostname":              "Hostname of the instance",
			"id":                    "Instance ID",
			"image":                 "Image used by the instance",
			"instance_type":         "Type of the instance",
			"is_hadoop":             "Whether the instance was automatically created in a Hadoop cluster",
			"is_hyper_threading":    "Whether hyper-threading is enabled",
			"is_k8se":               "Whether the instance was created for Kubernetes Engine",
			"key_name":              "Name of the key pair set for the instance",
			"metadata":              "Metadata object in key-value pairs",
			"name":                  "Name of the instance",
			"power_state":           "Power state of the instance",
			"project_id":            "Project ID to which the instance belongs",
			"security_group_count":  "Number of security groups",
			"security_groups":       "List of security groups applied to the instance",
			"status":                "Detailed status of the instance",
			"task_state":            "Task state",
			"updated_at":            "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":               "User ID of the instance creator",
			"vm_state":              "VM state code of the instance",
		},
		"bcs_instance__v1__api__list_instances__model__InstanceSecurityGroupModel": {
			"id":   "Security group ID",
			"name": "Security group name",
		},
		"bcs_instance__v1__api__list_keypairs__model__KeypairModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"fingerprint": "Unique fingerprint of the public key <br/> - Used for verification in SSH clients",
			"id":          "Key ID",
			"name":        "Key name",
			"public_key":  "Public key string",
			"type":        "Key type",
			"user_id":     "User ID",
		},
		"bcs_instance__v1__api__rebuild_instance__model__InstanceAttachedVolumeModel": {
			"is_delete_on_termination": "Whether the attached volume is automatically deleted when the instance is deleted",
			"volume_id":                "Unique ID of the volume",
		},
		"bcs_instance__v1__api__rebuild_instance__model__InstanceFlavorModel": {
			"disk":          "Root disk size (in GB)",
			"original_name": "Instance type name",
			"ram":           "Memory size (in MB)",
			"vcpus":         "Number of virtual CPUs",
		},
		"bcs_instance__v1__api__rebuild_instance__model__InstanceSecurityGroupModel": {
			"name": "Security group name",
		},
		"bcs_instance__v1__api__remove_public_ip__model__PublicIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Connected private IP address (IPv4 format)",
			"project_id":  "Project ID to which the public IP belongs",
			"public_ip":   "Assigned public IP address",
			"status":      "Status of the public IP",
			"updated_at":  "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__remove_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bcs_instance__v1__api__update_instance__model__InstanceAttachedVolumeModel": {
			"id":                       "Volume ID",
			"is_delete_on_termination": "Whether the volume is deleted when the instance is deleted",
		},
		"bcs_instance__v1__api__update_instance__model__InstanceFlavorModel": {
			"disk":          "Root disk size (in GB)",
			"original_name": "Original flavor name (used when the server was created)",
			"ram":           "Memory size (in MB)",
			"vcpus":         "Number of virtual CPUs",
		},
		"bcs_instance__v1__api__update_instance__model__InstanceModel": {
			"addresses":         "IP addresses assigned to the instance",
			"attached_volumes":  "List of block storage volumes attached to the instance",
			"availability_zone": "Availability zone where the instance resides",
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the instance",
			"flavor":            "Information defining the specifications of the instance",
			"hostname":          "Hostname of the instance",
			"id":                "Instance ID",
			"key_name":          "Name of the key pair applied to the instance",
			"metadata":          "Field for storing additional user-defined data for the instance",
			"name":              "Instance name",
			"power_state":       "Power state code",
			"project_id":        "Project ID to which the instance belongs",
			"security_groups":   "List of security groups applied to the instance",
			"task_state":        "Current task state of the instance",
			"terminated_at":     "Termination time",
			"updated_at":        "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":           "ID of the user account that created the instance",
			"vm_state":          "Current VM state of the instance",
		},
		"bcs_instance__v1__api__update_instance__model__InstanceSecurityGroupModel": {
			"name": "Security group name",
		},
		"bcs_instance__v1__api__update_network_interface_allowed_addresses__model__InstanceNetworkInterfaceModel": {
			"created_at":                            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the resource that the network interface is attached to",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Whether the network interface security feature is enabled",
			"mac_address":                           "MAC address of the network interface",
			"name":                                  "Network interface name",
			"private_ip":                            "Private IP address of the network interface (IPv4 format)",
			"project_id":                            "Project ID to which the network interface belongs",
			"secondary_ips":                         "List of additional secondary IP addresses assigned to the interface",
			"security_groups":                       "List of security groups assigned to the network interface",
			"status":                                "Status of the network interface",
			"updated_at":                            "Time when the resource was last modified <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bcs_instance__v1__api__update_network_interface_allowed_addresses__model__ResponseInstanceNetworkInterfaceModel": {
			"network_interface": "",
		},
	},
	"iam": {
		"AccessRule": {
			"id":      "",
			"method":  "",
			"path":    "",
			"service": "",
		},
		"KeystoneError": {
			"error":         "",
			"error.code":    "",
			"error.message": "",
			"error.title":   "",
		},
		"SwaggerApplicationCredential": {
			"id":     "",
			"secret": "",
		},
		"SwaggerAuth": {
			"identity": "",
			"scope":    "",
		},
		"SwaggerDomain": {
			"name": "",
		},
		"SwaggerIdPwd": {
			"application_credential": "",
			"methods":                "",
			"password":               "",
		},
		"SwaggerIdPwdRequest": {
			"auth": "",
		},
		"SwaggerPasswordUser": {
			"domain":   "",
			"name":     "",
			"password": "",
		},
		"SwaggerProject": {
			"domain": "",
			"name":   "",
		},
		"SwaggerScope": {
			"project": "",
		},
		"SwaggerUserPassword": {
			"user": "",
		},
		"Token": {
			"OS-TRUST:trust":         "",
			"application_credential": "",
			"audit_ids":              "",
			"catalog":                "",
			"domain":                 "",
			"expires_at":             "",
			"is_domain":              "",
			"issued_at":              "",
			"methods":                "",
			"project":                "",
			"roles":                  "",
			"system":                 "",
			"user":                   "",
		},
		"TokenApplicationCredential": {
			"access_rules": "",
			"description":  "",
			"expires_at":   "",
			"id":           "",
			"links":        "",
			"name":         "",
			"project_id":   "",
			"restricted":   "",
			"roles":        "",
			"secret":       "",
			"unrestricted": "",
			"user_id":      "",
		},
		"TokenCatalog": {
			"endpoints": "",
			"id":        "",
			"name":      "",
			"type":      "",
		},
		"TokenDomain": {
			"id":   "",
			"name": "",
		},
		"TokenEndpoint": {
			"id":        "",
			"interface": "",
			"region":    "",
			"region_id": "",
			"url":       "",
		},
		"TokenLinks": {
			"next":     "",
			"previous": "",
			"self":     "",
		},
		"TokenOSTrust": {
			"id":            "",
			"impersonation": "",
			"links":         "",
			"trustee_user":  "",
			"trustor_user":  "",
		},
		"TokenProject": {
			"domain": "",
			"id":     "",
			"name":   "",
		},
		"TokenResponse": {
			"token": "",
		},
		"TokenRole": {
			"description": "",
			"domain_id":   "",
			"id":          "",
			"name":        "",
		},
		"TokenSystem": {
			"all": "",
		},
		"TokenTrustUser": {
			"id":    "",
			"links": "",
		},
		"TokenUser": {
			"domain":              "",
			"domain_id":           "",
			"id":                  "",
			"name":                "",
			"password":            "",
			"password_expires_at": "",
		},
	},
	"image": {
		"Body_update_image": {
			"image": "",
		},
		"EditImageModel": {
			"description": "Description of the image <br/> - If this field is not used or set to `null`, the existing value is retained",
			"name":        "Name of the image to update",
		},
		"ErrorResponseModel": {
			"error": "Information about the error",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"ImageListModel": {
			"images":     "",
			"pagination": "",
		},
		"ImageMemberListModel": {
			"members":    "",
			"pagination": "",
		},
		"PaginationModel": {
			"limit":  "Maximum number of items per page",
			"offset": "Starting position for retrieval",
			"total":  "Total number of items",
		},
		"ResponseImageMemberModel": {
			"member": "",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"bcs_image__v1__api__add_image_share__model__ImageMemberModel": {
			"created_at": "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":         "ID of the project receiving the shared image",
			"image_id":   "Unique ID of the image",
			"status":     "Image sharing status",
			"updated_at": "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bcs_image__v1__api__get_image__model__ImageModel": {
			"container_format":    "Container format of the image",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the image",
			"disk_format":         "Disk format of the image",
			"id":                  "Unique ID of the image",
			"image_member_status": "Sharing status of the image member (project) <br/>- Available if the image is shared from another project",
			"instance_type":       "Compatible instance types for the image <br/>- `gpu` images can be checked in `vm` images",
			"is_shared":           "Whether the image is shared",
			"min_disk":            "Minimum disk size required to use this image (GB)",
			"min_ram":             "Minimum memory required to use this image (MB)",
			"name":                "Name of the image",
			"os_info":             "Operating system information of the image",
			"owner":               "Owner of the image (project ID that owns the image)",
			"project_id":          "Unique ID of the project",
			"size":                "Size of the image (in bytes)",
			"status":              "Status of the image",
			"updated_at":          "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
			"virtual_size":        "Size of the image (in bytes)",
			"visibility":          "Visibility of the image <br/> - `public`: Visible to all users <br/> - `private`: Available only to the owning project <br/> - `shared`: Shared only with selected projects",
		},
		"bcs_image__v1__api__get_image__model__OsInfoModel": {
			"admin_user":   "Default administrator account name of the image",
			"architecture": "System architecture",
			"distro":       "Name of the distribution",
			"is_hidden":    "Whether the image is hidden",
			"type":         "Operating system type",
		},
		"bcs_image__v1__api__get_image__model__ResponseImageModel": {
			"image": "",
		},
		"bcs_image__v1__api__list_image_shared_projects__model__ImageMemberModel": {
			"created_at": "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":         "ID of the project receiving the shared image",
			"image_id":   "Unique ID of the image",
			"is_shared":  "Whether the image is shared",
			"status":     "Image sharing status",
			"updated_at": "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bcs_image__v1__api__list_images__model__ImageModel": {
			"container_format":    "Container format of the image",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the image",
			"disk_format":         "Disk format of the image",
			"id":                  "Unique ID of the image",
			"image_member_status": "Sharing status of the image member (project) <br/>- Available if the image is shared from another project",
			"instance_type":       "Compatible instance types for the image <br/> - `gpu` images can be checked in `vm` images",
			"is_shared":           "Whether the image is shared",
			"min_disk":            "Minimum disk size required to use the image (GB)",
			"min_ram":             "Minimum memory required to use the image (MB)",
			"name":                "Name of the image",
			"os_info":             "Operating system information of the image",
			"owner":               "Owner of the image (project ID that owns the image)",
			"project_id":          "Unique ID of the project",
			"size":                "Size of the image (in bytes)",
			"status":              "Status of the image",
			"updated_at":          "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
			"virtual_size":        "Virtual size of the image",
			"visibility":          "Visibility of the image",
		},
		"bcs_image__v1__api__list_images__model__OsInfoModel": {
			"admin_user":   "Default administrator account name of the image",
			"architecture": "CPU architecture",
			"distro":       "Name of the distribution",
			"is_hidden":    "Whether the image is hidden",
			"type":         "Operating system type",
		},
		"bcs_image__v1__api__update_image__model__ImageModel": {
			"container_format": "Container format of the image",
			"created_at":       "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":      "Description of the image",
			"disk_format":      "Disk format of the image",
			"id":               "Unique ID of the image",
			"instance_type":    "Compatible instance types for the image <br/> - `gpu` images can be checked in `vm` images",
			"is_shared":        "Whether the image is shared",
			"min_disk":         "Minimum disk size required to use the image (GB)",
			"min_ram":          "Minimum memory required to use the image (MB)",
			"name":             "Name of the image",
			"os_info":          "Operating system information of the image",
			"owner":            "Owner of the image (project ID that owns the image)",
			"size":             "Size of the image (in bytes)",
			"status":           "Status of the image",
			"updated_at":       "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
			"virtual_size":     "Virtual disk size of the image",
			"visibility":       "Visibility of the image",
		},
		"bcs_image__v1__api__update_image__model__OsInfoModel": {
			"admin_user":   "Default administrator account name of the image",
			"architecture": "Operating system architecture",
			"distro":       "Name of the distribution",
			"is_hidden":    "Whether the image is hidden",
			"type":         "Operating system type",
		},
		"bcs_image__v1__api__update_image__model__ResponseImageModel": {
			"image": "",
		},
	},
	"kubernetesengine": {
		"AddressResponseModel": {
			"address": "Node IP address",
			"type":    "Node address type",
		},
		"AllocatableResourcesResponseModel": {
			"cpu":               "Available CPU (number of cores)",
			"ephemeral_storage": "Available ephemeral storage capacity",
			"hugepages_1Gi":     "HugePages memory allocation (1Gi)",
			"hugepages_2Mi":     "HugePages memory allocation (2Mi)",
			"memory":            "Available memory",
			"pods":              "Limit on the number of schedulable pods",
		},
		"ClusterNetworkRequestModel": {
			"cni":          "CNI (Container Network Interface) plugin in use <br/> - `cilium`: High-performance eBPF-based CNI with low latency and strong security policies  <br/> - `calico`: Widely used CNI with simple configuration and multiple networking modes",
			"pod_cidr":     "IP range for pods",
			"service_cidr": "IP range for cluster services",
		},
		"ClusterNetworkResponseModel": {
			"cni":          "CNI (Container Network Interface) plugin in use <br/> - `cilium`: High-performance eBPF-based CNI with low latency and strong security policies  <br/> - `calico`: Widely used CNI with simple configuration and multiple networking modes",
			"pod_cidr":     "IP range used by pods",
			"service_cidr": "IP range used by cluster services",
		},
		"ConditionResponseModel": {
			"last_heartbeat_time":  "Last heartbeat time",
			"last_transition_time": "Last time the status changed",
			"message":              "Status-related message",
			"reason":               "Reason for the status change",
			"status":               "Status information",
			"type":                 "Status type",
		},
		"ControlPlaneEndpointResponseModel": {
			"host": "Control plane access address",
			"port": "Control plane access port",
		},
		"CreateK8sClusterNodePoolRequestModel": {
			"node_pool": "Target node pool",
		},
		"CreateK8sClusterNodePoolScalingScheduleRequestModel": {
			"scheduled_scaling": "Scheduled autoscaling information",
		},
		"CreateK8sClusterRequestModel": {
			"cluster": "Target cluster information",
		},
		"CreatorInfoResponseModel": {
			"id":   "Creator ID",
			"name": "Creator name",
		},
		"CurrentOMTResponseModel": {
			"eol":           "End of support date (ISO 8601 format, UTC)",
			"is_deprecated": "Whether this version is deprecated",
			"minor_version": "Kubernetes minor version",
			"next_version":  "Next upgradable version",
			"patch_version": "Kubernetes patch version",
		},
		"DeleteK8sClusterNodesRequestModel": {
			"cluster": "Target cluster information",
		},
		"ErrorResponseModel": {
			"error": "Error information",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"EventResponseModel": {
			"component":          "Component that triggered the event",
			"creation_timestamp": "Event creation time",
			"message":            "Event message",
			"reason":             "Reason for the event",
			"type":               "Event type",
		},
		"GetK8sClusterNodePoolNodeDetailResponseModel": {
			"details": "Detailed Kubernetes node information",
		},
		"GetK8sClusterNodePoolNodeResponseModel": {
			"node": "Node information",
		},
		"GetK8sClusterNodePoolNodesResponseModel": {
			"nodes": "List of nodes",
		},
		"GetK8sClusterNodePoolResponseModel": {
			"node_pool": "Node pool information",
		},
		"GetK8sClusterNodePoolScalingScheduleResponseModel": {
			"scheduled_scaling": "Scheduled autoscaling information",
		},
		"GetK8sClusterNodePoolsResponseModel": {
			"node_pools": "List of node pools in the cluster",
		},
		"GetK8sClusterNodesResponseModel": {
			"nodes": "List of nodes in the cluster",
		},
		"GetK8sClusterResponseModel": {
			"cluster": "Cluster information",
		},
		"GetK8sClusterUpgradableVersionsResponseModel": {
			"upgrade": "Cluster upgrade information",
		},
		"GetK8sClustersResponseModel": {
			"clusters": "List of clusters",
		},
		"GetK8sImagesResponseModel": {
			"images": "Image information",
		},
		"GetK8sServiceAgentsResponseModel": {
			"service_agent": "Service agent information",
		},
		"GetK8sUpgradeVersionsResponseModel": {
			"versions": "List of Kubernetes version information",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"ImageInfoResponseModel": {
			"architecture":   "Image architecture",
			"id":             "Unique ID of the image",
			"instance_type":  "Supported instance type for the image",
			"is_gpu_type":    "Whether the image supports GPU",
			"kernel_version": "Kernel version",
			"key_package":    "Key package information included in the image",
			"name":           "Image name",
			"os_distro":      "Operating system distribution",
			"os_type":        "Operating system type",
			"os_version":     "Operating system version",
		},
		"ImageResponseModel": {
			"architecture":   "Image architecture",
			"id":             "Unique ID of the image",
			"instance_type":  "Supported instance type for the image",
			"is_gpu_type":    "Whether the image supports GPU",
			"k8s_version":    "Target Kubernetes version",
			"kernel_version": "Kernel version",
			"key_package":    "Key package information included in the image",
			"name":           "Image name",
			"os_distro":      "Operating system distribution",
			"os_type":        "Operating system type",
			"os_version":     "Operating system version",
		},
		"LabelInfoResponseModel": {
			"key":   "Label key",
			"value": "Label value",
		},
		"LabelRequestModel": {
			"key":   "Label key",
			"value": "Label value",
		},
		"LabelResponseModel": {
			"key":   "Label key",
			"value": "Label value",
		},
		"MetadataResponseModel": {
			"annotations": "Annotations set on the node\n\n <!--- Intentionally left in English --->",
			"labels":      "Labels set on the node",
			"name":        "Node name",
		},
		"NodeDetailResponseModel": {
			"api_version": "API version",
			"events":      "List of node-related events (e.g., scheduling, status changes)",
			"kind":        "Resource type",
			"metadata":    "Node metadata",
			"pods":        "List of pods assigned to the node",
			"spec":        "Node spec",
			"status":      "Node status\n\n <!--- Intentionally left in English --->",
		},
		"NodeLabelsRequestModel": {
			"add_or_update_labels": "List of labels to add or update",
			"remove_label_keys":    "List of label keys to remove",
		},
		"NodePoolLabelResponseModel": {
			"id":     "Unique ID of the node pool",
			"labels": "List of labels applied to the node pool",
			"name":   "Node pool name",
		},
		"NodePoolScalingResourceRequestModel": {
			"autoscaler_desired_node_count":       "Desired node count targeted by the autoscaler",
			"autoscaler_max_node_count":           "Maximum node count allowed by resource-based autoscaling",
			"autoscaler_min_node_count":           "Minimum node count allowed by resource-based autoscaling",
			"autoscaler_scale_down_threshold":     "Threshold condition for resource-based autoscaling scale-down <br/> - Specified as a ratio (0–1), up to two decimal places",
			"autoscaler_scale_down_unneeded_time": "Duration of the scale-down threshold condition (seconds) <br/> - Valid range: 1–86400",
			"autoscaler_scale_down_unready_time":  "Exclusion time for monitoring unready nodes during resource-based scale-down (seconds) <br/> - Valid range: 1–86400",
			"is_autoscaler_enable":                "Whether resource-based autoscaling is enabled",
		},
		"NodePoolScriptRequestModel": {
			"user_data": "User script to run when creating nodes in the node pool (requires base64 encoding)",
		},
		"NodePoolScriptResponseModel": {
			"id":        "Unique ID of the node pool",
			"name":      "Node pool name",
			"user_data": "Configured user script (base64 encoded)",
		},
		"OMTInfoResponseModel": {
			"eol":           "End of support date (ISO 8601 format, UTC)",
			"is_deprecated": "Whether this version is deprecated",
			"minor_version": "Kubernetes minor version",
			"next_version":  "Next upgradable version",
			"patch_version": "Kubernetes patch version",
		},
		"PodResponseModel": {
			"creation_timestamp": "Pod creation time (ISO 8601, UTC)",
			"ip":                 "Pod IP address",
			"name":               "Pod name",
			"namespace":          "Pod namespace",
			"status":             "Pod status",
		},
		"ScalingHistoryResponseModel": {
			"description":   "Description of the history",
			"occurred_time": "Event occurrence time",
			"state":         "State value",
		},
		"ScalingStatusResponseModel": {
			"histories": "List of past executions",
		},
		"ScheduleRequestModel": {
			"desired_nodes": "Desired number of nodes when scheduled autoscaling runs",
			"name":          "Scheduled autoscaling rule name",
			"schedule":      "Schedule for autoscaling execution <br/> - Can only be set when `schedule_type` is `cron` <br/> - 5-field cron expression <br/> - Only daily/weekly/monthly cycles are supported",
			"schedule_type": "Repetition type for scheduled autoscaling <br/> - `cron`: Periodic execution (based on cron expression) <br/> - `once`: Run only once at the specified start time",
			"start_time":    "Reference time when scheduled autoscaling can actually run (ISO 8601, UTC) <br/> - The rule runs periodically starting from `start_time` <br/> - Can be set to the minute level (seconds not supported)",
		},
		"ScheduledScaleResponseModel": {
			"created_at":    "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"desired_nodes": "Target number of nodes to maintain in the node pool when the schedule is executed",
			"name":          "Scheduled autoscaling rule name",
			"schedule":      "Scheduled autoscaling execution cycle",
			"schedule_type": "Scheduled autoscaling type",
			"start_time":    "Reference time when scheduled autoscaling can actually run (ISO 8601, UTC)",
			"status":        "Status information",
		},
		"ServiceAgentResponseModel": {
			"is_exist": "Whether a service agent exists",
		},
		"SpecResponseModel": {
			"taints": "List of taints applied to the node",
		},
		"TaintRequestModel": {
			"effect": "Effect of the taint (policy preventing pods from being scheduled on the node) <br/> - `NoExecute`: New pods are not scheduled, and existing pods are evicted <br/> - `NoSchedule`: New pods are not scheduled on this node (existing pods are not affected) <br/> - `PreferNoSchedule`: Prefer not to schedule pods, but they may be scheduled if necessary (soft constraint)",
			"key":    "Taint key",
			"value":  "Taint value",
		},
		"TaintResponseModel": {
			"effect": "Effect of the taint (policy preventing pods from being scheduled on the node) <br/> - `NoExecute`: New pods are not scheduled, and existing pods are evicted <br/> - `NoSchedule`: New pods are not scheduled on this node (existing pods are not affected) <br/> - `PreferNoSchedule`: Prefer not to schedule pods, but they may be scheduled if necessary (soft constraint)",
			"key":    "Taint key",
			"value":  "Taint value",
		},
		"UpdateK8sClusterNodePoolNodeLabelsRequestModel": {
			"labels": "Label information",
		},
		"UpdateK8sClusterNodePoolNodeLabelsResponseModel": {
			"node_pool": "Node pool information",
		},
		"UpdateK8sClusterNodePoolRequestModel": {
			"node_pool": "Target node pool",
		},
		"UpdateK8sClusterNodePoolUserScriptRequestModel": {
			"node_pool": "Node pool configuration",
		},
		"UpdateK8sClusterNodePoolUserScriptResponseModel": {
			"node_pool": "Node pool information",
		},
		"UpdateK8sClusterNodesCordonRequestModel": {
			"cluster": "Cluster name",
		},
		"UpdateK8sClusterRequestModel": {
			"cluster": "Target cluster name",
		},
		"UpdateKubernetesEngineClusterNodePoolScalingResourceRequestModel": {
			"autoscaling": "Resource-based autoscaling configuration of the node pool",
		},
		"UpgradeResponseModel": {
			"current":    "Current cluster version",
			"upgradable": "List of Kubernetes versions that can be upgraded from the current version",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"VpcInfoRequestModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "List of subnet IDs to connect",
		},
		"kubernetes_engine__v1__api__create_cluster__model__ClusterRequestModel": {
			"description":     "Description of the cluster",
			"is_allocate_fip": "Whether to allocate a public IP <br/> - `true`: Allocate a public IP <br/> - `false`: Do not allocate a public IP",
			"name":            "Cluster name",
			"network":         "Cluster network configuration information",
			"version":         "Kubernetes version of the cluster",
			"vpc_info":        "VPC information where the cluster belongs",
		},
		"kubernetes_engine__v1__api__create_node_pool__model__NodePoolRequestModel": {
			"description":        "Description of the node pool",
			"flavor_id":          "Instance type ID",
			"image_id":           "Unique ID of the image",
			"is_hyper_threading": "Whether hyper-threading is enabled <br/> - `true`: Enable hyper-threading, recognizing 2 vCPUs per physical core <br/> - `false`: Disable hyper-threading, recognizing vCPUs equal to the number of physical cores",
			"labels":             "List of labels to apply to the node pool (key/value pairs)",
			"name":               "Target node pool name",
			"node_count":         "Number of nodes in the node pool",
			"security_groups":    "List of security group IDs to connect",
			"ssh_key_name":       "SSH key name",
			"taints":             "List of taints to apply to the node pool",
			"user_data":          "User script to run when creating nodes in the node pool (requires base64 encoding)",
			"volume_size":        "Root volume size of the node pool (GiB)",
			"vpc_info":           "VPC information for creating the node pool",
		},
		"kubernetes_engine__v1__api__delete_cluster_nodes__model__ClusterRequestModel": {
			"is_remove":  "Whether to delete or recreate nodes <br/> - `true`: Delete the nodes from the cluster <br/> - `false`: Recreate the nodes (drain nodes, create new ones, then delete the old ones)",
			"node_names": "List of node names to remove",
		},
		"kubernetes_engine__v1__api__get_cluster__model__ClusterResponseModel": {
			"api_version":            "API version",
			"control_plane_endpoint": "Control plane endpoint information",
			"created_at":             "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"creator_info":           "Creator information",
			"description":            "Description of the cluster",
			"failure_message":        "Failure message if the cluster status changes to `Failed`",
			"id":                     "Unique ID of the cluster",
			"is_allocate_fip":        "Whether a public IP is allocated",
			"is_upgradable":          "Whether the cluster can be upgraded",
			"name":                   "Cluster name",
			"network":                "Cluster network information",
			"status":                 "Cluster status",
			"version":                "Kubernetes version of the cluster",
			"vpc_info":               "VPC information where the cluster belongs",
		},
		"kubernetes_engine__v1__api__get_cluster__model__StatusResponseModel": {
			"phase": "Current cluster status <br/> - `Pending`: Pending <br/> - `Provisioning`: Creating <br/> - `Provisioned`: Created <br/> - `Updating`: Updating <br/> - `Deleting`: Deleting <br/> - `Failed`: Error occurred",
		},
		"kubernetes_engine__v1__api__get_cluster__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"id":                "Unique ID of the subnet",
		},
		"kubernetes_engine__v1__api__get_cluster__model__VPCInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "List of subnet information",
		},
		"kubernetes_engine__v1__api__get_cluster_node__model__NodeResponseModel": {
			"created_at":         "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"failure_message":    "Failure message if the node status changes to `Failed`",
			"flavor":             "Instance type",
			"id":                 "Unique ID of the node",
			"image":              "Image information",
			"ip":                 "Node IP address",
			"is_cordon":          "Whether the node is in cordon (scheduling disabled) state",
			"is_hyper_threading": "Whether hyper-threading is enabled",
			"name":               "Node name",
			"node_pool_name":     "Node pool name",
			"ssh_key_name":       "SSH key name",
			"status":             "Node status",
			"updated_at":         "Last modified time of the resource <br/> - ISO_8601 format  <br/> - UTC",
			"version":            "Kubernetes version of the node",
			"volume_size":        "Root volume size of the node (GiB)",
			"vpc_info":           "VPC information where the node belongs",
		},
		"kubernetes_engine__v1__api__get_cluster_node__model__StatusInfoResponseModel": {
			"phase": "Current node status <br/> - `Running`: Running normally <br/> - `Running (Scheduling Disable)`: Running but scheduling disabled <br/> - `Provisioned`: Created <br/> - `Deleted`: Deleted <br/> - `Pending`: Pending <br/> - `Provisioning`: Creating <br/> - `Deleting`: Deleting <br/> - `Failed`: Error occurred",
		},
		"kubernetes_engine__v1__api__get_cluster_node__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"id":                "Unique ID of the subnet",
		},
		"kubernetes_engine__v1__api__get_cluster_node__model__VpcInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "List of subnet IDs",
		},
		"kubernetes_engine__v1__api__get_cluster_node_details__model__StatusResponseModel": {
			"addresses":   "List of node addresses",
			"allocatable": "Resources available on the node",
			"conditions":  "List of node status conditions (e.g., Ready, DiskPressure)\n\n<!--- Keep 'status' in English --->",
		},
		"kubernetes_engine__v1__api__get_node_pool__model__AutoscalingResponseModel": {
			"autoscaler_desired_node_count":       "Desired node count targeted by the autoscaler",
			"autoscaler_max_node_count":           "Maximum node count allowed by resource-based autoscaling",
			"autoscaler_min_node_count":           "Minimum node count allowed by resource-based autoscaling",
			"autoscaler_scale_down_threshold":     "Threshold condition for resource-based autoscaling scale-down",
			"autoscaler_scale_down_unneeded_time": "Duration of the scale-down threshold condition (seconds)",
			"autoscaler_scale_down_unready_time":  "Exclusion time for monitoring unready nodes during scale-down (seconds)",
			"is_autoscaler_enable":                "Whether resource-based autoscaling is enabled",
		},
		"kubernetes_engine__v1__api__get_node_pool__model__NodePoolResponseModel": {
			"autoscaling":        "Resource-based autoscaling configuration of the node pool",
			"cluster_name":       "Name of the cluster the node pool belongs to",
			"created_at":         "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"description":        "Description of the node pool",
			"failure_message":    "Failure message if a node in the node pool changes to `Failed`",
			"flavor":             "Instance type",
			"flavor_id":          "Instance type ID",
			"id":                 "Unique ID of the node pool",
			"image":              "Image information",
			"is_bare_metal":      "Whether the node pool is bare metal type",
			"is_cordon":          "Whether all nodes in the node pool are in cordon (scheduling disabled) state",
			"is_gpu":             "Whether the node pool is GPU type",
			"is_hyper_threading": "Whether hyper-threading is enabled",
			"is_upgradable":      "Whether upgrade is available",
			"labels":             "List of labels applied to the node pool",
			"name":               "Node pool name",
			"node_count":         "Number of nodes in the node pool",
			"security_groups":    "List of connected security groups",
			"ssh_key_name":       "SSH key name",
			"status":             "Node pool status",
			"taints":             "List of taints applied to the node pool",
			"user_data":          "User script set for the node pool (base64 encoded)",
			"version":            "Kubernetes version of the node pool",
			"volume_size":        "Root volume size of the node pool (GiB)",
			"vpc_info":           "VPC information where the node pool belongs",
		},
		"kubernetes_engine__v1__api__get_node_pool__model__StatusInfoResponseModel": {
			"available_nodes":   "Number of available nodes",
			"phase":             "Current node pool status <br/>- `Pending`: Pending <br/>- `ScalingUp`: Scaling up <br/>- `ScalingDown`: Scaling down <br/>- `Running`: Running <br/>- `Failed`: Error occurred <br/>- `Deleting`: Deleting  <br/>- `Updating`: Updating <br/>- `Running (Scheduling Disable)`: Running but scheduling disabled",
			"unavailable_nodes": "Number of unavailable nodes",
		},
		"kubernetes_engine__v1__api__get_node_pool__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"id":                "Unique ID of the subnet",
		},
		"kubernetes_engine__v1__api__get_node_pool__model__TaintInfoResponseModel": {
			"effect": "Effect of the taint (policy preventing pods from being scheduled on the node)",
			"key":    "Taint key",
			"value":  "Taint value",
		},
		"kubernetes_engine__v1__api__get_node_pool__model__VpcInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "List of subnet IDs",
		},
		"kubernetes_engine__v1__api__list_available_kubernetes_versions__model__UpgradableVersionResponseModel": {
			"eol":           "End of support time (ISO 8601 format, UTC)",
			"is_deprecated": "Whether the version is deprecated",
			"minor_version": "Kubernetes minor version",
			"next_version":  "Next upgradable version",
			"patch_version": "Kubernetes patch version",
		},
		"kubernetes_engine__v1__api__list_cluster_nodes__model__NodeResponseModel": {
			"created_at":         "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"failure_message":    "Failure message if the node status changes to `Failed`",
			"flavor":             "Instance type",
			"id":                 "Unique ID of the node",
			"image":              "Node image information",
			"ip":                 "Node IP address",
			"is_cordon":          "Whether the node is in cordon (scheduling disabled) state",
			"is_hyper_threading": "Whether hyper-threading is enabled",
			"name":               "Node name",
			"node_pool_name":     "Node pool name",
			"ssh_key_name":       "SSH key name",
			"status":             "Node status",
			"updated_at":         "Last modified time of the resource <br/> - ISO_8601 format  <br/> - UTC",
			"version":            "Kubernetes (kubelet) version of the node",
			"volume_size":        "Root volume size of the node (GiB)",
			"vpc_info":           "VPC information where the node belongs",
		},
		"kubernetes_engine__v1__api__list_cluster_nodes__model__StatusInfoResponseModel": {
			"phase": "Current node status <br/>- `Running`: Running normally <br/>- `Running (Scheduling Disable)`: Running but scheduling disabled <br/>- `Provisioned`: Created <br/>- `Deleted`: Deleted <br/>- `Pending`: Pending <br/>- `Provisioning`: Creating <br/>- `Deleting`: Deleting <br/>- `Failed`: Error occurred",
		},
		"kubernetes_engine__v1__api__list_cluster_nodes__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"id":                "Subnet ID",
		},
		"kubernetes_engine__v1__api__list_cluster_nodes__model__VpcInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "Subnet information",
		},
		"kubernetes_engine__v1__api__list_cluster_upgradable_versions__model__UpgradableVersionResponseModel": {
			"eol":           "End of support time (ISO 8601 format, UTC)",
			"is_deprecated": "Whether the version is deprecated",
			"minor_version": "Kubernetes minor version",
			"next_version":  "Next upgradable version",
			"patch_version": "Kubernetes patch version",
		},
		"kubernetes_engine__v1__api__list_clusters__model__ClusterResponseModel": {
			"api_version":            "API version",
			"control_plane_endpoint": "Control plane endpoint information",
			"created_at":             "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"creator_info":           "Creator information",
			"description":            "Description of the cluster",
			"failure_message":        "Failure message if the cluster status changes to `Failed`",
			"id":                     "Unique ID of the cluster",
			"is_allocate_fip":        "Whether a public IP is allocated",
			"is_upgradable":          "Whether upgrade is available",
			"name":                   "Cluster name",
			"network":                "Cluster network configuration information",
			"status":                 "Cluster status",
			"version":                "Kubernetes version of the cluster",
			"vpc_info":               "VPC information where the cluster belongs",
		},
		"kubernetes_engine__v1__api__list_clusters__model__StatusResponseModel": {
			"phase": "Current cluster status <br/>- `Pending`: Pending <br/>- `Provisioning`: Creating <br/>- `Provisioned`: Created <br/>- `Updating`: Updating <br/>- `Deleting`: Deleting <br/>- `Failed`: Error occurred",
		},
		"kubernetes_engine__v1__api__list_clusters__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IP address range of the subnet",
			"id":                "Unique ID of the subnet",
		},
		"kubernetes_engine__v1__api__list_clusters__model__VPCInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "Subnet information",
		},
		"kubernetes_engine__v1__api__list_node_pool_nodes__model__NodeResponseModel": {
			"created_at":         "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"failure_message":    "Failure message if the node status changes to `Failed`",
			"flavor":             "Instance type",
			"id":                 "Unique ID of the node",
			"image":              "Image used by the node",
			"ip":                 "Node IP address",
			"is_cordon":          "Whether the node is in cordon (scheduling disabled) state",
			"is_hyper_threading": "Whether hyper-threading is enabled",
			"name":               "Node name",
			"node_pool_name":     "Node pool name",
			"ssh_key_name":       "SSH key name",
			"status":             "Node status",
			"updated_at":         "Last modified time of the resource <br/> - ISO_8601 format  <br/> - UTC",
			"version":            "Kubernetes version of the node",
			"volume_size":        "Root volume size of the node (GiB)",
			"vpc_info":           "VPC information where the node belongs",
		},
		"kubernetes_engine__v1__api__list_node_pool_nodes__model__StatusInfoResponseModel": {
			"phase": "Current node status <br/>- `Running`: Running normally <br/>- `Running (Scheduling Disable)`: Running but scheduling disabled <br/>- `Provisioned`: Created <br/>- `Deleted`: Deleted <br/>- `Pending`: Pending <br/>- `Provisioning`: Creating <br/>- `Deleting`: Deleting <br/>- `Failed`: Error occurred",
		},
		"kubernetes_engine__v1__api__list_node_pool_nodes__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"id":                "Unique ID of the subnet",
		},
		"kubernetes_engine__v1__api__list_node_pool_nodes__model__VpcInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "List of subnet information",
		},
		"kubernetes_engine__v1__api__list_node_pools__model__AutoscalingResponseModel": {
			"autoscaler_desired_node_count":       "Desired node count targeted by the autoscaler",
			"autoscaler_max_node_count":           "Maximum node count allowed by resource-based autoscaling",
			"autoscaler_min_node_count":           "Minimum node count allowed by resource-based autoscaling",
			"autoscaler_scale_down_threshold":     "Threshold condition for scale-down in resource-based autoscaling",
			"autoscaler_scale_down_unneeded_time": "Duration of scale-down threshold in resource-based autoscaling (seconds)",
			"autoscaler_scale_down_unready_time":  "Exclusion time for scale-down monitoring in resource-based autoscaling (seconds)",
			"is_autoscaler_enable":                "Whether resource-based autoscaling is enabled",
		},
		"kubernetes_engine__v1__api__list_node_pools__model__NodePoolResponseModel": {
			"autoscaling":        "Resource-based autoscaling configuration of the node pool",
			"cluster_name":       "Target cluster name",
			"created_at":         "Resource creation time <br/> - ISO_8601 format  <br/> - UTC",
			"description":        "Description of the node pool",
			"failure_message":    "Failure message if a node in the node pool changes to `Failed`",
			"flavor":             "Instance type name",
			"flavor_id":          "Instance type ID",
			"id":                 "Unique ID of the node pool",
			"image":              "Node image information",
			"is_bare_metal":      "Whether the node pool is bare metal type",
			"is_cordon":          "Whether all nodes in the node pool are in cordon (scheduling disabled) state",
			"is_gpu":             "Whether the node pool is GPU type",
			"is_hyper_threading": "Whether hyper-threading is enabled",
			"is_upgradable":      "Whether upgrade is available",
			"labels":             "List of labels applied to the node pool",
			"name":               "Node pool name",
			"node_count":         "Number of nodes in the node pool",
			"security_groups":    "List of connected security groups",
			"ssh_key_name":       "SSH key name",
			"status":             "Node pool status",
			"taints":             "List of taints applied to the node pool",
			"user_data":          "User script set for the node pool (base64 encoded)",
			"version":            "Kubernetes version of the node pool",
			"volume_size":        "Root volume size of the node (GiB)",
			"vpc_info":           "VPC information where the node pool belongs",
		},
		"kubernetes_engine__v1__api__list_node_pools__model__StatusInfoResponseModel": {
			"available_nodes":   "Number of available nodes",
			"phase":             "Current node pool status <br/>- `Pending`: Pending <br/>- `ScalingUp`: Scaling up <br/>- `ScalingDown`: Scaling down <br/>- `Running`: Running <br/>- `Failed`: Error occurred <br/>- `Deleting`: Deleting <br/>- `Updating`: Updating <br/>- `Running (Scheduling Disable)`: Running but scheduling disabled",
			"unavailable_nodes": "Number of unavailable nodes",
		},
		"kubernetes_engine__v1__api__list_node_pools__model__SubnetResponseModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"id":                "Unique ID of the subnet",
		},
		"kubernetes_engine__v1__api__list_node_pools__model__TaintInfoResponseModel": {
			"effect": "Effect of the taint (policy preventing pods from being scheduled on the node)",
			"key":    "Unique taint key",
			"value":  "Taint value",
		},
		"kubernetes_engine__v1__api__list_node_pools__model__VpcInfoResponseModel": {
			"id":      "Unique ID of the VPC",
			"subnets": "List of subnet information",
		},
		"kubernetes_engine__v1__api__set_cluster_nodes_cordon__model__ClusterRequestModel": {
			"is_cordon":  "Whether to set nodes to cordon state <br/>- `true`: Set the nodes to cordon state to block scheduling of new pods <br/>- `false`: Do not set the nodes to cordon state (default)",
			"node_names": "List of target node names",
		},
		"kubernetes_engine__v1__api__update_cluster__model__ClusterRequestModel": {
			"description": "Description of the cluster (overwrites the existing description with a new value)",
		},
		"kubernetes_engine__v1__api__update_node_pool__model__NodePoolRequestModel": {
			"description":     "Description of the node pool",
			"node_count":      "Number of nodes in the node pool",
			"security_groups": "List of security groups to connect",
		},
	},
	"loadbalancer": {
		"AccessLogs": {
			"access_key": "Access key",
			"bucket":     "Target bucket name",
			"secret_key": "Secret access key",
		},
		"AccessLogsModel": {
			"access_key": "Access key used for bucket access",
			"bucket":     "Target bucket name for storing logs",
			"secret_key": "Certificate key used for bucket access",
		},
		"AvailabilityZoneListModel": {
			"availability_zones": "",
		},
		"AvailabilityZoneModel": {
			"description": "Description of the availability zone",
			"is_enabled":  "Whether it is enabled",
			"name":        "Availability zone name",
		},
		"BeyondLoadBalancerListModel": {
			"beyond_load_balancers": "",
			"pagination":            "",
		},
		"Body_add_l7_policy_rule": {
			"l7_rule": "",
		},
		"Body_add_target": {
			"member": "",
		},
		"Body_create_ha_group": {
			"beyond_load_balancer": "",
		},
		"Body_create_health_monitor": {
			"health_monitor": "",
		},
		"Body_create_l7_policy": {
			"l7_policy": "",
		},
		"Body_create_listener": {
			"listener": "",
		},
		"Body_create_load_balancer": {
			"load_balancer": "",
		},
		"Body_create_target_group": {
			"target_group": "",
		},
		"Body_update_access_log": {
			"access_logs": "To disable access logs, set as `“access_logs” : null`",
		},
		"Body_update_ha_group": {
			"beyond_load_balancer": "",
		},
		"Body_update_ha_group_load_balancer": {
			"beyond_load_balancer": "",
		},
		"Body_update_health_monitor": {
			"health_monitor": "",
		},
		"Body_update_l7_policy": {
			"l7_policy": "",
		},
		"Body_update_l7_policy_rule": {
			"l7_rule": "",
		},
		"Body_update_listener": {
			"listener": "",
		},
		"Body_update_load_balancer": {
			"load_balancer": "",
		},
		"Body_update_target": {
			"member": "",
		},
		"Body_update_target_group": {
			"target_group": "",
		},
		"Body_update_targets": {
			"members": "",
		},
		"ContentType": {
			"default": "Default MIME type of the certificate <br/> - Example: `application/x-pem-file`, `application/octet-stream`",
		},
		"CreateHealthMonitor": {
			"delay":            "Interval between health checks (in seconds)",
			"expected_codes":   "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"http_method":      "HTTP request method (when type=HTTP/HTTPS) - `CONNECT`: Establish a network tunnel with the server<br/>- `GET`: Retrieve resources<br/>- `POST`: Create a new resource or send data<br/>- `DELETE`: Delete a resource<br/>- `PATCH`: Modify part of a resource<br/>- `PUT`: Replace or create a resource<br/>- `HEAD`: Request only header information without the body<br/>- `OPTIONS`: Retrieve supported methods and communication options<br/>- `TRACE`: Check the path the request takes to the server",
			"http_version":     "HTTP version (when type=HTTP/HTTPS) - `1.0`: HTTP/1.0 protocol<br/>- `1.1`: HTTP/1.1 protocol (default and most widely used)",
			"max_retries":      "Number of consecutive successes required to be considered healthy",
			"max_retries_down": "Number of consecutive failures required to be considered down",
			"target_group_id":  "Target group ID to associate with the health monitor",
			"timeout":          "Timeout waiting for health check response (in seconds)",
			"type":             "Health monitor type <br/> - `HTTP`: HTTP<br/> - `HTTPS`: HTTPS<br/> - `TCP`: TCP<br/> - `PING`: Ping",
			"url_path":         "URL path used for health check (when type=HTTP/HTTPS)",
		},
		"CreateL7PolicyModel": {
			"action":                   "Policy action type <br/> - `REDIRECT_PREFIX`: Redirect by prefix<br/> - `REDIRECT_TO_POOL`: Redirect to target pool<br/> - `REDIRECT_TO_URL`: Redirect to URL",
			"description":              "Description of the policy",
			"listener_id":              "Listener ID to apply the policy to",
			"name":                     "Name of the L7 policy to create",
			"position":                 "Policy priority (the smaller the number, the higher the priority)",
			"redirect_prefix":          "Redirect path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
		},
		"CreateL7PolicyRuleModel": {
			"compare_type": "Rule comparison method <br/> - `CONTAINS`: Contains<br/> - `ENDS_WITH`: Ends with<br/> - `EQUAL_TO`: Equal to<br/> - `STARTS_WITH`: Starts with",
			"is_inverted":  "Whether to invert the rule comparison result (default: `false`)",
			"key":          "Comparison key <br/>- `HEADER`: Header name<br/>- `COOKIE`: Cookie name<br/>- Other types can be omitted or set to `null`",
			"type":         "Rule target type <br/>- `COOKIE`: Check based on a specific HTTP request cookie value<br/>- `FILE_TYPE`: Check based on requested resource file extension (e.g., `.jpg`, `.exe`)<br/>- `HEADER`: Check based on HTTP request header value<br/>- `HOST_NAME`: Check based on the Host header (domain name)<br/>- `PATH`: Check based on request URL path (e.g., `/images/*`, `/api/v1/*`)",
			"value":        "Value to compare",
		},
		"CreateListener": {
			"default_tls_container_ref": "Default TLS certificate reference ID<br/>- Applies only when using the `TERMINATED_HTTPS` protocol<br>- Enter the `secret_ref` value from the [List TLS certificates](https://docs.kakaocloud.com/openapi/bns/lb/list-tls-certificates) API",
			"load_balancer_id":          "ID of the load balancer to create the listener for",
			"protocol":                  "Protocol the listener will receive <br/> - `HTTP`: HTTP<br/> - `TCP`: TCP<br/> - `UDP`: UDP<br/> - `TERMINATED_HTTPS`: SSL-terminated HTTPS",
			"protocol_port":             "Port number to receive traffic",
			"target_group_id":           "Target group ID for default traffic",
			"tls_min_version":           "Minimum TLS version allowed by the listener (supports TLS protocol equal to or above the specified version) <br/> ※ Applies only when using the `TERMINATED_HTTPS` protocol<br/>- `TLSv1`: Allow TLS 1.0 as minimum<br/>- `TLSv1.1`: Allow TLS 1.1 as minimum<br/>- `TLSv1.2`: Allow TLS 1.2 as minimum<br/>",
		},
		"CreateLoadBalancerModel": {
			"availability_zone": "Availability zone to create the load balancer in<br/> - `kr-central-2-a`: kr-central-2-a availability zone<br/> - `kr-central-2-b`: kr-central-2-b availability zone<br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"description":       "Description of the load balancer",
			"flavor_id":         "Load balancer type <br/> - Use `flavors.id` retrieved from the [List load balancer types](https://docs.kakaocloud.com/openapi/bns/lb/list-load-balancer-types) API",
			"listeners":         "Initial listener list to configure for the load balancer",
			"name":              "Load balancer name (unique within the project)",
			"subnet_id":         "Subnet ID to place the load balancer in",
		},
		"CreateTargetGroup": {
			"description":             "Description of the target group",
			"listener_id":             "Listener ID to associate",
			"load_balancer_algorithm": "Load balancing algorithm <br/> - `ROUND_ROBIN`: Round robin<br/> - `LEAST_CONNECTIONS`: Least connections<br/> - `SOURCE_IP`: Source IP-based",
			"load_balancer_id":        "Load balancer ID to associate",
			"name":                    "Target group name",
			"protocol":                "Protocol used for backend communication in the target group <br/> - `HTTP`: HTTP<br/> - `HTTPS`: HTTPS<br/> - `TCP`: TCP<br/> - `UDP`: UDP<br/> - `PROXY`: Proxy protocol",
			"session_persistence":     "Session persistence setting <br/> - Available only if `listener_id` is provided",
		},
		"CreateTargetGroupMember": {
			"address":       "IP address of the target instance",
			"monitor_port":  "Port number for health check",
			"name":          "Name of the target instance",
			"protocol_port": "Port number for receiving traffic",
			"subnet_id":     "Subnet ID where the target instance resides",
			"weight":        "Traffic distribution weight",
		},
		"EditBeyondLoadBalancerModel": {
			"description": "Description of the high availability load balancer to edit",
		},
		"EditHealthMonitor": {
			"delay":            "Health check interval (seconds)",
			"expected_codes":   "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"http_method":      "HTTP/HTTPS method used for health checks <br/> - `CONNECT`: Attempt server tunnel connection <br/> - `GET`: Retrieve resource (most commonly used) <br/> - `POST`: Send data request <br/> - `DELETE`: Delete resource request <br/> - `PATCH`: Update part of a resource <br/> - `PUT`: Update entire resource <br/> - `HEAD`: Retrieve headers only (no body, useful for response speed) <br/> - `OPTIONS`: Check supported methods <br/> - `TRACE`: Request/response loopback test",
			"http_version":     "HTTP protocol version <br/> - `1.0`: HTTP/1.0 protocol<br/>- `1.1`: HTTP/1.1 protocol (default and most widely used)",
			"max_retries":      "Allowed number of failures",
			"max_retries_down": "Consecutive failures required to be considered DOWN",
			"timeout":          "Response timeout (seconds)",
			"url_path":         "URL path used for health check (type=HTTP/HTTPS)",
		},
		"EditL7PolicyModel": {
			"action":                   "Policy action type <br/> - `REDIRECT_PREFIX`: Redirect by prefix <br/> - `REDIRECT_TO_POOL`: Redirect to target pool <br/> - `REDIRECT_TO_URL`: Redirect to URL",
			"description":              "Description of the policy",
			"name":                     "Name of the L7 policy to edit",
			"position":                 "Policy priority (smaller number means higher priority)",
			"redirect_prefix":          "Redirect path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
		},
		"EditL7PolicyRuleModel": {
			"compare_type": "Rule comparison method <br/> - `CONTAINS`: Contains <br/> - `ENDS_WITH`: Ends with <br/> - `EQUAL_TO`: Equal to <br/> - `STARTS_WITH`: Starts with",
			"is_inverted":  "Whether to invert the L7 rule comparison result",
			"key":          "Comparison key <br/>- `HEADER`: Header name<br/>- `COOKIE`: Cookie name<br/>- Other types can be omitted or set to `null`",
			"type":         "Request attribute used to evaluate the rule <br/> - `COOKIE`: Cookie value <br/> - `FILE_TYPE`: File extension <br/> - `HEADER`: HTTP header <br/> - `HOST_NAME`: Host name <br/> - `PATH`: Request path",
			"value":        "Value to compare",
		},
		"EditListener": {
			"connection_limit":          "Maximum concurrent connections <br/> - Set to `-1` for unlimited",
			"default_tls_container_ref": "Default TLS certificate reference ID<br/>- Applies only when using the `TERMINATED_HTTPS` protocol<br>- Enter the `secret_ref` value from the [List TLS certificates](https://docs.kakaocloud.com/openapi/bns/lb/list-tls-certificates) API",
			"insert_headers":            "Header settings to forward to backend",
			"sni_container_refs":        "List of TLS certificates matched by SNI server name",
			"target_group_id":           "Default target group ID to connect",
			"timeout_client_data":       "Client data receive timeout (ms)",
			"tls_min_version":           "Minimum TLS version allowed by the listener (supports TLS protocol equal to or above the specified version) <br/> ※ Applies only when using the `TERMINATED_HTTPS` protocol <br/> - `TLSv1`: Allow TLS 1.0 as minimum<br/>- `TLSv1.1`: Allow TLS 1.1 as minimum<br/>- `TLSv1.2`: Allow TLS 1.2 as minimum<br/>",
		},
		"EditLoadBalancerAccessLogModel": {
			"access_key": "Access key used for bucket access",
			"bucket":     "Target bucket name for storing logs",
			"secret_key": "Secret access key used for bucket access",
		},
		"EditLoadBalancerModel": {
			"description": "Description of the load balancer to edit",
			"name":        "Name of the load balancer to edit",
		},
		"EditTargetGroup": {
			"description":             "Description of the target group",
			"load_balancer_algorithm": "Load balancing algorithm <br/> - `ROUND_ROBIN`: Round robin <br/> - `LEAST_CONNECTIONS`: Least connections <br/> - `SOURCE_IP`: Source IP-based",
			"name":                    "Target group name",
			"session_persistence":     "Session persistence setting",
		},
		"ErrorResponseModel": {
			"error": "Error information",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"FlavorListModel": {
			"flavors": "",
		},
		"FlavorModel": {
			"description": "Description of the load balancer type",
			"id":          "Load balancer type ID",
			"is_enabled":  "Whether it is enabled",
			"name":        "Load balancer type name (e.g., ALB, NLB)",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"HealthCheckSubnetModel": {
			"availability_zone": "Availability zone where the subnet is located",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"health_check_ips":  "List of IP addresses used for health checks",
			"id":                "Subnet ID",
			"name":              "Subnet name",
		},
		"InsertHeaderModel": {
			"X-Forwarded-For":   "Whether to forward client IP address <br/> - `true`: Add X-Forwarded-For header to forward client IP <br/> - `false`: Do not add X-Forwarded-For header <br/> - `remove`: Remove existing X-Forwarded-For header",
			"X-Forwarded-Port":  "Whether to forward client request port <br/> - `true`: Add X-Forwarded-Port header to forward client request port <br/> - `false`: Do not add X-Forwarded-Port header",
			"X-Forwarded-Proto": "Whether to forward client request protocol (HTTP/HTTPS) <br/> - `true`: Add X-Forwarded-Proto header to forward client request protocol <br/> - `false`: Do not add X-Forwarded-Proto header",
		},
		"ListenerListModel": {
			"listeners":  "",
			"pagination": "",
		},
		"ListenerModel-Input": {
			"default_tls_container_ref": "Default TLS certificate reference ID<br/>- Applies only when using the `TERMINATED_HTTPS` protocol<br>- Enter the `secret_ref` value from the [List TLS certificates](https://docs.kakaocloud.com/openapi/bns/lb/list-tls-certificates) API",
			"protocol":                  "Protocol the listener will receive <br/> - `HTTP`: HTTP <br/> - `TCP`: TCP <br/> - `UDP`: UDP <br/> - `TERMINATED_HTTPS`: SSL-terminated HTTPS",
			"protocol_port":             "Port number the listener will receive",
			"tls_min_version":           "Minimum TLS version allowed by the listener, supports TLS protocol equal to or above the specified version<br/>- Applies only when using the `TERMINATED_HTTPS` protocol <br/>- `TLSv1`: Allow TLS 1.0 as minimum<br/>- `TLSv1.1`: Allow TLS 1.1 as minimum<br/>- `TLSv1.2`: Allow TLS 1.2 as minimum<br/>",
		},
		"LoadBalancerListModel": {
			"load_balancers": "",
			"pagination":     "",
		},
		"PaginationModel": {
			"limit":  "Maximum number of items per page",
			"offset": "Start position of retrieval",
			"total":  "Total number of items",
		},
		"ResponseEditListenerModel": {
			"listener": "",
		},
		"ResponseHealthCheckSubnetsModel": {
			"health_check_subnets": "",
		},
		"Responsel7PolicyRuleModel": {
			"l7_rule": "",
		},
		"SecretListModel": {
			"pagination": "",
			"secrets":    "",
		},
		"SecurityGroupModel": {
			"id":   "Security group ID",
			"name": "Security group name",
		},
		"SessionPersistenceModel": {
			"cookie_name":             "Cookie name (when session type is `APP_COOKIE` or `HTTP_COOKIE`)",
			"persistence_granularity": "IP subnet mask used as session persistence criteria (when session type is `SOURCE_IP`)",
			"persistence_timeout":     "Session persistence duration (seconds)",
			"type":                    "Session type <br/> - Example: `APP_COOKIE`, `HTTP_COOKIE`, `SOURCE_IP`",
		},
		"TargetGroupListModel": {
			"pagination":    "",
			"target_groups": "",
		},
		"TargetGroupMemberListModel": {
			"members":    "",
			"pagination": "",
		},
		"TargetGroupResponseModel": {
			"target_group": "",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"bns_load_balancer__v1__api__add_l7_policy_rule__model__L7PolicyRuleModel": {
			"compare_type":        "Rule comparison method",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":                  "ID of the created L7 rule",
			"is_inverted":         "Whether to invert the comparison result of the rule",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID that owns the resource",
			"provisioning_status": "Provisioning status",
			"type":                "Target type to check the rule against",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__add_l7_policy_rule__model__ResponseL7PolicyRuleModel": {
			"l7_rule": "",
		},
		"bns_load_balancer__v1__api__add_target__model__ResponseTargetGroupMemberModel": {
			"member": "",
		},
		"bns_load_balancer__v1__api__add_target__model__TargetGroupMemberModel": {
			"address":             "IP address of the target instance",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":                  "ID of the created target instance",
			"is_backup":           "Whether it is a backup server",
			"monitor_port":        "Port used for health checks",
			"name":                "Name of the target instance",
			"operating_status":    "Operating status",
			"project_id":          "Project ID that owns the resource",
			"protocol_port":       "Port number for receiving traffic",
			"provisioning_status": "Provisioning status",
			"subnet_id":           "Subnet ID where the target instance is located",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"weight":              "Traffic distribution weight",
		},
		"bns_load_balancer__v1__api__associate_new_public_ip__model__PublicIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the created public IP",
			"private_ip":  "Private IP address of the associated load balancer (IPv4 format)",
			"project_id":  "Project ID the public IP belongs to",
			"public_ip":   "Externally accessible public IP address (IPv4 format)",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__associate_new_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_load_balancer__v1__api__associate_public_ip__model__PublicIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IP address of the associated load balancer (IPv4 format)",
			"project_id":  "Project ID the public IP belongs to",
			"public_ip":   "Externally accessible public IP address (IPv4 format)",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__associate_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_load_balancer__v1__api__create_ha_group__model__BeyondLoadBalancerModel": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the high availability group",
			"dns_name":            "DNS name",
			"id":                  "ID of the created high availability group",
			"name":                "Name of the high availability group",
			"operating_status":    "Operating status",
			"project_id":          "Project ID the high availability group belongs to",
			"provisioning_status": "Provisioning status",
			"scheme":              "Load balancer communication scheme",
			"subnets":             "Associated subnet information",
			"type_id":             "High availability group type ID",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":              "ID of the associated VPC",
		},
		"bns_load_balancer__v1__api__create_ha_group__model__CreateBeyondLoadBalancerModel": {
			"description": "Description of the high availability group",
			"name":        "Name of the high availability group to create",
			"scheme":      "Load balancer communication scheme <br/> - `internet-facing`: Connected to the internet <br/> - `internal`: Internal only",
			"subnets":     "List of subnets to associate",
			"type_id":     "Load balancer type ID to use",
			"vpc_id":      "ID of the VPC the high availability group will belong to",
		},
		"bns_load_balancer__v1__api__create_ha_group__model__ResponseBeyondLoadBalancerModel": {
			"beyond_load_balancer": "",
		},
		"bns_load_balancer__v1__api__create_ha_group__model__SubnetModel": {
			"availability_zone": "Availability zone where the subnet belongs<br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"load_balancer_id":  "Load balancer ID to associate with this subnet",
		},
		"bns_load_balancer__v1__api__create_health_monitor__model__HealthMonitorModel": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"delay":               "Health check interval (seconds)",
			"expected_codes":      "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"http_method":         "HTTP request method (when type=HTTP/HTTPS)",
			"http_version":        "HTTP version",
			"id":                  "Health monitor ID",
			"max_retries":         "Consecutive successes required to be considered healthy",
			"max_retries_down":    "Consecutive failures required to be considered down",
			"name":                "Health monitor name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID the resource belongs to",
			"provisioning_status": "Provisioning status",
			"target_groups":       "List of associated target groups",
			"timeout":             "Response timeout (seconds)",
			"type":                "Health monitor type",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"url_path":            "URL path configured for health check (type=HTTP/HTTPS)",
		},
		"bns_load_balancer__v1__api__create_health_monitor__model__ResponseHealthMonitorModel": {
			"health_monitor": "",
		},
		"bns_load_balancer__v1__api__create_health_monitor__model__TargetGroupModel": {
			"id": "Target group ID",
		},
		"bns_load_balancer__v1__api__create_l7_policy__model__L7PolicyModel": {
			"action":                   "Policy action type",
			"created_at":               "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":              "Description of the policy",
			"id":                       "ID of the created policy",
			"listener_id":              "ID of the listener the policy applies to",
			"name":                     "Policy name",
			"operating_status":         "Operating status",
			"position":                 "Policy priority (smaller numbers indicate higher priority)",
			"project_id":               "Project ID the policy belongs to",
			"provisioning_status":      "Provisioning status",
			"redirect_prefix":          "Redirect target path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
			"rules":                    "List of associated L7 rules",
			"updated_at":               "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__create_l7_policy__model__ResponseL7PolicyModel": {
			"l7_policy": "",
		},
		"bns_load_balancer__v1__api__create_l7_policy__model__RuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "Unique ID of the L7 rule",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite of the comparison result is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "Target type of the rule",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__create_listener__model__L7PolicyModel": {
			"id": "L7 policy ID",
		},
		"bns_load_balancer__v1__api__create_listener__model__ListenerModel": {
			"allowed_cidrs":             "List of allowed client CIDRs",
			"alpn_protocols":            "ALPN (Application-Layer Protocol Negotiation) protocol list",
			"connection_limit":          "Maximum number of simultaneous connections",
			"created_at":                "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"default_target_group_id":   "Default target group ID",
			"default_tls_container_ref": "Reference ID of the default TLS certificate used in the HTTPS listener",
			"description":               "Description of the listener",
			"id":                        "Listener ID",
			"insert_headers":            "Settings for HTTP headers to insert",
			"l7_policies":               "List of associated L7 policies",
			"load_balancers":            "List of associated load balancers",
			"name":                      "Listener name",
			"operating_status":          "Operating status",
			"project_id":                "Project ID",
			"protocol":                  "Listening protocol",
			"protocol_port":             "Listening port number",
			"provisioning_status":       "Provisioning status",
			"sni_container_refs":        "List of SNI certificate references",
			"timeout_client_data":       "Client data receive timeout (seconds)",
			"tls_ciphers":               "TLS cipher suite list (applies only to `TERMINATED_HTTPS` protocol)",
			"tls_versions":              "Supported TLS versions list",
			"updated_at":                "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__create_listener__model__LoadBalancerModel": {
			"id": "Load balancer ID",
		},
		"bns_load_balancer__v1__api__create_listener__model__ResponseListenerModel": {
			"listener": "",
		},
		"bns_load_balancer__v1__api__create_load_balancer__model__ListenerIdModel": {
			"id": "Load balancer ID",
		},
		"bns_load_balancer__v1__api__create_load_balancer__model__LoadBalancerModel": {
			"availability_zone":       "Availability zone where the load balancer is located",
			"beyond_load_balancer_id": "ID of the associated high availability group (if any)",
			"created_at":              "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":             "Description of the load balancer",
			"flavor_id":               "Load balancer type",
			"id":                      "ID of the created load balancer",
			"listeners":               "List of created listener IDs",
			"name":                    "Load balancer name",
			"operating_status":        "Operating status",
			"project_id":              "Project ID",
			"provider":                "Load balancer service provider",
			"provisioning_status":     "Provisioning status",
			"subnet_id":               "ID of the subnet the load balancer belongs to",
			"target_group_count":      "Number of target groups associated with the load balancer",
			"updated_at":              "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__create_load_balancer__model__ResponseLoadBalancerModel": {
			"load_balancer": "",
		},
		"bns_load_balancer__v1__api__create_target_group__model__ListenerModel": {
			"id": "Listener ID",
		},
		"bns_load_balancer__v1__api__create_target_group__model__LoadBalancerModel": {
			"id": "Load balancer ID",
		},
		"bns_load_balancer__v1__api__create_target_group__model__MemberModel": {
			"id": "Unique ID of the target instance",
		},
		"bns_load_balancer__v1__api__create_target_group__model__ResponseTargetGroupModel": {
			"target_group": "",
		},
		"bns_load_balancer__v1__api__create_target_group__model__TargetGroupModel": {
			"created_at":              "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":             "Description of the target group",
			"id":                      "Target group ID",
			"listeners":               "List of associated listeners",
			"load_balancer_algorithm": "Load balancing algorithm",
			"load_balancers":          "List of associated load balancers",
			"members":                 "List of associated target instances",
			"name":                    "Target group name",
			"operating_status":        "Operating status",
			"project_id":              "Project ID",
			"protocol":                "Traffic receiving protocol",
			"provisioning_status":     "Provisioning status",
			"session_persistence":     "Session persistence settings",
			"updated_at":              "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__get_ha_group__model__BeyondLoadBalancerModel": {
			"availability_zones":  "List of availability zones configured for the high availability group",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the high availability group",
			"dns_name":            "Associated DNS name (e.g., public address of the load balancer)",
			"id":                  "High availability group ID",
			"load_balancers":      "List of load balancers included in the high availability group",
			"name":                "High availability group name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provider":            "Service provider information",
			"provisioning_status": "Provisioning status",
			"scheme":              "Access type",
			"type":                "[Load balancer type](https://docs.kakaocloud.com/en/service/bns/lb/lb-overview#사용-목적에-따른-로드-밸런서-유형-제공)",
			"type_id":             "High availability group type ID",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_cidr_block":      "IPv4 CIDR block of the VPC",
			"vpc_id":              "Unique ID of the VPC",
			"vpc_name":            "Associated VPC name",
		},
		"bns_load_balancer__v1__api__get_ha_group__model__LoadBalancerModel": {
			"availability_zone":   "List of availability zones configured for the high availability group",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the load balancer",
			"id":                  "Load balancer ID",
			"name":                "Load balancer name",
			"operating_status":    "Operating status",
			"provisioning_status": "Provisioning status",
			"subnet_cidr_block":   "IPv4 CIDR block of the subnet",
			"subnet_id":           "Associated subnet ID",
			"subnet_name":         "Associated subnet name",
			"type":                "Load balancer type",
			"type_id":             "Load balancer type identifier",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__get_ha_group__model__ResponseBeyondLoadBalancerModel": {
			"beyond_load_balancer": "",
		},
		"bns_load_balancer__v1__api__get_l7_policy__model__ResponseL7PolicyModel": {
			"l7_policy": "",
		},
		"bns_load_balancer__v1__api__get_l7_policy__model__RuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "L7 rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite of the comparison result is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "Rule type",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__get_l7_policy__model__l7PolicyModel": {
			"action":                   "Policy action type",
			"description":              "Description of the L7 policy",
			"id":                       "L7 policy ID",
			"name":                     "L7 policy name",
			"operating_status":         "Operating status",
			"position":                 "Priority of the policy (smaller numbers have higher priority)",
			"project_id":               "Project ID",
			"provisioning_status":      "Provisioning status",
			"redirect_http_code":       "HTTP status code (3xx) used for redirection",
			"redirect_prefix":          "Redirect target path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
			"rules":                    "List of L7 rules",
		},
		"bns_load_balancer__v1__api__get_l7_policy_rule__model__l7PolicyRuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "L7 rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite of the comparison result is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "Rule type",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__get_listener__model__L7PolicyModel": {
			"action":                   "Policy action type",
			"description":              "Description of the L7 policy",
			"id":                       "L7 policy ID",
			"name":                     "L7 policy name",
			"operating_status":         "Operating status",
			"position":                 "Priority of the policy (smaller numbers have higher priority)",
			"project_id":               "Project ID",
			"provisioning_status":      "Provisioning status",
			"redirect_http_code":       "HTTP status code (3xx) used for redirection",
			"redirect_prefix":          "Redirect target path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
			"rules":                    "List of associated L7 rules",
		},
		"bns_load_balancer__v1__api__get_listener__model__ListenerModel": {
			"alpn_protocols":            "List of ALPN (Application-Layer Protocol Negotiation) protocols",
			"connection_limit":          "Connection limit",
			"created_at":                "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"default_target_group_id":   "Default target group ID",
			"default_target_group_name": "Default target group name",
			"description":               "Description of the listener",
			"id":                        "Listener ID",
			"insert_headers":            "HTTP header information to insert",
			"is_enabled":                "Whether the listener is enabled",
			"l7_policies":               "List of associated L7 policies",
			"load_balancer_id":          "Associated load balancer ID",
			"load_balancer_type":        "Load balancer type",
			"name":                      "Listener name",
			"operating_status":          "Operating status",
			"project_id":                "Project ID",
			"protocol":                  "Listener protocol",
			"protocol_port":             "Listener port",
			"provisioning_status":       "Provisioning status",
			"secrets":                   "List of associated certificates",
			"timeout_client_data":       "Client data receive timeout (ms)",
			"tls_certificate_id":        "Associated TLS certificate ID",
			"tls_ciphers":               "List of TLS cipher suites (applies only to `TERMINATED_HTTPS` protocol)",
			"tls_versions":              "List of supported TLS versions",
			"updated_at":                "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__get_listener__model__ResponseListenerModel": {
			"listener": "",
		},
		"bns_load_balancer__v1__api__get_listener__model__RuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "L7 rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite of the comparison result is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "Rule type",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__get_listener__model__SecretModel": {
			"creator_id":  "Certificate creator ID",
			"expiration":  "Certificate expiration date",
			"id":          "Certificate ID",
			"is_default":  "Whether it is the default certificate<br/>- If `true`, it is used as the default certificate for the listener",
			"name":        "Certificate name",
			"secret_type": "Certificate type",
			"status":      "Certificate status",
		},
		"bns_load_balancer__v1__api__get_load_balancer__model__LoadBalancerModel": {
			"access_logs":                   "Access log settings",
			"availability_zone":             "Availability zone",
			"beyond_load_balancer_dns_name": "DNS name of the high availability group",
			"beyond_load_balancer_id":       "Associated high availability group ID",
			"beyond_load_balancer_name":     "High availability group name",
			"created_at":                    "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":                   "Description of the load balancer",
			"id":                            "Load balancer ID",
			"listener_count":                "Number of associated listeners",
			"listener_ids":                  "List of listener IDs",
			"name":                          "Load balancer name",
			"operating_status":              "Operating status",
			"private_vip":                   "Private VIP address",
			"project_id":                    "Project ID",
			"provisioning_status":           "Provisioning status",
			"public_vip":                    "Public VIP address",
			"subnet_cidr_block":             "IPv4 CIDR block of the subnet",
			"subnet_id":                     "Associated subnet ID",
			"subnet_name":                   "Associated subnet name",
			"target_group_count":            "Number of associated target groups",
			"type":                          "Load balancer type (ALB, NLB, etc.)",
			"updated_at":                    "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":                        "Associated VPC ID",
			"vpc_name":                      "Associated VPC name",
		},
		"bns_load_balancer__v1__api__get_load_balancer__model__ResponseLoadBalancerModel": {
			"load_balancer": "",
		},
		"bns_load_balancer__v1__api__get_target_group__model__HealthMonitorModel": {
			"delay":               "Health check interval (seconds)",
			"expected_codes":      "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"fall_threshold":      "Threshold for considering unhealthy (percentage)",
			"http_method":         "HTTP request method",
			"http_version":        "HTTP protocol version",
			"id":                  "Health monitor ID",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"rise_threshold":      "Threshold for considering healthy (percentage)",
			"timeout":             "Response timeout (seconds)",
			"type":                "Health monitor type",
			"url_path":            "Health check request path",
		},
		"bns_load_balancer__v1__api__get_target_group__model__ListenerModel": {
			"id":            "Listener ID",
			"protocol":      "Listener protocol",
			"protocol_port": "Listener port number",
		},
		"bns_load_balancer__v1__api__get_target_group__model__TargetGroupModel": {
			"availability_zone":                 "Availability zone",
			"created_at":                        "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":                       "Description of the target group",
			"health_monitor":                    "",
			"id":                                "Target group ID",
			"listeners":                         "List of associated listener information",
			"load_balancer_algorithm":           "Load balancing algorithm",
			"load_balancer_id":                  "Associated load balancer ID",
			"load_balancer_name":                "Load balancer name",
			"load_balancer_provisioning_status": "Load balancer provisioning status",
			"load_balancer_type":                "Load balancer type",
			"member_count":                      "Number of members registered in the target group",
			"name":                              "Target group name",
			"operating_status":                  "Operating status",
			"project_id":                        "Project ID",
			"protocol":                          "Target group protocol",
			"provisioning_status":               "Provisioning status",
			"session_persistence":               "",
			"subnet_id":                         "Associated subnet ID",
			"subnet_name":                       "Associated subnet name",
			"updated_at":                        "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":                            "Associated VPC ID",
			"vpc_name":                          "Associated VPC name",
		},
		"bns_load_balancer__v1__api__get_target_group_health_monitor__model__HealthMonitorModel": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"delay":               "Health check interval (seconds)",
			"expected_codes":      "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"http_method":         "HTTP request method",
			"http_version":        "HTTP version",
			"id":                  "Health monitor ID",
			"max_retries":         "Maximum number of retries before considered failed",
			"max_retries_down":    "Number of retries before considered DOWN",
			"name":                "Health monitor name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"target_groups":       "List of associated target groups",
			"timeout":             "Response timeout (seconds)",
			"type":                "Health check protocol type",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"url_path":            "Health check request path",
		},
		"bns_load_balancer__v1__api__get_target_group_health_monitor__model__ResponseHealthMonitorModel": {
			"health_monitor": "",
		},
		"bns_load_balancer__v1__api__get_target_group_health_monitor__model__TargetGroupModel": {
			"id": "Target group ID",
		},
		"bns_load_balancer__v1__api__list_ha_groups__model__BeyondLoadBalancerModel": {
			"availability_zones":  "List of availability zones",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the high availability group",
			"dns_name":            "DNS name",
			"id":                  "High availability group ID",
			"load_balancers":      "Array of included load balancer objects",
			"name":                "High availability group name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provider":            "Provider information",
			"provisioning_status": "Provisioning status",
			"scheme":              "Access scheme",
			"type":                "Load balancer type",
			"type_id":             "Identifier for the type of high availability group",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_cidr_block":      "IPv4 CIDR block of the VPC",
			"vpc_id":              "Unique VPC ID",
			"vpc_name":            "VPC name",
		},
		"bns_load_balancer__v1__api__list_ha_groups__model__LoadBalancerModel": {
			"availability_zone":   "Availability zone",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the load balancer",
			"id":                  "Load balancer ID",
			"name":                "Load balancer name",
			"operating_status":    "Operating status",
			"provisioning_status": "Provisioning status",
			"subnet_cidr_block":   "IPv4 CIDR block of the subnet",
			"subnet_id":           "Subnet ID",
			"subnet_name":         "Subnet name",
			"type":                "Load balancer type",
			"type_id":             "Load balancer type ID",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__list_l7_policies__model__RuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "L7 rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite result of the comparison is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "L7 rule type",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__list_l7_policies__model__l7PolicyModel": {
			"action":                   "Policy action type",
			"description":              "Description of the L7 policy",
			"id":                       "L7 policy ID",
			"name":                     "L7 policy name",
			"operating_status":         "Operating status",
			"position":                 "Priority of the policy (smaller numbers have higher priority)",
			"project_id":               "Project ID",
			"provisioning_status":      "Provisioning status",
			"redirect_http_code":       "HTTP status code (3xx) used for redirection",
			"redirect_prefix":          "Redirect target path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
			"rules":                    "List of associated L7 rules",
		},
		"bns_load_balancer__v1__api__list_l7_policy_rules__model__l7PolicyRuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "Rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite result of the comparison is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "Rule type",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__list_listeners__model__L7PolicyModel": {
			"action":                   "Policy action type",
			"description":              "Description of the policy",
			"id":                       "L7 policy ID",
			"name":                     "Policy name",
			"operating_status":         "Operating status",
			"position":                 "Priority of the policy (smaller numbers have higher priority)",
			"project_id":               "Project ID of the policy",
			"provisioning_status":      "Provisioning status",
			"redirect_http_code":       "HTTP status code (3xx) used for redirection",
			"redirect_prefix":          "Redirect target path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirect target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirect target URL (http or https format, `action=REDIRECT_TO_URL`)",
			"rules":                    "List of L7 rules associated with the policy",
		},
		"bns_load_balancer__v1__api__list_listeners__model__ListenerModel": {
			"alpn_protocols":            "List of supported ALPN protocols",
			"connection_limit":          "Connection limit",
			"created_at":                "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"default_target_group_id":   "Default target group ID",
			"default_target_group_name": "Default target group name",
			"description":               "Description of the listener",
			"id":                        "Listener ID",
			"insert_headers":            "Header information to insert",
			"is_enabled":                "Whether the listener is enabled",
			"l7_policies":               "Associated L7 policy information",
			"load_balancer_id":          "Associated load balancer ID",
			"load_balancer_type":        "Load balancer type",
			"name":                      "Listener name",
			"operating_status":          "Operating status",
			"project_id":                "Project ID",
			"protocol":                  "Listener protocol",
			"protocol_port":             "Associated port number",
			"provisioning_status":       "Provisioning status",
			"secrets":                   "Associated certificate information",
			"timeout_client_data":       "Client data receive timeout",
			"tls_certificate_id":        "TLS certificate ID",
			"tls_ciphers":               "List of TLS cipher suites (applies only to `TERMINATED_HTTPS` protocol)",
			"tls_versions":              "Supported TLS versions",
			"updated_at":                "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__list_listeners__model__RuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "L7 rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite result of the comparison is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where the rule belongs",
			"provisioning_status": "Provisioning status",
			"type":                "Rule type",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__list_listeners__model__SecretModel": {
			"creator_id":  "ID of the user or service account that created the certificate",
			"expiration":  "Certificate expiration time <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":          "Certificate ID",
			"is_default":  "Whether this is the default certificate<br/>- If `true`, used as the default certificate for the listener",
			"name":        "Certificate name",
			"secret_type": "Certificate type (e.g., `TLS_CERTIFICATE`, `PRIVATE_KEY`)",
			"status":      "Certificate status (e.g., available, expired)",
		},
		"bns_load_balancer__v1__api__list_load_balancers__model__LoadBalancerModel": {
			"access_logs":                   "Access log status",
			"availability_zone":             "Availability zone",
			"beyond_load_balancer_dns_name": "DNS name of the associated high availability group",
			"beyond_load_balancer_id":       "ID of the associated high availability group",
			"beyond_load_balancer_name":     "Name of the associated high availability group",
			"created_at":                    "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":                   "Description of the load balancer",
			"id":                            "Listener ID",
			"listener_count":                "Number of associated listeners",
			"listener_ids":                  "List of listener IDs",
			"name":                          "Load balancer name",
			"operating_status":              "Operating status",
			"private_vip":                   "Private IP address",
			"project_id":                    "Project ID",
			"provisioning_status":           "Provisioning status",
			"public_vip":                    "Public IP address",
			"subnet_cidr_block":             "IPv4 CIDR block of the subnet",
			"subnet_id":                     "Associated subnet ID",
			"subnet_name":                   "Associated subnet name",
			"target_group_count":            "Number of associated target groups",
			"type":                          "Load balancer type",
			"updated_at":                    "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":                        "Associated VPC ID",
			"vpc_name":                      "Associated VPC name",
		},
		"bns_load_balancer__v1__api__list_target_groups__model__HealthMonitorModel": {
			"delay":               "Health check interval (seconds)",
			"expected_codes":      "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"fall_threshold":      "Number of allowed consecutive failures",
			"http_method":         "HTTP request method (e.g., GET, HEAD)",
			"http_version":        "HTTP version (e.g., 1.0, 1.1)",
			"id":                  "Health monitor ID",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"rise_threshold":      "Number of consecutive successes required to be considered healthy",
			"timeout":             "Response timeout (seconds)",
			"type":                "Health check method (e.g., HTTP, TCP)",
			"url_path":            "Request path",
		},
		"bns_load_balancer__v1__api__list_target_groups__model__ListenerModel": {
			"id":            "Listener ID",
			"protocol":      "Listener protocol",
			"protocol_port": "Listener port",
		},
		"bns_load_balancer__v1__api__list_target_groups__model__TargetGroupModel": {
			"availability_zone":                 "Availability zone",
			"created_at":                        "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":                       "Description of the target group",
			"health_monitor":                    "Associated health monitor information",
			"id":                                "Target group ID",
			"listeners":                         "List of associated listener information",
			"load_balancer_algorithm":           "Load balancing algorithm",
			"load_balancer_id":                  "Associated load balancer ID",
			"load_balancer_name":                "Associated load balancer name",
			"load_balancer_provisioning_status": "Load balancer provisioning status",
			"load_balancer_type":                "Load balancer type",
			"member_count":                      "Number of members in the target group",
			"name":                              "Target group name",
			"operating_status":                  "Operating status",
			"project_id":                        "Project ID",
			"protocol":                          "Target group protocol",
			"provisioning_status":               "Provisioning status",
			"session_persistence":               "Session settings",
			"subnet_id":                         "Subnet ID",
			"subnet_name":                       "Subnet name",
			"updated_at":                        "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":                            "Unique VPC ID",
			"vpc_name":                          "VPC name",
		},
		"bns_load_balancer__v1__api__list_targets_in_target_group__model__SubnetModel": {
			"availability_zone": "Availability zone of the subnet",
			"cidr_block":        "IPv4 CIDR block of the subnet",
			"health_check_ips":  "List of IP addresses used for health checks",
			"id":                "Unique subnet ID",
			"name":              "Subnet name",
		},
		"bns_load_balancer__v1__api__list_targets_in_target_group__model__TargetGroupMemberModel": {
			"created_at":           "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":                   "Target ID",
			"instance_id":          "Unique ID of the instance",
			"instance_name":        "Instance name",
			"ip_address":           "Target IP address",
			"monitor_port":         "Health check port",
			"name":                 "Target name",
			"network_interface_id": "Network interface ID",
			"operating_status":     "Operating status",
			"project_id":           "Project ID",
			"protocol_port":        "Listening port number",
			"provisioning_status":  "Provisioning status",
			"security_groups":      "List of security groups",
			"subnet":               "Subnet information",
			"target_group_id":      "Target group ID",
			"updated_at":           "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":               "Unique VPC ID",
			"weight":               "Traffic distribution weight",
		},
		"bns_load_balancer__v1__api__list_tls_certificates__model__SecretModel": {
			"content_types": "List of certificate content types",
			"created_at":    "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"creator_id":    "Certificate creator ID",
			"expiration":    "Certificate expiration time",
			"name":          "Certificate name",
			"secret_ref":    "Certificate reference ID",
			"secret_type":   "Certificate type",
			"status":        "Certificate status",
			"updated_at":    "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__remove_public_ip__model__PublicIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Associated private IP address (IPv4 format)",
			"project_id":  "Project ID where the public IP belongs",
			"public_ip":   "Allocated public IP address",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__remove_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_load_balancer__v1__api__update_access_log__model__ListenerIdModel": {
			"id": "Unique listener ID",
		},
		"bns_load_balancer__v1__api__update_access_log__model__LoadBalancerModel": {
			"access_logs":         "Information related to access log settings",
			"availability_zone":   "Availability zone where the load balancer is located",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the load balancer",
			"flavor_id":           "Load balancer type",
			"id":                  "Load balancer ID",
			"listeners":           "List of listeners associated with the load balancer",
			"name":                "Load balancer name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where the load balancer belongs",
			"provider":            "Name of the service provider offering the load balancer",
			"provisioning_status": "Provisioning status",
			"subnet_id":           "ID of the subnet where the load balancer is deployed",
			"target_group_count":  "Number of target groups associated with the load balancer",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__update_access_log__model__ResponseLoadBalancerModel": {
			"load_balancer": "",
		},
		"bns_load_balancer__v1__api__update_ha_group__model__BeyondLoadBalancerModel": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the high availability load balancer",
			"dns_name":            "DNS name to access the load balancer",
			"id":                  "High availability load balancer ID",
			"name":                "High availability load balancer name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where the resource belongs",
			"provisioning_status": "Provisioning status",
			"scheme":              "Access type of the load balancer",
			"subnets":             "List of subnets associated with the high availability group",
			"type_id":             "Identifier representing the type of the load balancer",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":              "VPC ID connected to the load balancer",
		},
		"bns_load_balancer__v1__api__update_ha_group__model__ResponseBeyondLoadBalancerModel": {
			"beyond_load_balancer": "",
		},
		"bns_load_balancer__v1__api__update_ha_group__model__SubnetModel": {
			"availability_zone": "Availability zone where the subnet is located",
			"load_balancer_id":  "ID of the load balancer instance corresponding to the subnet",
		},
		"bns_load_balancer__v1__api__update_ha_group_load_balancer__model__BeyondLoadBalancerModel": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the high availability load balancer",
			"dns_name":            "DNS domain name accessible by clients",
			"id":                  "High availability load balancer ID",
			"name":                "High availability load balancer name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where the resource belongs",
			"provisioning_status": "Provisioning status",
			"scheme":              "Traffic handling method of the load balancer",
			"subnets":             "List of associated subnets",
			"type_id":             "High availability load balancer type identifier",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":              "ID of the VPC connected to the high availability load balancer",
		},
		"bns_load_balancer__v1__api__update_ha_group_load_balancer__model__CreateBeyondLoadBalancerModel": {
			"subnets": "List of subnets to associate with the high availability load balancer",
		},
		"bns_load_balancer__v1__api__update_ha_group_load_balancer__model__ResponseBeyondLoadBalancerModel": {
			"beyond_load_balancer": "",
		},
		"bns_load_balancer__v1__api__update_ha_group_load_balancer__model__SubnetModel": {
			"availability_zone": "Availability zone where the subnet belongs<br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"load_balancer_id":  "Load balancer instance ID corresponding to the subnet",
		},
		"bns_load_balancer__v1__api__update_health_monitor__model__HealthMonitorModel": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"delay":               "Health check interval (seconds)",
			"expected_codes":      "Range of response codes considered healthy (type=HTTP/HTTPS)",
			"http_method":         "Method used for HTTP/HTTPS health checks",
			"http_version":        "HTTP protocol version",
			"id":                  "Health monitor ID",
			"max_retries":         "Number of allowed retries before considered failed",
			"max_retries_down":    "Number of consecutive failures before considered DOWN",
			"name":                "Health monitor name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"target_groups":       "List of target groups associated with the health monitor",
			"timeout":             "Response timeout (seconds)",
			"type":                "Health monitor type",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"url_path":            "URL path configured for health checks (type=HTTP/HTTPS)",
		},
		"bns_load_balancer__v1__api__update_health_monitor__model__ResponseHealthMonitorModel": {
			"health_monitor": "",
		},
		"bns_load_balancer__v1__api__update_health_monitor__model__TargetGroupModel": {
			"id": "Unique ID of the target group",
		},
		"bns_load_balancer__v1__api__update_l7_policy__model__L7PolicyModel": {
			"action":                   "Action performed when the policy is applied",
			"created_at":               "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":              "Description of the policy",
			"id":                       "Policy ID",
			"listener_id":              "ID of the listener associated with the policy",
			"name":                     "Policy name",
			"operating_status":         "Operating status",
			"position":                 "Priority of the policy (lower number indicates higher priority)",
			"project_id":               "Project ID",
			"provisioning_status":      "Provisioning status",
			"redirect_prefix":          "Redirection path prefix (`action=REDIRECT_PREFIX`)",
			"redirect_target_group_id": "Redirection target group ID (`action=REDIRECT_TO_POOL`)",
			"redirect_url":             "Redirection target URL (http or https format, `action=REDIRECT_TO_URL`)",
			"rules":                    "List of L7 rules associated with the policy",
			"updated_at":               "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__update_l7_policy__model__ResponseL7PolicyModel": {
			"l7_policy": "",
		},
		"bns_load_balancer__v1__api__update_l7_policy__model__RuleModel": {
			"compare_type":        "Rule comparison method",
			"id":                  "Rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite result of the comparison is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID",
			"provisioning_status": "Provisioning status",
			"type":                "Field type where the rule applies",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__update_l7_policy_rule__model__L7PolicyRuleModel": {
			"compare_type":        "Rule comparison method",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":                  "L7 rule ID",
			"is_inverted":         "Whether the rule is inverted<br/>- If `true`, the opposite result of the comparison is considered a match",
			"key":                 "Comparison key",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where the resource belongs",
			"provisioning_status": "Provisioning status",
			"type":                "Request attribute type evaluated by the L7 rule",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"value":               "Value to compare",
		},
		"bns_load_balancer__v1__api__update_l7_policy_rule__model__ResponseL7PolicyRuleModel": {
			"l7_rule": "",
		},
		"bns_load_balancer__v1__api__update_listener__model__L7PolicyModel": {
			"id": "L7 policy ID",
		},
		"bns_load_balancer__v1__api__update_listener__model__ListenerModel": {
			"allowed_cidrs":             "List of CIDRs allowed to access the listener <br/> - Default: `0.0.0.0/0` (allow all)",
			"alpn_protocols":            "List of ALPN protocols",
			"connection_limit":          "Maximum number of concurrent connections<br/> - Set to `-1` for unlimited",
			"created_at":                "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"default_target_group_id":   "ID of the default target group",
			"default_tls_container_ref": "Reference ID of the default TLS certificate used in HTTPS listener",
			"description":               "Description of the listener",
			"id":                        "Unique listener ID",
			"insert_headers":            "Headers to forward to the backend (e.g., X-Forwarded-For, X-Forwarded-Port)",
			"l7_policies":               "List of associated L7 policies",
			"load_balancers":            "List of load balancers associated with the listener",
			"name":                      "Listener name",
			"operating_status":          "Operating status",
			"project_id":                "Project ID where the listener belongs",
			"protocol":                  "Protocol used by the listener",
			"protocol_port":             "Port used by the listener",
			"provisioning_status":       "Provisioning status",
			"sni_container_refs":        "List of additional certificates for SNI (Server Name Indication)",
			"timeout_client_data":       "Timeout for receiving data from the client (ms)",
			"tls_ciphers":               "List of TLS cipher suites (applies only to `TERMINATED_HTTPS` protocol)",
			"tls_versions":              "Allowed TLS protocol versions",
			"updated_at":                "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__update_listener__model__LoadBalancerModel": {
			"id": "ID of the associated load balancer",
		},
		"bns_load_balancer__v1__api__update_load_balancer__model__ListenerIdModel": {
			"id": "Listener ID",
		},
		"bns_load_balancer__v1__api__update_load_balancer__model__LoadBalancerModel": {
			"access_logs":         "# access_logs\n\nNo description available",
			"availability_zone":   "Availability zone where the resource is located",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":         "Description of the load balancer",
			"flavor_id":           "Instance type ID of the load balancer",
			"id":                  "Load balancer ID",
			"listeners":           "List of associated listener objects",
			"name":                "Load balancer name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where the resource belongs",
			"provider":            "Backend provider of the load balancer",
			"provisioning_status": "Provisioning status",
			"subnet_id":           "Associated subnet ID",
			"target_group_count":  "Number of associated target groups",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__update_load_balancer__model__ResponseLoadBalancerModel": {
			"load_balancer": "",
		},
		"bns_load_balancer__v1__api__update_target__model__EditTargetGroupMember": {
			"monitor_port": "Port number used for health checks",
			"name":         "Instance name",
			"weight":       "Traffic distribution weight",
		},
		"bns_load_balancer__v1__api__update_target__model__ResponseTargetGroupMemberModel": {
			"member": "",
		},
		"bns_load_balancer__v1__api__update_target__model__TargetGroupMemberModel": {
			"address":             "IP address of the target instance",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"id":                  "Target instance ID",
			"is_backup":           "If `true`, this instance is set as a backup and is used only when all primary members fail",
			"monitor_port":        "Port number used for health check requests",
			"name":                "Target instance name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID where this member resource belongs",
			"protocol_port":       "Port number on which the target instance listens",
			"provisioning_status": "Provisioning status",
			"subnet_id":           "Subnet ID where the target instance belongs",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"weight":              "Traffic distribution weight",
		},
		"bns_load_balancer__v1__api__update_target_group__model__ListenerModel": {
			"id": "Unique ID of each listener",
		},
		"bns_load_balancer__v1__api__update_target_group__model__LoadBalancerModel": {
			"id": "ID of each load balancer",
		},
		"bns_load_balancer__v1__api__update_target_group__model__MemberModel": {
			"id": "ID of the member (server)",
		},
		"bns_load_balancer__v1__api__update_target_group__model__ResponseTargetGroupModel": {
			"target_group": "",
		},
		"bns_load_balancer__v1__api__update_target_group__model__TargetGroupModel": {
			"created_at":              "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"description":             "Description of the target group",
			"id":                      "Target group ID",
			"listeners":               "List of listeners associated with the target group",
			"load_balancer_algorithm": "Load balancing algorithm",
			"load_balancers":          "List of load balancers associated with the target group",
			"members":                 "List of members (servers) in the target group",
			"name":                    "Target group name",
			"operating_status":        "Operating status",
			"project_id":              "Project ID of the target group",
			"protocol":                "Protocol of the target group",
			"provisioning_status":     "Provisioning status",
			"session_persistence":     "Session persistence settings",
			"updated_at":              "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"bns_load_balancer__v1__api__update_targets__model__EditTargetGroupMember": {
			"address":       "IP address of the target instance",
			"monitor_port":  "Port number for health check requests",
			"name":          "Target instance name",
			"protocol_port": "Port number on which the target instance receives traffic",
			"subnet_id":     "Subnet ID where the target instance belongs",
			"weight":        "Traffic distribution weight",
		},
		"l7PolicyListModel": {
			"l7_policies": "",
			"pagination":  "",
		},
		"l7PolicyRuleListModel": {
			"l7_rules":   "",
			"pagination": "",
		},
	},
	"network": {
		"Body_create_public_ip": {
			"public_ip": "",
		},
		"Body_create_security_group": {
			"security_group": "",
		},
		"Body_create_security_group_rule": {
			"security_group_rule": "",
		},
		"Body_update_public_ip": {
			"public_ip": "",
		},
		"Body_update_security_group": {
			"security_group": "",
		},
		"CreatePublicIpModel": {
			"description": "Description of the public IP <br/>",
		},
		"CreateSecurityGroupModel": {
			"description": "Description of the security group <br/>",
			"name":        "Name of the security group to create <br/> - Duplicate names are not allowed",
		},
		"CreateSecurityGroupRuleModel": {
			"description":      "Description of the security group <br/>",
			"direction":        "Traffic direction <br/> - `ingress`: inbound (receive) <br/> - `egress`: outbound (send)",
			"port_range_max":   "End value of the allowed port range <br/> - Required if `protocol` is `TCP` or `UDP` <br/> - If `protocol` is `ALL` or `ICMP` and not specified, it is treated as `All`",
			"port_range_min":   "Start value of the allowed port range <br/> - Required if `protocol` is `TCP` or `UDP` <br/> - If `protocol` is `ALL` or `ICMP` and not specified, it is treated as `All`",
			"protocol":         "Allowed network protocol <br/> - `TCP`: Transmission Control Protocol <br/> - `UDP`: User Datagram Protocol <br/> - `ICMP`: Internet Control Message Protocol <br/> - `IPIP`: IP-in-IP tunneling <br/> - `ALL`: All protocols",
			"remote_group_id":  "ID of the source or destination security group for allowed traffic <br/> - Specify when the source/destination is another security group",
			"remote_ip_prefix": "Source or destination IP range in CIDR format (e.g., `0.0.0.0/0`) <br/> - Specify when the source/destination is set as an IP",
		},
		"EditPublicIpModel": {
			"description": "Description of the public IP",
		},
		"EditSecurityGroupModel": {
			"description": "Description of the security group",
			"name":        "Name of the security group",
		},
		"ErrorResponseModel": {
			"error": "Error information",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"PaginationModel": {
			"limit":  "Maximum number of items per page",
			"offset": "Starting position of the query",
			"total":  "Total number of items",
		},
		"PublicIpListModel": {
			"pagination": "",
			"public_ips": "",
		},
		"ResponseSecurityGroupRuleModel": {
			"security_group_rule": "",
		},
		"SecurityGroupListModel": {
			"pagination":      "",
			"security_groups": "",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"bns_network__v1__api__associate_public_ip__model__FloatingIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IP address of the associated network interface (IPv4 format)",
			"project_id":  "ID of the project the public IP belongs to",
			"public_ip":   "Public IP address accessible from outside (IPv4 format)",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__associate_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_network__v1__api__create_public_ip__model__FloatingIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IP address of the associated network interface (IPv4 format)",
			"project_id":  "ID of the project the public IP belongs to",
			"public_ip":   "Public IP address accessible from outside (IPv4 format)",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__create_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_network__v1__api__create_security_group__model__ResponseSecurityGroupModel": {
			"security_group": "",
		},
		"bns_network__v1__api__create_security_group__model__SecurityGroupModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the security group",
			"id":          "ID of the security group",
			"is_stateful": "Whether the security group is stateful",
			"name":        "Name of the security group",
			"rules":       "List of rules included in the security group",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__create_security_group__model__SecurityGroupRuleModel": {
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the security group rule",
			"direction":         "Traffic direction <br/> - `ingress`: inbound (receive) <br/> - `egress`: outbound (send)",
			"id":                "ID of the security group rule",
			"port_range_max":    "Maximum value of the allowed port range",
			"port_range_min":    "Minimum value of the allowed port range",
			"project_id":        "ID of the project the rule belongs to",
			"protocol":          "Allowed protocol",
			"remote_group_id":   "ID of the source or destination security group for allowed traffic <br/> - Specify when the source/destination is another security group",
			"remote_ip_prefix":  "Source or destination IP range in CIDR format",
			"security_group_id": "Unique ID of the security group",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__create_security_group_rule__model__SecurityGroupRuleModel": {
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the rule",
			"direction":         "Traffic direction <br/> - `ingress`: inbound (receive) <br/> - `egress`: outbound (send)",
			"id":                "ID of the security group rule",
			"port_range_max":    "End value of the port range",
			"port_range_min":    "Start value of the port range",
			"project_id":        "ID of the project the rule belongs to",
			"protocol":          "Protocol type",
			"remote_group_id":   "ID of another security group",
			"remote_ip_prefix":  "Source or destination IP range in CIDR format",
			"security_group_id": "Unique ID of the security group",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__disassociate_public_ip__model__FloatingIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IP address of the associated network interface (IPv4 format)",
			"project_id":  "ID of the project the public IP belongs to",
			"public_ip":   "Public IP address accessible from outside (IPv4 format)",
			"status":      "Current status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__disassociate_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_network__v1__api__get_public_ip__model__FloatingIpModel": {
			"created_at":       "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":      "Description of the public IP",
			"id":               "Unique ID of the public IP",
			"private_ip":       "Private IP address of the associated network interface (IPv4 format)",
			"project_id":       "ID of the project this public IP belongs to",
			"public_ip":        "Public IP address",
			"related_resource": "Information of the resource associated with the public IP",
			"status":           "Current status of the public IP",
			"updated_at":       "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__get_public_ip__model__RelatedResourceInfoModel": {
			"device_id":    "Device ID",
			"device_owner": "Device owner",
			"id":           "ID of the associated resource",
			"name":         "Resource name",
			"status":       "Resource status",
			"subnet_cidr":  "IPv4 CIDR block of the subnet",
			"subnet_id":    "Associated subnet ID",
			"subnet_name":  "Subnet name",
			"type":         "Resource type",
			"vpc_id":       "Unique ID of the VPC",
			"vpc_name":     "VPC name",
		},
		"bns_network__v1__api__get_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_network__v1__api__get_security_group__model__ResponseSecurityGroupModel": {
			"security_group": "",
		},
		"bns_network__v1__api__get_security_group__model__SecurityGroupModel": {
			"created_at":   "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":  "Description of the security group",
			"id":           "ID of the security group",
			"is_stateful":  "Whether the security group is stateful",
			"name":         "Name of the security group",
			"project_id":   "ID of the project the security group belongs to",
			"project_name": "Name of the project the security group belongs to",
			"rules":        "Inbound and outbound rules configured in the security group",
			"updated_at":   "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__get_security_group__model__SecurityGroupRuleModel": {
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the security group rule",
			"direction":         "Traffic direction <br/> - `ingress`: inbound (receive) <br/> - `egress`: outbound (send)",
			"id":                "ID of the security group rule",
			"port_range_max":    "End value of the allowed port range",
			"port_range_min":    "Start value of the allowed port range",
			"protocol":          "Allowed protocol",
			"remote_group_id":   "ID of the source or destination security group for allowed traffic <br/> - Specify when the source/destination is another security group",
			"remote_group_name": "Name of the source or destination security group for allowed traffic",
			"remote_ip_prefix":  "Source or destination IP range in CIDR format",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__list_public_ips__model__FloatingIpModel": {
			"created_at":       "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":      "Description of the public IP resource",
			"id":               "ID of the public IP resource",
			"private_ip":       "Private IP address associated with the public IP (IPv4 format)",
			"project_id":       "ID of the project this public IP belongs to",
			"public_ip":        "Assigned public IP address",
			"related_resource": "Information of the resource associated with the public IP",
			"status":           "Current status of the public IP",
			"updated_at":       "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__list_public_ips__model__RelatedResourceInfoModel": {
			"device_id":    "Device ID",
			"device_owner": "Device owner",
			"id":           "Resource ID",
			"name":         "Resource name",
			"status":       "Resource status",
			"subnet_cidr":  "IPv4 CIDR block of the subnet",
			"subnet_id":    "Subnet ID",
			"subnet_name":  "Subnet name",
			"type":         "Resource type",
			"vpc_id":       "Unique ID of the VPC",
			"vpc_name":     "VPC name",
		},
		"bns_network__v1__api__list_security_groups__model__SecurityGroupModel": {
			"created_at":   "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":  "Description of the security group",
			"id":           "ID of the security group",
			"is_stateful":  "Whether the security group is stateful",
			"name":         "Name of the security group",
			"project_id":   "ID of the project the security group belongs to",
			"project_name": "Name of the project the security group belongs to",
			"rules":        "List of rules configured in the security group",
			"updated_at":   "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__list_security_groups__model__SecurityGroupRuleModel": {
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the security group rule",
			"direction":         "Rule direction",
			"id":                "ID of the security group rule",
			"port_range_max":    "Maximum port range",
			"port_range_min":    "Minimum port range",
			"protocol":          "Protocol",
			"remote_group_id":   "ID of another security group",
			"remote_group_name": "Name of another security group",
			"remote_ip_prefix":  "Source or destination IP range in CIDR format",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__update_public_ip__model__FloatingIpModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the public IP",
			"id":          "Unique ID of the public IP",
			"private_ip":  "Private IP address mapped to the public IP (IPv4 format)",
			"project_id":  "Project ID the public IP belongs to",
			"public_ip":   "Assigned public IPv4 address",
			"status":      "Status of the public IP",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__update_public_ip__model__ResponsePublicIpModel": {
			"public_ip": "",
		},
		"bns_network__v1__api__update_security_group__model__ResponseSecurityGroupModel": {
			"security_group": "",
		},
		"bns_network__v1__api__update_security_group__model__SecurityGroupModel": {
			"created_at":  "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description": "Description of the security group",
			"id":          "ID of the security group",
			"is_stateful": "Whether the security group is stateful",
			"name":        "Name of the security group",
			"rules":       "Rules contained in the security group",
			"updated_at":  "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"bns_network__v1__api__update_security_group__model__SecurityGroupRuleModel": {
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the security group rule",
			"direction":         "Traffic direction <br/> - `ingress`: inbound (receive) <br/> - `egress`: outbound (send)",
			"id":                "ID of the security group rule",
			"port_range_max":    "End value of the allowed port range",
			"port_range_min":    "Start value of the allowed port range",
			"project_id":        "Project ID the rule belongs to",
			"protocol":          "Allowed protocol",
			"remote_group_id":   "ID of the source or destination security group for allowed traffic <br/> - Specify when the source/destination is another security group",
			"remote_ip_prefix":  "Source or destination IP range in CIDR format",
			"security_group_id": "Unique ID of the security group",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
	},
	"volume": {
		"Body_create_image": {
			"image": "",
		},
		"Body_create_snapshot": {
			"snapshot": "",
		},
		"Body_create_volume": {
			"volume": "",
		},
		"Body_extend_volume": {
			"volume": "",
		},
		"Body_restore_snapshot": {
			"restore": "",
		},
		"Body_update_snapshot": {
			"snapshot": "",
		},
		"Body_update_volume": {
			"volume": "",
		},
		"CreateVolumeImageModel": {
			"description": "Description of the image",
			"name":        "Name of the image to create",
		},
		"CreateVolumeModel": {
			"availability_zone":    "Availability zone where the volume will be created<br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"description":          "Description of the volume",
			"encryption_secret_id": "Encryption key ID <br/> - The previous field name `encryption_secret_uuid` has been changed to `encryption_secret_id` <br/> - Requests using `encryption_secret_uuid` are still processed but will be deprecated in the future and are not recommended <br/> - If both `encryption_secret_id` and `encryption_secret_uuid` are provided, only `encryption_secret_id` will be used",
			"image_id":             "Unique ID of the image",
			"name":                 "Name of the volume to create",
			"size":                 "Volume size (in GB)<br/>- Linux: 1 ~ 16,384 GB <br/>- Windows: 1 ~ 2,048 GB",
			"source_volume_id":     "Source volume ID",
			"volume_type_id":       "Volume type ID",
		},
		"CreateVolumeSnapshotModel": {
			"description":    "Description of the snapshot",
			"is_incremental": "Whether the snapshot is incremental <br/> - 💡 Even if you have a full snapshot through a snapshot schedule, the first manual snapshot creation must always be a full snapshot.",
			"name":           "Name of the snapshot to create",
		},
		"EditVolumeModel": {
			"description": "Description of the volume <br/> - If the field is not used or set to `null`, the existing value is retained",
			"name":        "Name of the volume to update",
		},
		"EditVolumeSnapshotModel": {
			"description": "Description of the snapshot <br/> - If the field is not used or set to `null`, the existing value is retained",
			"name":        "Name of the snapshot to update",
		},
		"ErrorResponseModel": {
			"error": "Error information",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"ExtendVolumeModel": {
			"new_size": "New size of the volume (in GB) <br/> - Must be larger than the current size",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"ImageModel": {
			"container_format": "Container format type",
			"created_at":       "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":      "Description of the image",
			"disk_format":      "Disk format of the image",
			"id":               "Unique ID of the image",
			"instance_type":    "Instance type associated with the image",
			"is_shared":        "Whether the image is shared",
			"min_disk":         "Minimum disk size required to use the image (GB)",
			"min_ram":          "Minimum RAM required to use the image (MB)",
			"name":             "Image name",
			"os_info":          "Operating system information of the image",
			"owner":            "Owner of the image (project ID that owns the image)",
			"size":             "Actual disk size of the image (in bytes)",
			"status":           "Status of the image",
			"updated_at":       "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"virtual_size":     "Virtual size of the image",
			"visibility":       "Visibility scope of the image",
		},
		"OsInfoModel": {
			"admin_user":   "Default administrator account name of the image",
			"architecture": "Architecture information",
			"distro":       "Distribution name",
			"is_hidden":    "Whether the image is hidden",
			"type":         "Operating system type",
		},
		"PaginationModel": {
			"limit":  "Maximum number of items per page",
			"offset": "Starting position of the query",
			"total":  "Total number of items",
		},
		"RequestRestoreVolumeSnapshotModel": {
			"availability_zone": "Availability zone where the new volume will be created<br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"name":              "Description of the volume",
			"volume_type_id":    "ID of the volume type to create",
		},
		"ResponseCreateVolumeSnapshotModel": {
			"snapshot": "",
		},
		"ResponseRestoreVolumeSnapshotModel": {
			"restore": "",
		},
		"ResponseVolumeImageModel": {
			"image": "",
		},
		"RestoreVolumeSnapshotModel": {
			"snapshot_id": "Unique ID of the snapshot",
			"volume_id":   "Unique ID of the volume",
			"volume_name": "Name of the newly created volume after restore",
		},
		"SnapshotModel": {
			"id":   "ID of the created snapshot",
			"name": "Snapshot name specified by the user",
		},
		"UpdateVolumeSnapshotModel": {
			"id":   "Snapshot ID",
			"name": "Snapshot name",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"VolumeListModel": {
			"pagination": "",
			"volumes":    "",
		},
		"VolumeSnapshotListModel": {
			"pagination": "",
			"snapshots":  "",
		},
		"VolumeTypeListModel": {
			"volume_types": "",
		},
		"VolumeTypeModel": {
			"description": "Description of the volume type",
			"id":          "ID of the volume",
			"name":        "Name of the volume type",
		},
		"bcs_volume__v1__api__create_volume__model__ResponseVolumeModel": {
			"volume": "",
		},
		"bcs_volume__v1__api__create_volume__model__VolumeModel": {
			"attachments":       "List of instances attached to the volume <br/> - Newly created volumes are usually an empty array",
			"availability_zone": "Availability zone where the volume was created",
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the volume",
			"id":                "ID of the created volume",
			"is_bootable":       "Whether the volume is bootable",
			"is_encrypted":      "Whether the volume is encrypted",
			"metadata":          "Additional metadata information",
			"name":              "Name of the volume specified at creation",
			"size":              "Size of the volume (GB)",
			"snapshot_id":       "Unique ID of the snapshot",
			"status":            "Current status of the volume",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":           "ID of the user who created the volume",
			"volume_type":       "Type of the volume",
		},
		"bcs_volume__v1__api__get_snapshot__model__ResponseVolumeSnapshotModel": {
			"snapshot": "",
		},
		"bcs_volume__v1__api__get_snapshot__model__VolumeSnapshotModel": {
			"created_at":            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":           "Description of the snapshot",
			"id":                    "ID of the snapshot",
			"is_dependent_snapshot": "Whether the snapshot depends on another snapshot",
			"is_incremental":        "Whether the snapshot is incremental",
			"name":                  "Snapshot name",
			"parent_id":             "Parent snapshot ID",
			"project_id":            "Project ID the snapshot belongs to",
			"real_size":             "Actual used size (in bytes)",
			"schedule_id":           "ID of the schedule the snapshot belongs to",
			"size":                  "Snapshot size (GB)",
			"status":                "Snapshot status <br/> - `Creating`: snapshot creation in progress <br/> - `Available`: snapshot available <br/> - `Restoring`: restore in progress <br/> - `Deleting`: deletion in progress <br/> - `Error`: snapshot unavailable",
			"updated_at":            "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":               "ID of the user who created the snapshot",
			"volume_id":             "Unique ID of the volume",
		},
		"bcs_volume__v1__api__get_volume__model__ImageMetaData": {
			"container_format": "Image container format",
			"disk_format":      "Disk format of the image",
			"image_id":         "Unique ID of the image",
			"image_name":       "Image name",
			"min_disk":         "Minimum disk size required to use the image (GB)",
			"min_ram":          "Minimum RAM size required to use the image (MB)",
			"os_type":          "Operating system type",
			"size":             "Image size (in bytes)",
		},
		"bcs_volume__v1__api__get_volume__model__ResponseVolumeModel": {
			"volume": "",
		},
		"bcs_volume__v1__api__get_volume__model__VolumeModel": {
			"attach_status":     "Attach status of the volume",
			"availability_zone": "Availability zone where the volume is located",
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the volume",
			"encryption_key_id": "ID of the key used for volume encryption",
			"id":                "Unique ID of the volume",
			"image_metadata":    "Metadata of the associated instance if this is a root volume",
			"instance_id":       "Unique ID of the instance",
			"instance_name":     "Name of the instance attached to the volume",
			"is_bootable":       "Whether the volume is bootable",
			"is_encrypted":      "Whether the volume is encrypted",
			"is_root":           "Whether the volume is a root disk",
			"launched_at":       "Time when the attached instance was launched",
			"metadata":          "User-defined image metadata",
			"mount_point":       "Path where the volume is mounted on the instance",
			"name":              "Name of the volume",
			"previous_status":   "Previous status",
			"project_id":        "Project ID the volume belongs to",
			"size":              "Size of the volume",
			"status":            "Status of the volume <br/> - Refer to [volume states](https://docs.kakaocloud.com/en/service/bcs/vm/vm-main#volume-states)",
			"type":              "Detailed type of the volume",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":           "ID of the user who owns the volume",
			"volume_type":       "Volume type",
		},
		"bcs_volume__v1__api__list_snapshots__model__VolumeSnapshotModel": {
			"created_at":            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":           "Description of the snapshot",
			"id":                    "Snapshot ID",
			"is_dependent_snapshot": "Whether the snapshot is dependent",
			"is_incremental":        "Whether the snapshot is incremental",
			"name":                  "Snapshot name",
			"parent_id":             "Parent snapshot ID",
			"project_id":            "Project ID",
			"real_size":             "Actual used size (in bytes)",
			"schedule_id":           "ID of the schedule the snapshot belongs to",
			"size":                  "Snapshot size (GB)",
			"status":                "Snapshot status",
			"updated_at":            "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":               "User ID",
			"volume_id":             "Unique ID of the volume",
		},
		"bcs_volume__v1__api__list_volumes__model__ImageMetaData": {
			"container_format": "Container format of the image",
			"disk_format":      "Disk format of the image",
			"image_id":         "Unique ID of the image",
			"image_name":       "Image name",
			"min_disk":         "Minimum disk size required to run the image (GB)",
			"min_ram":          "Minimum RAM required to run the image (MB)",
			"os_type":          "Operating system type",
			"size":             "Image file size (in bytes)",
		},
		"bcs_volume__v1__api__list_volumes__model__VolumeModel": {
			"attach_status":     "Attach status of the volume",
			"availability_zone": "Availability zone where the volume was created",
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the volume",
			"encryption_key_id": "ID of the key used for volume encryption",
			"id":                "Volume ID",
			"image_metadata":    "Metadata if the volume was created from an image",
			"instance_id":       "Unique ID of the instance",
			"instance_name":     "Name of the attached instance",
			"is_bootable":       "Whether the volume is bootable",
			"is_encrypted":      "Whether the volume is encrypted",
			"is_root":           "Whether the volume is a root disk",
			"launched_at":       "Time when the volume was last attached to an instance",
			"metadata":          "User-defined metadata",
			"mount_point":       "Path where the volume is mounted on the instance <br/> - Example: `/dev/vdb`",
			"name":              "Volume name",
			"previous_status":   "Previous status",
			"project_id":        "Project ID the volume belongs to",
			"size":              "Volume size (in bytes)",
			"status":            "Current status of the volume",
			"type":              "Storage type",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":           "User ID who owns the volume",
			"volume_type":       "Volume type",
		},
		"bcs_volume__v1__api__update_snapshot__model__ResponseVolumeSnapshotModel": {
			"snapshot": "",
		},
		"bcs_volume__v1__api__update_volume__model__ResponseVolumeModel": {
			"volume": "",
		},
		"bcs_volume__v1__api__update_volume__model__VolumeModel": {
			"attachments":       "Attachment information such as the instances attached to the volume",
			"availability_zone": "Availability zone where the volume is located",
			"created_at":        "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"description":       "Description of the volume",
			"id":                "Volume ID",
			"is_bootable":       "Whether the volume is bootable",
			"is_encrypted":      "Whether the volume is encrypted",
			"metadata":          "Metadata in key-value pairs",
			"name":              "Volume name",
			"size":              "Volume size (GB)",
			"snapshot_id":       "Unique ID of the snapshot",
			"status":            "Current status of the volume",
			"updated_at":        "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"user_id":           "User ID who owns the volume",
			"volume_type":       "Volume type",
		},
	},
	"vpc": {
		"Body_add_route": {
			"vpc_route": "",
		},
		"Body_create_network_interface": {
			"network_interface": "",
		},
		"Body_create_route_table": {
			"vpc_route_table": "",
		},
		"Body_create_subnet": {
			"subnet": "",
		},
		"Body_create_vpc": {
			"vpc": "",
		},
		"Body_put_bns_vpc": {
			"vpc": "",
		},
		"Body_update_network_interface": {
			"network_interface": "",
		},
		"Body_update_network_interface_allowed_addresses": {
			"allowed_address_pairs": "",
		},
		"Body_update_route": {
			"vpc_route": "",
		},
		"Body_update_route_table_association": {
			"association": "",
		},
		"Body_update_subnet": {
			"subnet": "",
		},
		"CreateNetworkInterfaceModel": {
			"description":     "Description of the network interface",
			"name":            "Name of the network interface to create",
			"private_ip":      "Private IP address to assign manually, must be valid within the subnet<br/> - Request fails if the specified `private_ip` is already in use or outside the subnet CIDR range",
			"security_groups": "List of security group IDs to attach<br/> - At least one recommended<br/> - ※ Default security group is not automatically applied if omitted",
			"subnet_id":       "ID of the subnet to attach the network interface to",
		},
		"CreateRouteModel": {
			"destination": "Destination network address (CIDR format)",
			"route_type":  "Type of routing target<br/> - `igw`: Internet Gateway<br/> - `instance`: Instance<br/> - `tgw`: Transit Gateway",
			"target_id":   "Resource ID of the specified target",
		},
		"CreateRouteTableModel": {
			"name":   "Name of the route table to create",
			"vpc_id": "ID of the VPC where the route table will be created",
		},
		"CreateSubnetModel": {
			"availability_zone": "Availability zone to create the subnet in<br/> - `kr-central-2-a`: kr-central-2-a AZ<br/> - `kr-central-2-b`: kr-central-2-b AZ<br/> - `kr-central-2-c`: kr-central-2-c AZ",
			"cidr_block":        "IP address range of the subnet (CIDR format)<br/> - Example: `10.0.1.0/24`",
			"name":              "Name of the subnet to create",
			"vpc_id":            "ID of the VPC where the subnet belongs",
		},
		"CreateVPCModel": {
			"cidr_block": "IPv4 CIDR block of the VPC (e.g., `10.0.0.0/16`)",
			"name":       "Name of the VPC to create",
			"subnet":     "Subnet information",
		},
		"EditAllowedAddressPairModel": {
			"ip_address": "Permitted source IP address",
		},
		"EditAssociationModel": {
			"target_route_table_id": "ID of the target route table",
		},
		"EditNetworkInterfaceModel": {
			"description":     "Description of the network interface",
			"name":            "New name for the network interface",
			"security_groups": "List of security group IDs to apply",
		},
		"EditRouteModel": {
			"destination": "Destination network address (CIDR format)",
			"route_type":  "Type of routing target<br/> - `igw`: Internet Gateway<br/> - `instance`: Instance<br/> - `tgw`: Transit Gateway",
			"target_id":   "Target resource ID",
		},
		"EditSubnetModel": {
			"name": "Name of the subnet",
		},
		"EditVPCModel": {
			"name": "New name of the VPC",
		},
		"ErrorResponseModel": {
			"error": "Error information",
		},
		"ErrorResponseSubModel": {
			"code":    "Error code",
			"message": "Detailed error message",
		},
		"HTTPValidationError": {
			"detail": "",
		},
		"MainSubnet": {
			"availability_zone": "Availability zone where the subnet is placed<br/> - `kr-central-2-a`: kr-central-2-a AZ<br/> - `kr-central-2-b`: kr-central-2-b AZ<br/> - `kr-central-2-c`: kr-central-2-c AZ",
			"cidr_block":        "IPv4 CIDR block of the subnet (e.g., `10.0.1.0/24`)",
		},
		"NetworkInterfaceListModel": {
			"network_interfaces": "",
			"pagination":         "",
		},
		"PaginationModel": {
			"limit":  "Maximum number of items per page",
			"offset": "Starting offset for query",
			"total":  "Total number of items",
		},
		"ResponseRouteTableAssociationModel": {
			"association": "",
		},
		"ResponseSubnetSharedProjectListModel": {
			"projects": "",
		},
		"RouteTableAssociationListModel": {
			"associations": "",
			"pagination":   "",
		},
		"RouteTableListModel": {
			"pagination":       "",
			"vpc_route_tables": "",
		},
		"SecurityGroupModel": {
			"id":   "Security group ID",
			"name": "Security group name",
		},
		"SubnetListModel": {
			"pagination": "",
			"subnets":    "",
		},
		"SubnetSharedProjectModel": {
			"id": "ID of the project that received the shared subnet",
		},
		"VPCListModel": {
			"pagination": "",
			"vpcs":       "",
		},
		"ValidationError": {
			"loc":  "",
			"msg":  "",
			"type": "",
		},
		"bns_vpc__v1__api__add_route__model__ResponseRouteModel": {
			"vpc_route": "",
		},
		"bns_vpc__v1__api__add_route__model__RouteModel": {
			"destination":         "Destination network address (CIDR format)",
			"id":                  "Unique ID of the route",
			"is_local_route":      "Indicates whether it is a local route<br/>  - `true`: route for communication within the same VPC",
			"provisioning_status": "Provisioning status",
		},
		"bns_vpc__v1__api__create_network_interface__model__NetworkInterfaceModel": {
			"created_at":                            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the device (e.g., instance) the network interface is attached to",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Whether security groups are enabled",
			"mac_address":                           "MAC address assigned to the network interface",
			"name":                                  "Name of the network interface",
			"private_ip":                            "Private IP address assigned to the network interface (IPv4 format)",
			"project_id":                            "ID of the project the network interface belongs to",
			"secondary_ips":                         "List of secondary IPs attached to the network interface",
			"security_groups":                       "List of attached security group IDs",
			"status":                                "Status of the network interface",
			"updated_at":                            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__create_network_interface__model__ResponseNetworkInterfaceModel": {
			"network_interface": "",
		},
		"bns_vpc__v1__api__create_route_table__model__ResponseRouteTableModel": {
			"vpc_route_table": "",
		},
		"bns_vpc__v1__api__create_route_table__model__RouteTableModel": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                  "Route table ID",
			"name":                "Route table name",
			"project_id":          "ID of the project the route table belongs to",
			"provisioning_status": "Provisioning status",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the VPC the route table belongs to",
		},
		"bns_vpc__v1__api__create_subnet__model__ResponseSubnetModel": {
			"subnet": "",
		},
		"bns_vpc__v1__api__create_subnet__model__SubnetModel": {
			"availability_zone":   "Availability zone where the subnet resides",
			"cidr_block":          "IPv4 CIDR block of the subnet",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                  "Unique identifier of the subnet",
			"name":                "Subnet name",
			"project_id":          "ID of the project the subnet belongs to",
			"provisioning_status": "Provisioning status",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the VPC the subnet belongs to",
		},
		"bns_vpc__v1__api__create_vpc__model__ResponseVPCModel": {
			"vpc": "",
		},
		"bns_vpc__v1__api__create_vpc__model__VpcModel": {
			"cidr_block":          "CIDR block representing the VPC's IP address range",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the VPC",
			"id":                  "Unique ID of the VPC",
			"is_default":          "Indicates whether it is the default VPC",
			"name":                "VPC name",
			"project_id":          "ID of the project the VPC belongs to",
			"provisioning_status": "Provisioning status",
			"region":              "Region where the VPC resides",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__get_network_interface__model__AllowedAddressPairModel": {
			"ip_address":  "Allowed IP address",
			"mac_address": "Allowed MAC address",
		},
		"bns_vpc__v1__api__get_network_interface__model__NetworkInterfaceModel": {
			"allowed_address_pairs":                 "List of allowed IP addresses for packet transmission",
			"created_at":                            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the resource attached to the network interface",
			"device_owner":                          "Owner type of the resource attached to the interface (e.g., instance, router, etc.)",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Indicates whether security groups are enabled",
			"mac_address":                           "MAC address of the network interface",
			"name":                                  "Name of the network interface",
			"private_ip":                            "Primary private IP address (IPv4 format)",
			"project_id":                            "ID of the project the network interface belongs to",
			"project_name":                          "Name of the project",
			"public_ip":                             "Associated public IP",
			"secondary_ips":                         "List of secondary IPs attached to the network interface",
			"security_groups":                       "List of attached security groups",
			"status":                                "Current status of the network interface",
			"subnet_id":                             "ID of the connected subnet",
			"updated_at":                            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":                                "ID of the VPC the network interface belongs to",
		},
		"bns_vpc__v1__api__get_network_interface__model__ResponseNetworkInterfaceModel": {
			"network_interface": "",
		},
		"bns_vpc__v1__api__get_route_table__model__AssociationModel": {
			"availability_zone":   "Availability zone",
			"id":                  "Association ID",
			"provisioning_status": "Provisioning status",
			"subnet_cidr_block":   "IPv4 CIDR block of the subnet",
			"subnet_id":           "ID of the connected subnet",
			"subnet_name":         "Name of the connected subnet",
			"vpc_id":              "ID of the connected VPC",
			"vpc_name":            "Name of the connected VPC",
		},
		"bns_vpc__v1__api__get_route_table__model__ResponseRouteTableModel": {
			"vpc_route_table": "",
		},
		"bns_vpc__v1__api__get_route_table__model__RouteModel": {
			"destination":         "Destination network address (CIDR format)",
			"id":                  "Route ID",
			"is_local_route":      "Indicates whether it is a local route<br/>  - `true`: route for communication within the same VPC",
			"provisioning_status": "Provisioning status",
			"target_id":           "Target resource ID",
			"target_name":         "Target resource name",
			"target_type":         "Target resource type",
		},
		"bns_vpc__v1__api__get_route_table__model__RouteTableModel": {
			"associations":            "List of subnet associations connected to the route table",
			"created_at":              "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                      "Route table ID",
			"is_main":                 "Indicates whether it is the main route table",
			"name":                    "Route table name",
			"project_id":              "ID of the project the route table belongs to",
			"project_name":            "Name of the project the route table belongs to",
			"provisioning_status":     "Provisioning status",
			"routes":                  "List of routes registered in the route table",
			"updated_at":              "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":                  "ID of the VPC the route table belongs to",
			"vpc_name":                "Name of the VPC the route table belongs to",
			"vpc_provisioning_status": "Status of the VPC",
		},
		"bns_vpc__v1__api__get_subnet__model__ResponseSubnetModel": {
			"subnet": "",
		},
		"bns_vpc__v1__api__get_subnet__model__SubnetModel": {
			"availability_zone":   "Availability zone the subnet belongs to",
			"cidr_block":          "IPv4 CIDR block of the subnet",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                  "Subnet ID",
			"is_shared":           "Indicates whether it is shared",
			"name":                "Subnet name",
			"operating_status":    "Operating status",
			"owner_project_id":    "ID of the project that owns the subnet",
			"project_id":          "ID of the project that created the subnet",
			"project_name":        "Name of the project the subnet belongs to",
			"provisioning_status": "Provisioning status",
			"route_table_id":      "ID of the route table connected to the subnet",
			"route_table_name":    "Name of the route table connected to the subnet",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the VPC the subnet belongs to",
			"vpc_name":            "Name of the VPC the subnet belongs to",
		},
		"bns_vpc__v1__api__get_vpc__model__IgwModel": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the internet gateway",
			"id":                  "Internet gateway ID",
			"name":                "Internet gateway name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID of the VPC",
			"provisioning_status": "Provisioning status",
			"region":              "Region information",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__get_vpc__model__ResponseVPCModel": {
			"vpc": "",
		},
		"bns_vpc__v1__api__get_vpc__model__RouteTableModel": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the route table",
			"id":                  "Route table ID",
			"name":                "Route table name",
			"provisioning_status": "Provisioning status",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__get_vpc__model__VpcModel": {
			"cidr_block":            "IPv4 CIDR block of the VPC",
			"created_at":            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"default_route_table":   "Object containing default route table information",
			"description":           "Description of the VPC",
			"id":                    "Unique ID of the VPC",
			"igw":                   "Object containing information of the attached internet gateway",
			"is_default":            "Indicates whether it is the default VPC",
			"is_enable_dns_support": "Indicates whether DNS support is enabled",
			"name":                  "VPC name",
			"project_id":            "ID of the project the VPC belongs to",
			"project_name":          "Name of the project the VPC belongs to",
			"provisioning_status":   "Provisioning status",
			"region":                "Region where the VPC resides",
			"updated_at":            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__list_network_interfaces__model__AllowedAddressPairModel": {
			"ip_address":  "IP address",
			"mac_address": "MAC address of the network interface",
		},
		"bns_vpc__v1__api__list_network_interfaces__model__NetworkInterfaceModel": {
			"allowed_address_pairs":                 "List of allowed IPs for packet transmission",
			"created_at":                            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the device (e.g., virtual machine instance) connected to the network interface",
			"device_owner":                          "Owner type of the resource attached to the interface (e.g., instance, router, etc.)",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Indicates whether security groups are enabled",
			"mac_address":                           "MAC address of the network interface",
			"name":                                  "Network interface name",
			"private_ip":                            "Private IP address assigned to the network interface (IPv4 format)",
			"project_id":                            "ID of the project the network interface belongs to",
			"project_name":                          "Name of the project the network interface belongs to",
			"public_ip":                             "Public IP address assigned to the network interface",
			"secondary_ips":                         "List of additional secondary IP addresses assigned to the network interface",
			"security_groups":                       "List of security groups attached to the network interface",
			"status":                                "Current status of the network interface",
			"subnet_id":                             "ID of the subnet the network interface is connected to",
			"updated_at":                            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":                                "ID of the VPC the network interface belongs to",
		},
		"bns_vpc__v1__api__list_route_table_associations__model__AssociationModel": {
			"availability_zone":   "Availability zone where the subnet is located",
			"id":                  "ID of the route table association resource",
			"provisioning_status": "Provisioning status",
			"subnet_cidr_block":   "IP address range assigned to the subnet",
			"subnet_id":           "ID of the subnet associated with the route table",
			"subnet_name":         "Name of the subnet associated with the route table",
			"vpc_id":              "ID of the associated VPC",
			"vpc_name":            "Name of the associated VPC",
		},
		"bns_vpc__v1__api__list_route_tables__model__AssociationModel": {
			"availability_zone":   "Availability zone of the subnet",
			"id":                  "Association ID",
			"provisioning_status": "Provisioning status",
			"subnet_cidr_block":   "IPv4 CIDR block of the subnet",
			"subnet_id":           "ID of the associated subnet",
			"subnet_name":         "Name of the associated subnet",
			"vpc_id":              "ID of the associated VPC",
			"vpc_name":            "Name of the associated VPC",
		},
		"bns_vpc__v1__api__list_route_tables__model__RouteModel": {
			"destination":         "Destination network address (CIDR format)",
			"id":                  "Unique ID of the route",
			"is_local_route":      "Indicates whether the route is automatically created for local communication<br/>- If `true`, it is the default route for intra-VPC communication",
			"provisioning_status": "Provisioning status",
			"target_id":           "ID of the traffic forwarding target resource",
			"target_name":         "Name of the traffic forwarding target resource",
			"target_type":         "Type of the traffic forwarding target",
		},
		"bns_vpc__v1__api__list_route_tables__model__RouteTableModel": {
			"associations":            "List of subnet associations linked to this route table",
			"created_at":              "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                      "Route table ID",
			"is_main":                 "Indicates whether this is the main route table",
			"name":                    "Route table name",
			"project_id":              "ID of the project the route table belongs to",
			"project_name":            "Name of the project",
			"provisioning_status":     "Provisioning status",
			"routes":                  "List of routes defined in the route table",
			"updated_at":              "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":                  "ID of the VPC associated with the route table",
			"vpc_name":                "Name of the VPC associated with the route table",
			"vpc_provisioning_status": "Provisioning status of the associated VPC",
		},
		"bns_vpc__v1__api__list_subnets__model__SubnetModel": {
			"availability_zone":   "Availability zone where the subnet is located",
			"cidr_block":          "IPv4 CIDR block of the subnet",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                  "ID of the project that received the shared subnet",
			"is_shared":           "Indicates whether the subnet is shared",
			"name":                "Subnet name",
			"operating_status":    "Operating status",
			"owner_project_id":    "Project ID of the owning project that created the subnet",
			"project_id":          "Project ID the subnet belongs to",
			"project_name":        "Project name the subnet belongs to",
			"provisioning_status": "Provisioning status",
			"route_table_id":      "ID of the route table associated with the subnet",
			"route_table_name":    "Name of the route table associated with the subnet",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the associated VPC",
			"vpc_name":            "Name of the associated VPC",
		},
		"bns_vpc__v1__api__list_vpcs__model__IgwModel": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the internet gateway",
			"id":                  "Internet gateway ID",
			"name":                "Internet gateway name",
			"operating_status":    "Operating status",
			"project_id":          "Project ID the internet gateway belongs to",
			"provisioning_status": "Provisioning status",
			"region":              "Region information",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__list_vpcs__model__RouteTableModel": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the route table",
			"id":                  "Route table ID",
			"name":                "Route table name",
			"provisioning_status": "Provisioning status",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__list_vpcs__model__VpcModel": {
			"cidr_block":            "IPv4 CIDR block assigned to the VPC",
			"created_at":            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"default_route_table":   "Default route table information",
			"description":           "Description of the VPC",
			"id":                    "Unique ID of the VPC",
			"igw":                   "Internet gateway information",
			"is_default":            "Indicates whether it is the default VPC",
			"is_enable_dns_support": "Indicates whether DNS support is enabled",
			"name":                  "VPC name",
			"project_id":            "Project ID the VPC belongs to",
			"project_name":          "Project name the VPC belongs to",
			"provisioning_status":   "Provisioning status",
			"region":                "Region information",
			"updated_at":            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__update_network_interface__model__NetworkInterfaceModel": {
			"created_at":                            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the device connected to the network interface",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Indicates whether security groups are enabled",
			"mac_address":                           "MAC address of the network interface",
			"name":                                  "Network interface name",
			"private_ip":                            "Private IP address assigned to the network interface (IPv4 format)",
			"project_id":                            "Project ID the network interface belongs to",
			"secondary_ips":                         "List of secondary IPs associated with the network interface",
			"security_groups":                       "List of security group IDs associated with the network interface<br/> - Changing inbound/outbound traffic policies of the connected instance may cause service interruption",
			"status":                                "Network interface status",
			"updated_at":                            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__update_network_interface__model__ResponseNetworkInterfaceModel": {
			"network_interface": "",
		},
		"bns_vpc__v1__api__update_network_interface_allowed_addresses__model__NetworkInterfaceModel": {
			"created_at":                            "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":                           "Description of the network interface",
			"device_id":                             "ID of the device connected to the network interface",
			"id":                                    "Network interface ID",
			"is_network_interface_security_enabled": "Indicates whether security groups are enabled",
			"mac_address":                           "MAC address of the network interface",
			"name":                                  "Network interface name",
			"private_ip":                            "Private IP (IPv4 format)",
			"project_id":                            "Project ID the port belongs to",
			"secondary_ips":                         "List of secondary IPs associated with the network interface",
			"security_groups":                       "List of security group IDs associated with the network interface",
			"status":                                "Network interface status",
			"updated_at":                            "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"bns_vpc__v1__api__update_network_interface_allowed_addresses__model__ResponseNetworkInterfaceModel": {
			"network_interface": "",
		},
		"bns_vpc__v1__api__update_route__model__ResponseRouteModel": {
			"vpc_route": "",
		},
		"bns_vpc__v1__api__update_route__model__RouteModel": {
			"destination":         "Destination network address (CIDR format)",
			"id":                  "Unique ID of the route",
			"is_local_route":      "Indicates whether it is a local route<br/>  - If `true`, the route is for intra-VPC communication",
			"provisioning_status": "Provisioning status",
		},
		"bns_vpc__v1__api__update_route_table_association__model__AssociationModel": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the association",
			"id":                  "Association ID",
			"project_id":          "Project ID the association belongs to",
			"provisioning_status": "Provisioning status",
			"route_table_id":      "ID of the associated route table",
			"subnet_id":           "ID of the associated subnet",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the VPC the association belongs to",
		},
		"bns_vpc__v1__api__update_subnet__model__ResponseSubnetModel": {
			"subnet": "",
		},
		"bns_vpc__v1__api__update_subnet__model__SubnetModel": {
			"availability_zone":   "Availability zone where the subnet is located",
			"cidr_block":          "IPv4 CIDR block of the subnet",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"id":                  "Subnet ID",
			"name":                "Subnet name",
			"project_id":          "Project ID the subnet belongs to",
			"provisioning_status": "Provisioning status",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the VPC the subnet belongs to",
		},
		"bns_vpc__v1__api__update_vpc__model__ResponseVPCModel": {
			"vpc": "",
		},
		"bns_vpc__v1__api__update_vpc__model__VpcModel": {
			"cidr_block":          "Address range of the VPC (CIDR format)",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"description":         "Description of the VPC",
			"id":                  "Unique ID of the VPC",
			"is_default":          "Indicates whether it is the default VPC",
			"name":                "Updated VPC name",
			"project_id":          "Project ID the VPC belongs to",
			"provisioning_status": "Provisioning status",
			"region":              "Region where the VPC is located",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
	},
}

var ParameterDescriptions = map[string]map[string]map[string]string{
	"bcs": {
		"associate_new_public_ip": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the target network interface to which the public IP will be associated",
		},
		"associate_public_ip": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the target network interface to which the public IP will be associated",
			"path_public_ip_id":         "ID of the public IP to be associated with the instance",
		},
		"attach_network_interface": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the network interface to be attached to the instance",
		},
		"attach_security_group": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the network interface to which the security group will be attached",
			"path_security_group_id":    "Unique ID of the security group",
		},
		"attach_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
			"path_volume_id":      "Unique ID of the volume",
		},
		"create_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_keypair": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"delete_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"delete_keypair": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_keypair_name":   "Name of the key pair to be deleted",
		},
		"detach_network_interface": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the network interface to be detached from the instance",
		},
		"detach_security_group": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the network interface from which the security group will be detached",
			"path_security_group_id":    "Unique ID of the security group",
		},
		"detach_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
			"path_volume_id":      "Unique ID of the volume",
		},
		"get_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"get_instance_console_log": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"lines":               "Number of lines to retrieve from the end of the console log <br/> - If not specified, an error is returned\n\n",
			"path_instance_id":    "Unique ID of the instance",
		},
		"get_instance_password": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"get_instance_type": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_flavor_id":      "ID of the instance type (flavor) to be retrieved",
		},
		"get_keypair": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_keypair_name":   "Name of the key pair to be retrieved",
		},
		"hard_reboot_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"list_instance_actions": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"list_instance_network_interfaces": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"list_instance_types": {
			"architecture":               "Architecture of the instance type (CPU structure)",
			"created_at":                 "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"header_x-auth-token":        "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                         "ID of the instance type (flavor) to query",
			"instance_family":            "[Instance family](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-instance-overview#instance-family) <br/> - Example: `r2a`, `c2a`",
			"instance_size":              "Instance size",
			"instance_type":              "Instance type <br/> - `vm`: Virtual Machine type <br/> - `bm`: Bare Metal Server type <br/> - `gpu`: GPU type",
			"is_burstable":               "Whether the instance type is [burstable](https://docs.kakaocloud.com/en/service/bcs/bcs-instance/bcs-type/general-purpose/burstable-main)",
			"limit":                      "Maximum number of items per page",
			"manufacturer":               "Manufacturer information\n\n",
			"maximum_network_interfaces": "Maximum number of network interfaces",
			"memory_mb":                  "Memory size (in MB)",
			"name":                       "Name of the instance type",
			"offset":                     "Starting position for retrieval",
			"processor":                  "Processor name",
			"sort_dirs":                  "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":                  "Fields to sort by, separated by commas",
			"updated_at":                 "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vcpus":                      "Number of virtual CPUs",
		},
		"list_instances": {
			"availability_zone":   "Availability zone where the instance resides <br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"flavor_name":         "Name of the instance type",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"hostname":            "Hostname of the instance (e.g., internal DNS name)",
			"id":                  "ID of the instance to query",
			"image_name":          "Name of the image used when creating the instance",
			"instance_type":       "Instance type <br/> - `vm`: Virtual Machine type <br/> - `bm`: Bare Metal Server type <br/> - `gpu`: GPU type",
			"is_hadoop":           "Whether the instance was created for a Hadoop environment",
			"is_k8se":             "Whether the instance was created for a Kubernetes Engine environment",
			"limit":               "Maximum number of items per page",
			"name":                "Instance name <br/> - Used to search instances that contain a specific name",
			"offset":              "Starting position for retrieval",
			"os_type":             "Operating system type",
			"private_ip":          "Private IP address assigned to the instance (IPv4 format)",
			"public_ip":           "Public IP address associated with the instance",
			"sort_dirs":           "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":           "Fields to sort by, separated by commas",
			"status":              "Detailed status information of the instance <br/> - Internally defined status values",
			"updated_at":          "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
			"user_id":             "ID of the user who created the instance",
			"vm_state":            "VM state code <br/> - Refer to [instance state codes](https://docs.kakaocloud.com/en/service/bcs/vm/vm-main#instance-state-and-billing)",
		},
		"list_keypairs": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"fingerprint":         "Fingerprint of the public key",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "Unique ID of the key pair",
			"limit":               "Maximum number of items per page",
			"name":                "Name of the key pair",
			"offset":              "Starting position for retrieval",
			"sort_dirs":           "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":           "Fields to sort by, separated by commas",
			"type":                "Type of the key pair <br/> - Example: ssh, x509",
		},
		"rebuild_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"remove_public_ip": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"is_delete":                 "Whether to delete the public IP immediately after disassociation",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the network interface from which the public IP will be detached",
		},
		"resize_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"shelve_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"soft_reboot_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"start_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"stop_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"unshelve_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"update_instance": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
		},
		"update_instance_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":    "Unique ID of the instance",
			"path_volume_id":      "Unique ID of the volume",
		},
		"update_network_interface_allowed_addresses": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_instance_id":          "Unique ID of the instance",
			"path_network_interface_id": "ID of the network interface associated with the instance",
		},
	},
	"iam": {
		"validate_token": {
			"header_X-Auth-Token":    "authentication token",
			"header_X-Subject-Token": "authentication token",
		},
	},
	"image": {
		"add_image_share": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_image_id":       "Unique ID of the image",
			"path_member_id":      "ID of the project with which the image will be shared",
		},
		"delete_image": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_image_id":       "Unique ID of the image",
		},
		"get_image": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_image_id":       "Unique ID of the image",
		},
		"list_image_shared_projects": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"limit":               "Maximum number of items per page",
			"offset":              "Starting position for retrieval",
			"path_image_id":       "Unique ID of the image",
		},
		"list_images": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"disk_format":         "Disk format of the image",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "Unique ID of the image",
			"image_member_status": "Sharing status of the image member",
			"image_type":          "Type of image provided <br/> - `basic`: [Default images](https://docs.kakaocloud.com/en/service/bcs/vm/vm-main#default-images-available) provided by Kakao Cloud, including Linux and Windows images <br/> - `my`: Custom images created by the project user",
			"instance_type":       "Compatible instance types for the image <br/> - `vm`: Virtual Machine type <br/> - `bm`: Bare Metal Server type",
			"limit":               "Maximum number of items per page",
			"min_disk":            "Minimum disk size required to use the image (GB)",
			"name":                "Name of the image",
			"offset":              "Starting position for retrieval",
			"os_type":             "Operating system type",
			"size":                "Size of the image (in bytes)",
			"sort_dirs":           "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":           "Fields to sort by, separated by commas",
			"status":              "Status of the image",
			"updated_at":          "Time when the resource was last modified <br/> - ISO_8601 format  <br/> - Based on UTC",
			"visibility":          "Visibility of the image",
		},
		"remove_image_share": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_image_id":       "Unique ID of the image",
			"path_member_id":      "ID of the member (project) for which image sharing will be removed",
		},
		"update_image": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_image_id":       "Unique ID of the image",
		},
	},
	"kubernetesengine": {
		"create_cluster": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_node_pool": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"create_node_pool_scheduled_scaling": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"create_service_agent": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"delete_cluster": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"delete_cluster_nodes": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"delete_node_pool": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"delete_node_pool_scheduled_scaling": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
			"path_schedule_name":  "Target schedule name",
		},
		"get_cluster": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"get_cluster_kubeconfig": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"get_cluster_node": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_name":      "Target node name",
		},
		"get_cluster_node_details": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_name":      "Target node name",
		},
		"get_node_pool": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"get_service_agent": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"list_available_kubernetes_versions": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"list_cluster_nodes": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"list_cluster_upgradable_versions": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"list_clusters": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"list_node_pool_images": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"instance_type":       "Instance type <br/> - `vm`: Virtual Machine type  <br/> - `bm`: Bare Metal Server type",
			"is_gpu_type":         "Whether the image supports GPU <br/> - `true`: GPU-capable image<br/> - `false`: CPU-only image",
			"k8s_version":         "Target Kubernetes version",
			"os_distro":           "Operating system distribution",
		},
		"list_node_pool_nodes": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"list_node_pool_scheduled_scalings": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"list_node_pools": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"set_cluster_nodes_cordon": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"set_node_pool_node_label": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"set_node_pool_resource_based_auto_scaling": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"set_node_pool_user_script": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"update_cluster": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"update_node_pool": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
		"upgrade_cluster": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
		},
		"upgrade_node_pool": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_cluster_name":   "Target cluster name\n",
			"path_node_pool_name": "Target node pool name",
		},
	},
	"loadbalancer": {
		"add_l7_policy_rule": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy where the rule will be added\n",
		},
		"add_target": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_target_group_id": "ID of the target group where the target will be added\n",
		},
		"associate_new_public_ip": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_load_balancer_id": "ID of the load balancer to associate with a new public IP\n",
		},
		"associate_public_ip": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_load_balancer_id": "ID of the load balancer to associate with the public IP\n",
			"path_public_ip_id":     "Unique ID of the public IP to be associated\n",
		},
		"create_ha_group": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_health_monitor": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_l7_policy": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_listener": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_load_balancer": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_target_group": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"delete_ha_group": {
			"header_x-auth-token":          "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_beyond_load_balancer_id": "ID of the high availability group to delete\n",
		},
		"delete_health_monitor": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_health_monitor_id": "ID of the health monitor to delete\n",
		},
		"delete_l7_policy": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to delete\n",
		},
		"delete_l7_policy_rule": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to delete\n",
			"path_l7_rule_id":     "ID of the L7 rule to delete\n",
		},
		"delete_listener": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_listener_id":    "Unique ID of the listener to delete\n",
		},
		"delete_load_balancer": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_load_balancer_id": "ID of the load balancer to delete",
		},
		"delete_target_group": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_target_group_id": "ID of the target group to delete",
		},
		"detach_ha_group_load_balancer": {
			"header_x-auth-token":          "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_beyond_load_balancer_id": "ID of the high availability group\n",
			"path_load_balancer_id":        "ID of the load balancer to detach\n",
		},
		"get_ha_group": {
			"header_x-auth-token":          "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_beyond_load_balancer_id": "ID of the high availability group to retrieve\n",
		},
		"get_l7_policy": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to retrieve\n",
		},
		"get_l7_policy_rule": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to retrieve\n",
			"path_l7_rule_id":     "ID of the L7 rule to retrieve\n",
		},
		"get_listener": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_listener_id":    "ID of the listener to retrieve",
		},
		"get_load_balancer": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_load_balancer_id": "ID of the load balancer to retrieve\n",
		},
		"get_target_group": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_target_group_id": "ID of the target group to retrieve",
		},
		"get_target_group_health_check_subnets": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_target_group_id": "Target group ID",
		},
		"get_target_group_health_monitor": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_health_monitor_id": "ID of the health monitor to retrieve\n",
		},
		"list_availability_zones": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"list_ha_groups": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"dns_name":            "DNS name",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "ID of the high availability group to retrieve",
			"limit":               "Maximum number of items returned per page",
			"name":                "High availability group name\n",
			"offset":              "Starting offset of the query",
			"operating_status":    "Operating status <br/> - `ONLINE`: Online <br/> - `DRAINING`: Draining connections <br/> - `OFFLINE`: Offline <br/> - `DEGRADED`: Degraded <br/> - `ERROR`: Error occurred <br/> - `NO_MONITOR`: No monitoring",
			"provisioning_status": "Provisioning status <br/> - `ACTIVE`: Active <br/> - `DELETED`: Deleted <br/> - `ERROR`: Error occurred <br/> - `PENDING_CREATE`: Pending creation <br/> - `PENDING_UPDATE`: Pending update <br/> - `PENDING_DELETE`: Pending deletion",
			"scheme":              "Access scheme <br/> - `internet-facing`: Connected to the internet <br/> - `internal`: Internal only\n",
			"sort_dirs":           "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":           "Fields to sort by, separated by commas",
			"type":                "[Load balancer type](https://docs.kakaocloud.com/en/service/bns/lb/lb-overview#사용-목적에-따른-로드-밸런서-유형-제공) <br/> - `ALB`: Application Load Balancer <br/> - `NLB`: Network Load Balancer <br/> - `NLB_L4_DSR`: Network Load Balancer (L4 Direct Server Return)",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":              "Associated VPC ID",
			"vpc_name":            "Associated VPC name\n",
		},
		"list_l7_policies": {
			"action":                "Policy action type <br/> - `REDIRECT_PREFIX`: Redirect by prefix <br/> - `REDIRECT_TO_POOL`: Redirect to target pool <br/> - `REDIRECT_TO_URL`: Redirect to URL",
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"limit":                 "Maximum number of items returned per page",
			"name":                  "L7 policy name\n",
			"offset":                "Starting offset of the query",
			"operating_status":      "Operating status <br/> - `ONLINE`: Online <br/> - `DRAINING`: Draining connections <br/> - `OFFLINE`: Offline <br/> - `DEGRADED`: Degraded <br/> - `ERROR`: Error occurred <br/> - `NO_MONITOR`: No monitoring",
			"path_listener_id":      "ID of the listener to query\n",
			"path_load_balancer_id": "ID of the load balancer to query\n",
			"position":              "Priority of policy application (lower numbers indicate higher priority)\n",
			"provisioning_status":   "Provisioning status <br/> - `ACTIVE`: Active <br/> - `DELETED`: Deleted <br/> - `ERROR`: Error occurred <br/> - `PENDING_CREATE`: Pending creation <br/> - `PENDING_UPDATE`: Pending update <br/> - `PENDING_DELETE`: Pending deletion",
			"sort_dirs":             "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":             "Fields to sort by, separated by commas",
		},
		"list_l7_policy_rules": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to query\n",
		},
		"list_listeners": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "Unique ID of the listener\n",
			"limit":               "Maximum number of items returned per page",
			"load_balancer_id":    "ID of the associated load balancer\n",
			"offset":              "Starting offset of the query",
			"operating_status":    "Operating status <br/> - `ONLINE`: Online <br/> - `DRAINING`: Draining connections <br/> - `OFFLINE`: Offline <br/> - `DEGRADED`: Degraded <br/> - `ERROR`: Error occurred <br/> - `NO_MONITOR`: No monitoring",
			"protocol":            "Protocol used by the listener <br/> - `HTTP`: HTTP <br/> - `TCP`: TCP <br/> - `UDP`: UDP <br/> - `TERMINATED_HTTPS`: HTTPS with SSL termination",
			"protocol_port":       "Port number the listener receives traffic on\n",
			"provisioning_status": "Provisioning status <br/> - `ACTIVE`: Active <br/> - `DELETED`: Deleted <br/> - `ERROR`: Error occurred <br/> - `PENDING_CREATE`: Pending creation <br/> - `PENDING_UPDATE`: Pending update <br/> - `PENDING_DELETE`: Pending deletion",
			"secret_id":           "TLS certificate ID\n",
			"secret_name":         "TLS certificate name\n",
			"sort_dirs":           "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":           "Fields to sort by, separated by commas",
			"tls_certificate_id":  "TLS certificate ID associated with the listener\n",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"list_load_balancer_types": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"list_load_balancers": {
			"availability_zone":         "Availability zone\n",
			"beyond_load_balancer_name": "Associated high availability group name\n",
			"created_at":                "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                        "Load balancer ID\n",
			"limit":                     "Maximum number of items returned per page",
			"name":                      "Load balancer name\n",
			"offset":                    "Starting offset of the query",
			"operating_status":          "Operating status <br/> - `ONLINE`: Online <br/> - `DRAINING`: Draining connections <br/> - `OFFLINE`: Offline <br/> - `DEGRADED`: Degraded <br/> - `ERROR`: Error occurred <br/> - `NO_MONITOR`: No monitoring",
			"private_vip":               "Private VIP address\n",
			"provisioning_status":       "Provisioning status <br/> - `ACTIVE`: Active <br/> - `DELETED`: Deleted <br/> - `ERROR`: Error occurred <br/> - `PENDING_CREATE`: Pending creation <br/> - `PENDING_UPDATE`: Pending update <br/> - `PENDING_DELETE`: Pending deletion",
			"public_vip":                "Public VIP address\n",
			"sort_dirs":                 "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":                 "Fields to sort by, separated by commas",
			"subnet_cidr_block":         "IPv4 CIDR block of the subnet\n",
			"subnet_id":                 "Subnet ID\n",
			"type":                      "Load balancer type (ALB, NLB, NLB_L4_DSR)\n",
			"updated_at":                "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":                    "Unique ID of the VPC",
			"vpc_name":                  "VPC name\n",
		},
		"list_target_groups": {
			"availability_zone":       "Availability zone of the target group\n",
			"created_at":              "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"header_x-auth-token":     "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"health_monitor_id":       "Associated health monitor ID\n",
			"id":                      "Target group ID\n",
			"limit":                   "Maximum number of items returned per page",
			"listener_protocol":       "Listener protocol <br/> - `HTTP`: HTTP <br/> - `TCP`: TCP <br/> - `UDP`: UDP <br/> - `TERMINATED_HTTPS`: HTTPS with SSL termination",
			"load_balancer_algorithm": "Load balancing algorithm <br/> - `ROUND_ROBIN`: Round-robin <br/> - `LEAST_CONNECTIONS`: Least connections <br/> - `SOURCE_IP`: Source IP based",
			"load_balancer_id":        "Associated load balancer ID\n",
			"load_balancer_name":      "Associated load balancer name\n",
			"name":                    "Target group name\n",
			"offset":                  "Starting offset of the query",
			"protocol":                "Protocol of the target group <br/> - `HTTP`: HTTP <br/> - `HTTPS`: HTTPS <br/> - `TCP`: TCP <br/> - `UDP`: UDP <br/> - `PROXY`: Proxy protocol",
			"sort_dirs":               "Sorting direction (`asc`, `desc`) \n",
			"sort_keys":               "Fields to sort by, separated by commas",
			"subnet_id":               "Subnet ID\n",
			"subnet_name":             "Subnet name\n",
			"updated_at":              "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":                  "VPC ID of the target group\n",
			"vpc_name":                "VPC name of the target group\n",
		},
		"list_targets_in_target_group": {
			"created_at":           "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"instance_id":          "Unique ID of the instance",
			"instance_name":        "Name of the associated instance\n",
			"ip":                   "IP address of the target instance\n",
			"limit":                "Maximum number of items returned per page",
			"offset":               "Starting offset of the query",
			"operating_status":     "Operating status <br/> - `ONLINE`: Online <br/> - `DRAINING`: Draining connections <br/> - `OFFLINE`: Offline <br/> - `DEGRADED`: Degraded <br/> - `ERROR`: Error occurred <br/> - `NO_MONITOR`: No monitoring",
			"path_target_group_id": "Target group ID\n",
			"protocol_port":        "Connection port number\n",
			"provisioning_status":  "Provisioning status <br/> - `ACTIVE`: Active <br/> - `DELETED`: Deleted <br/> - `ERROR`: Error occurred <br/> - `PENDING_CREATE`: Pending creation <br/> - `PENDING_UPDATE`: Pending update <br/> - `PENDING_DELETE`: Pending deletion",
			"security_group_name":  "Security group name\n",
			"sort_dirs":            "Sorting direction (`asc`, `desc`)",
			"sort_keys":            "Fields to sort by, separated by commas",
			"subnet_id":            "Subnet ID of the target instance\n",
			"subnet_name":          "Subnet name of the target instance\n",
			"updated_at":           "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
			"vpc_id":               "VPC ID of the target instance\n",
			"weight":               "Traffic distribution weight\n",
		},
		"list_tls_certificates": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format  <br/> - Based on UTC",
			"expiration":          "Expiration date <br/> - ISO_8601 format  <br/> - Based on UTC\n",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"limit":               "Maximum number of items returned per page",
			"name":                "Certificate name\n",
			"offset":              "Starting offset of the query",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format  <br/> - Based on UTC",
		},
		"remove_public_ip": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"is_delete":             "- When set to `true`, the public IP is deleted together <br/> - When `false`, only the association is removed and the IP is retained\n",
			"path_load_balancer_id": "ID of the public IP to remove",
		},
		"remove_target": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_member_id":       "ID of the target instance to remove\n",
			"path_target_group_id": "Target group ID\n",
		},
		"update_access_log": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_load_balancer_id": "ID of the load balancer to update access log settings",
		},
		"update_ha_group": {
			"header_x-auth-token":          "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_beyond_load_balancer_id": "ID of the high availability load balancer to update",
		},
		"update_ha_group_load_balancer": {
			"header_x-auth-token":          "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_beyond_load_balancer_id": "ID of the target high availability load balancer",
		},
		"update_health_monitor": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_health_monitor_id": "ID of the health monitor to update",
		},
		"update_l7_policy": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to update",
		},
		"update_l7_policy_rule": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_l7_policy_id":   "ID of the L7 policy to update",
			"path_l7_rule_id":     "ID of the L7 rule to update",
		},
		"update_listener": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_listener_id":    "ID of the listener to update ",
		},
		"update_load_balancer": {
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_load_balancer_id": "ID of the load balancer to update",
		},
		"update_target": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_member_id":       "ID of the target instance to update",
			"path_target_group_id": "Target group ID",
		},
		"update_target_group": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_target_group_id": "ID of the target group to update",
		},
		"update_targets": {
			"header_x-auth-token":  "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_target_group_id": "ID of the target group containing the instances to update",
		},
	},
	"network": {
		"associate_public_ip": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_network_interface_id": "ID of the network interface to associate with the public IP",
			"path_public_ip_id":         "ID of the public IP to associate",
		},
		"create_public_ip": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_security_group": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_security_group_rule": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_security_group_id": "Unique ID of the security group",
		},
		"delete_public_ip": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_public_ip_id":   "ID of the public IP to delete",
		},
		"delete_security_group": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_security_group_id": "Unique ID of the security group",
		},
		"delete_security_group_rule": {
			"header_x-auth-token":         "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_security_group_id":      "Unique ID of the security group",
			"path_security_group_rule_id": "ID of the security group rule to delete",
		},
		"disassociate_public_ip": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_network_interface_id": "ID of the network interface to disassociate <br/>",
			"path_public_ip_id":         "ID of the public IP to disassociate",
		},
		"get_public_ip": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_public_ip_id":   "ID of the public IP to retrieve",
		},
		"get_security_group": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_security_group_id": "Unique ID of the security group",
		},
		"list_public_ips": {
			"created_at":            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                    "Unique ID of the public IP",
			"limit":                 "Maximum number of items per page",
			"offset":                "Starting position of the query",
			"public_ip":             "Public IP address <br/>",
			"related_resource_id":   "ID of the resource associated with the public IP (e.g., network interface ID) <br/>",
			"related_resource_name": "Name of the resource associated with the public IP (e.g., network interface name) <br/>",
			"sort_dirs":             "Sorting direction (`asc`, `desc`)",
			"sort_keys":             "Fields to sort by, separated by commas",
			"status":                "Status <br/> - `available`: available <br/> - `in_use`: in use <br/> - `attaching`: attaching",
			"updated_at":            "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"list_security_groups": {
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "Security group ID",
			"limit":               "Maximum number of items per page",
			"name":                "Security group name",
			"offset":              "Starting position of the query",
			"sort_dirs":           "Sorting direction (`asc`, `desc`)",
			"sort_keys":           "Fields to sort by, separated by commas",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
		},
		"update_public_ip": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_public_ip_id":   "Unique ID of the public IP",
		},
		"update_security_group": {
			"header_x-auth-token":    "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_security_group_id": "Unique ID of the security group",
		},
	},
	"volume": {
		"create_image": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_volume_id":      "Unique ID of the volume",
		},
		"create_snapshot": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_volume_id":      "Unique ID of the volume",
		},
		"create_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"delete_snapshot": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_snapshot_id":    "Unique ID of the snapshot",
		},
		"delete_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_volume_id":      "Unique ID of the volume",
		},
		"extend_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_volume_id":      "Unique ID of the volume",
		},
		"get_snapshot": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_snapshot_id":    "Unique ID of the snapshot",
		},
		"get_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_volume_id":      "Unique ID of the volume",
		},
		"list_snapshots": {
			"created_at":            "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"header_x-auth-token":   "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                    "Snapshot ID",
			"is_dependent_snapshot": "Whether the snapshot depends on another snapshot  <br/>- `true`: cannot be restored without a parent snapshot  <br/>- `false`: can be restored independently",
			"is_incremental":        "Whether the snapshot is incremental <br/>- `true`: includes only data changed since the previous snapshot <br/>- `false`: includes all data",
			"limit":                 "Maximum number of items per page",
			"name":                  "Snapshot name",
			"offset":                "Starting position of the query",
			"parent_id":             "Parent snapshot ID <br/> - For incremental snapshots, this field tracks the parent snapshot",
			"schedule_id":           "ID of the schedule used when creating the snapshot",
			"sort_dirs":             "Sorting direction (`asc`, `desc`)",
			"sort_keys":             "Fields to sort by, separated by commas",
			"status":                "Current status of the snapshot",
			"updated_at":            "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"volume_id":             "Unique ID of the volume",
		},
		"list_volume_types": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"list_volumes": {
			"attach_status":       "Attach status of the volume <br/> - Example: `attached`, `detached`",
			"availability_zone":   "Availability zone where the volume was created<br/> - `kr-central-2-a`: kr-central-2-a availability zone <br/> - `kr-central-2-b`: kr-central-2-b availability zone <br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"created_at":          "Time when the resource was created <br/> - ISO_8601 format <br/> - Based on UTC",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "ID of the volume to query",
			"instance_id":         "Unique ID of the instance",
			"instance_name":       "Name of the attached instance",
			"is_bootable":         "Whether the volume is bootable",
			"is_encrypted":        "Whether the volume is encrypted",
			"is_root":             "Whether the volume is a root disk",
			"limit":               "Maximum number of items per page",
			"mount_point":         "Path where the volume is mounted on the instance <br/> - Example: `/dev/vdb`",
			"name":                "Name of the volume to query",
			"offset":              "Starting position of the query",
			"size":                "Size of the volume to query (GB)",
			"sort_dirs":           "Sorting direction (`asc`, `desc`)",
			"sort_keys":           "Fields to sort by, separated by commas",
			"status":              "Status of the volume to query  <br/> - Refer to [volume states](https://docs.kakaocloud.com/en/service/bcs/vm/vm-main#volume-states)",
			"type":                "Storage type of the volume",
			"updated_at":          "Time when the resource was last updated <br/> - ISO_8601 format <br/> - Based on UTC",
			"volume_type":         "Volume type name",
		},
		"restore_snapshot": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_snapshot_id":    "Unique ID of the snapshot",
		},
		"update_snapshot": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_snapshot_id":    "Unique ID of the snapshot",
		},
		"update_volume": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_volume_id":      "Unique ID of the volume",
		},
	},
	"vpc": {
		"add_route": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_route_table_id": "ID of the route table to which the route will be added<br/> - Refer to the [List route tables](https://docs.kakaocloud.com/openapi/bns/vpc/list-route-tables) API",
		},
		"create_network_interface": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_route_table": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_subnet": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"create_vpc": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
		},
		"delete_network_interface": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_network_interface_id": "ID of the network interface to delete",
		},
		"delete_route": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_route_id":       "ID of the route to delete\n",
			"path_route_table_id": "ID of the route table to delete",
		},
		"delete_route_table": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_route_table_id": "ID of the route table to delete",
		},
		"delete_subnet": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_subnet_id":      "ID of the subnet to delete",
		},
		"delete_vpc": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_vpc_id":         "ID of the VPC to delete",
		},
		"get_network_interface": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_network_interface_id": "ID of the network interface to retrieve",
		},
		"get_route_table": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_route_table_id": "ID of the route table to retrieve",
		},
		"get_subnet": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_subnet_id":      "ID of the subnet to retrieve",
		},
		"get_vpc": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_vpc_id":         "ID of the VPC to retrieve<br/>- Refer to the [List VPCs](https://docs.kakaocloud.com/openapi/bns/vpc/list-vpcs) API",
		},
		"list_network_interfaces": {
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"device_id":           "ID of the connected device (e.g., instance ID)\n",
			"device_owner":        "Type of resource owner connected to the interface (e.g., instance, router)\n",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "Network interface ID",
			"limit":               "Maximum number of items per page",
			"mac_address":         "MAC address of the network interface",
			"name":                "Network interface name",
			"offset":              "Starting position for retrieval",
			"private_ip":          "Private IP address (IPv4 format)\n",
			"public_ip":           "Public IP address\n",
			"security_group_id":   "Unique ID of the security group",
			"security_group_name": "Security group name\n",
			"sort_dirs":           "Sorting direction (`asc`, `desc`)\n",
			"sort_keys":           "Fields to sort by, separated by commas\n\n\n\n",
			"status":              "Network interface status<br/> - `available`: Available<br/> - `in_use`: In use",
			"subnet_id":           "ID of the associated subnet\n",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"list_route_table_associations": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"limit":               "Maximum number of items per page",
			"offset":              "Starting position for retrieval",
			"path_route_table_id": "Unique ID of the route table",
		},
		"list_route_tables": {
			"association_count":       "Number of associated subnets",
			"created_at":              "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"destination":             "Routing path\n",
			"header_x-auth-token":     "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                      "Route table ID\n",
			"limit":                   "Maximum number of items per page",
			"name":                    "Name of the associated VPC",
			"offset":                  "Starting position for retrieval",
			"provisioning_status":     "Provisioning status of the route table<br/> - `ACTIVE`: Active<br/> - `DELETED`: Deleted<br/> - `ERROR`: Error occurred<br/> - `PENDING_CREATE`: Pending creation<br/> - `PENDING_UPDATE`: Pending update<br/> - `PENDING_DELETE`: Pending deletion",
			"sort_dirs":               "Sorting direction (`asc`, `desc`)\n",
			"sort_keys":               "Fields to sort by, separated by commas\n\n\n\n",
			"subnet_id":               "ID of the associated subnet",
			"subnet_name":             "Name of the associated subnet",
			"updated_at":              "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":                  "ID of the associated VPC",
			"vpc_name":                "Name of the associated VPC",
			"vpc_provisioning_status": "Provisioning status of the VPC<br/> - `ACTIVE`: Active<br/> - `DELETED`: Deleted<br/> - `ERROR`: Error occurred<br/> - `PENDING_CREATE`: Pending creation<br/> - `PENDING_UPDATE`: Pending update<br/> - `PENDING_DELETE`: Pending deletion",
		},
		"list_subnet_shared_projects": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_subnet_id":      "ID of the subnet for which to retrieve the shared projects",
		},
		"list_subnets": {
			"availability_zone":   "Availability zone where the subnet is located<br/> - `kr-central-2-a`: kr-central-2-a availability zone<br/> - `kr-central-2-b`: kr-central-2-b availability zone<br/> - `kr-central-2-c`: kr-central-2-c availability zone",
			"cidr_block":          "IPv4 CIDR block of the subnet (e.g., `10.0.1.0/24`)\n",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "ID of the subnet to retrieve",
			"is_shared":           "Whether the subnet is shared",
			"limit":               "Maximum number of items per page",
			"name":                "Name of the subnet to retrieve",
			"offset":              "Starting position for retrieval",
			"operating_status":    "Operating status<br/> - `ONLINE`: Online<br/> - `OFFLINE`: Offline<br/> - `IN_MAINTENANCE`: Under maintenance<br/> - `ERROR`: Error occurred",
			"provisioning_status": "Provisioning status<br/> - `ACTIVE`: Active<br/> - `DELETED`: Deleted<br/> - `ERROR`: Error occurred<br/> - `PENDING_CREATE`: Pending creation<br/> - `PENDING_UPDATE`: Pending update<br/> - `PENDING_DELETE`: Pending deletion",
			"route_table_id":      "ID of the associated route table\n",
			"route_table_name":    "Name of the associated route table\n",
			"sort_dirs":           "Sorting direction (`asc`, `desc`)\n",
			"sort_keys":           "Fields to sort by, separated by commas\n\n\n\n",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
			"vpc_id":              "ID of the associated VPC",
			"vpc_name":            "Name of the associated VPC",
		},
		"list_vpcs": {
			"cidr_block":          "IPv4 CIDR block of the VPC (e.g., `10.0.0.0/16`)\n",
			"created_at":          "Time when the resource was created<br/> - ISO_8601 format<br/> - UTC standard",
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"id":                  "ID of the VPC to retrieve<br/>- Refer to the [List VPCs](https://docs.kakaocloud.com/openapi/bns/vpc/list-vpcs) API",
			"is_default":          "Whether the VPC is default",
			"limit":               "Maximum number of items per page",
			"name":                "Name of the VPC to retrieve",
			"offset":              "Starting position for retrieval",
			"provisioning_status": "Provisioning status<br/> - `ACTIVE`: Active<br/> - `DELETED`: Deleted<br/> - `ERROR`: Error occurred<br/> - `PENDING_CREATE`: Pending creation<br/> - `PENDING_UPDATE`: Pending update<br/> - `PENDING_DELETE`: Pending deletion",
			"sort_dirs":           "Sorting direction (`asc`, `desc`)\n",
			"sort_keys":           "Fields to sort by, separated by commas \n\n\n",
			"updated_at":          "Time when the resource was last updated<br/> - ISO_8601 format<br/> - UTC standard",
		},
		"put_bns_vpc": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_vpc_id":         "ID of the VPC to update",
		},
		"set_main_route_table": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_route_table_id": "ID of the route table to set as main\n",
		},
		"share_subnet": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_project_id":     "ID of the target project to share the subnet with\n",
			"path_subnet_id":      "ID of the subnet to share",
		},
		"unshare_subnet": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_project_id":     "ID of the target project to unshare",
			"path_subnet_id":      "ID of the subnet to unshare",
		},
		"update_network_interface": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_network_interface_id": "ID of the network interface to update",
		},
		"update_network_interface_allowed_addresses": {
			"header_x-auth-token":       "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_network_interface_id": "ID of the network interface to configure",
		},
		"update_route": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_route_id":       "Unique ID of the route",
			"path_route_table_id": "Unique ID of the route table",
		},
		"update_route_table_association": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_association_id": "ID identifying the route table and subnet association to update",
			"path_route_table_id": "ID of the route table mapped to the current association",
		},
		"update_subnet": {
			"header_x-auth-token": "- [API authentication token](https://docs.kakaocloud.com/en/start/api-preparation#get-api-authentication-token)",
			"path_subnet_id":      "ID of the subnet whose name will be updated",
		},
	},
}

func Description(serviceName, schemaName, fieldName string) string {
	if service, exists := Descriptions[serviceName]; exists {
		if schema, exists := service[schemaName]; exists {
			if desc, exists := schema[fieldName]; exists {
				return desc
			}
		}
	}
	return ""
}

func ParameterDescription(serviceName, operationName, paramName string) string {
	if service, exists := ParameterDescriptions[serviceName]; exists {
		if operation, exists := service[operationName]; exists {
			if desc, exists := operation[paramName]; exists {
				return desc
			}
		}
	}
	return ""
}

type Helper struct {
	service string
	schema  string
}

func S(service, schemaName string) *Helper {
	return &Helper{service: service, schema: schemaName}
}

func Bcs(schema string) *Helper {
	return &Helper{"bcs", schema}
}

func Iam(schema string) *Helper {
	return &Helper{"iam", schema}
}

func Image(schema string) *Helper {
	return &Helper{"image", schema}
}

func Kubernetesengine(schema string) *Helper {
	return &Helper{"kubernetesengine", schema}
}

func Loadbalancer(schema string) *Helper {
	return &Helper{"loadbalancer", schema}
}

func Network(schema string) *Helper {
	return &Helper{"network", schema}
}

func Schema(schema string) *Helper {
	return &Helper{"schema", schema}
}

func Volume(schema string) *Helper {
	return &Helper{"volume", schema}
}

func Vpc(schema string) *Helper {
	return &Helper{"vpc", schema}
}

func (h *Helper) String(field string) string {
	return Description(h.service, h.schema, field)
}
